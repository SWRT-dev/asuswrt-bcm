http://gcc.gnu.org/bugzilla/show_bug.cgi?id=44555

--- gcc-4_3-branch/gcc/ChangeLog	2010/08/11 11:56:15	163097
+++ gcc-4_3-branch/gcc/ChangeLog	2010/08/11 12:59:47	163098
@@ -3,6 +3,12 @@
 	* gimplify.c (gimplify_init_constructor): Do not create a temporary for
 	a volatile LHS if the constructor has only one element.
 
+2010-08-11  Richard Guenther  <rguenther@suse.de>
+
+	PR c/44555
+	* c-common.c (c_common_truthvalue_conversion): Remove
+	premature and wrong optimization concering ADDR_EXPRs.
+
 2010-05-22  Release Manager
 
 	* GCC 4.3.5 released.
--- gcc-4_3-branch/gcc/c-common.c	2010/08/11 11:56:15	163097
+++ gcc-4_3-branch/gcc/c-common.c	2010/08/11 12:59:47	163098
@@ -3013,20 +3013,7 @@
 		     inner);
 	    return truthvalue_true_node;
 	  }
-
-	/* If we still have a decl, it is possible for its address to
-	   be NULL, so we cannot optimize.  */
-	if (DECL_P (inner))
-	  {
-	    gcc_assert (DECL_WEAK (inner));
-	    break;
-	  }
-
-	if (TREE_SIDE_EFFECTS (inner))
-	  return build2 (COMPOUND_EXPR, truthvalue_type_node,
-			 inner, truthvalue_true_node);
-	else
-	  return truthvalue_true_node;
+	break;
       }
 
     case COMPLEX_EXPR:
--- gcc-4_3-branch/gcc/testsuite/ChangeLog	2010/08/11 11:56:15	163097
+++ gcc-4_3-branch/gcc/testsuite/ChangeLog	2010/08/11 12:59:47	163098
@@ -1,3 +1,8 @@
+2010-08-11  Richard Guenther  <rguenther@suse.de>
+
+	PR c/44555
+	* gcc.c-torture/execute/pr44555.c: New testcase.
+
 2010-05-27  Jason Merrill  <jason@redhat.com>
 
 	PR c++/43555
--- /dev/null	2009-04-14 14:16:40.000000000 +0400
+++ gcc-4_3-branch/gcc/testsuite/gcc.c-torture/execute/pr44555.c	2010-09-04 16:19:56.000000000 +0400
@@ -0,0 +1,16 @@
+struct a {
+    char b[100];
+};
+int foo(struct a *a)
+{
+  if (&a->b)
+    return 1;
+  return 0;
+}
+extern void abort (void);
+int main()
+{
+  if (foo((struct a *)0) != 0)
+    abort ();
+  return 0;
+}
