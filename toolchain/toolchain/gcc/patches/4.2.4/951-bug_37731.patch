http://gcc.gnu.org/bugzilla/show_bug.cgi?id=37731

2008-10-07  H.J. Lu  <hongjiu.lu@intel.com>

	PR middle-end/37731
gcc/
	* expmed.c (expand_mult): Properly check DImode constant in
	CONST_DOUBLE.
gcc/testsuite/
	* gcc.dg/torture/pr37731-1.c: New.
	* gcc.dg/torture/pr37731-2.c: Likewise.

--- gcc-4_2-branch/gcc/expmed.c	2008/10/07 18:48:59	140949
+++ gcc-4_2-branch/gcc/expmed.c	2008/10/07 18:50:46	140950
@@ -3163,7 +3163,8 @@
 	{
 	  /* If we are multiplying in DImode, it may still be a win
 	     to try to work with shifts and adds.  */
-	  if (CONST_DOUBLE_HIGH (op1) == 0)
+	  if (CONST_DOUBLE_HIGH (op1) == 0
+	      && CONST_DOUBLE_LOW (op1) > 0)
 	    coeff = CONST_DOUBLE_LOW (op1);
 	  else if (CONST_DOUBLE_LOW (op1) == 0
 		   && EXACT_POWER_OF_2_OR_ZERO_P (CONST_DOUBLE_HIGH (op1)))
--- gcc-4_2-branch/gcc/testsuite/gcc.dg/torture/pr37731-1.c	1970-01-01 03:00:00.000000000 +0300
+++ gcc-4_2-branch/gcc/testsuite/gcc.dg/torture/pr37731-1.c	2009-12-05 19:21:10.000000000 +0300
@@ -0,0 +1,17 @@
+/* { dg-do run } */
+
+extern void abort ();
+
+unsigned long long xh = 1;
+
+int
+main ()
+{
+  unsigned long long yh = 0xffffffffull;
+  unsigned long long z = xh * yh;
+
+  if (z != yh)
+    abort ();
+
+  return 0;
+}
--- gcc-4_2-branch/gcc/testsuite/gcc.dg/torture/pr37731-2.c	1970-01-01 03:00:00.000000000 +0300
+++ gcc-4_2-branch/gcc/testsuite/gcc.dg/torture/pr37731-2.c	2009-12-05 19:21:20.000000000 +0300
@@ -0,0 +1,17 @@
+/* { dg-do run } */
+
+extern void abort ();
+
+long long xh = 1;
+
+int
+main ()
+{
+  long long yh = 0xffffffffll;
+  long long z = xh * yh;
+
+  if (z != yh)
+    abort ();
+
+  return 0;
+}
