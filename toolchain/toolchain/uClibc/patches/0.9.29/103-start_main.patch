 Add compatibility with old uClibc versions less than 0.9.28 but newer than 0.9.15
  dl-hash.c name mapper adds thunk to  __uClibc_start_main  function
  
diff -urbB uClibc-0.9.29.orig/ldso/include/dl-hash.h uClibc-0.9.29/ldso/include/dl-hash.h
--- uClibc-0.9.29.orig/ldso/include/dl-hash.h	2006-09-19 05:29:11.000000000 +0400
+++ uClibc-0.9.29/ldso/include/dl-hash.h	2008-07-07 20:27:43.000000000 +0400
@@ -80,6 +80,8 @@
 	DL_LOADADDR_TYPE loadaddr, unsigned long * dynamic_info,
 	unsigned long dynamic_addr, unsigned long dynamic_size);
 
+extern void _dl_hash_init(void);
+
 extern char * _dl_find_hash(const char * name, struct dyn_elf * rpnt1,
 			    struct elf_resolve *mytpnt, int type_class);
 
diff -urbB uClibc-0.9.29.orig/ldso/ldso/dl-hash.c uClibc-0.9.29/ldso/ldso/dl-hash.c
--- uClibc-0.9.29.orig/ldso/ldso/dl-hash.c	2007-01-10 01:30:16.000000000 +0300
+++ uClibc-0.9.29/ldso/ldso/dl-hash.c	2008-07-08 00:45:51.000000000 +0400
@@ -123,6 +123,21 @@
 	return tpnt;
 }
 
+/* Add compatibility with old uClibc versions less than 0.9.28 but newer than 0.9.15 */
+static char *__Start_Old_main_name;
+static Elf_Symndx __Start_Old_main_hash;
+
+static void (*__uClibc_main)(void *main, int argc, char **argv,
+	     void (*app_init)(void), void (*app_fini)(void),
+	     void (*rtld_fini)(void), void *stack_end) = NULL;
+static int (*__main)(int argc, char **argv, char **envp) = NULL;
+
+static void __uClibc_start_main(int argc, char **argv, char **envp,
+            void (*app_fini)(void), void (*app_init)(void))
+{
+    (*__uClibc_main)(__main, argc, argv, app_init, app_fini, NULL, NULL);
+}
+
 
 /*
  * This function resolves externals, and this is either called when we process
@@ -134,12 +149,21 @@
 	int si;
 	char *strtab;
 	ElfW(Sym) *symtab;
-	unsigned long elf_hash_number, hn;
+	Elf_Symndx elf_hash_number, hn;
 	const ElfW(Sym) *sym;
 	char *weak_result = NULL;
 
 	elf_hash_number = _dl_elf_hash((const unsigned char *)name);
 
+	/* Check for unresolved old main entry (hash comparsion for speed) */
+	if (elf_hash_number == __Start_Old_main_hash) {
+		if (_dl_strcmp(name, __Start_Old_main_name) == 0) {
+			__main = _dl_find_hash("main", rpnt, mytpnt, type_class);
+			__uClibc_main = _dl_find_hash("__uClibc_main", rpnt, mytpnt, type_class);
+			return (char *) &__uClibc_start_main;
+		}
+	}
+
 	for (; rpnt; rpnt = rpnt->next) {
 		tpnt = rpnt->dyn;
 
@@ -196,3 +220,11 @@
 	}
 	return weak_result;
 }
+
+/* Init globals */
+void _dl_hash_init(void)
+{
+    __Start_Old_main_name = "__uClibc_start_main\0";
+    __Start_Old_main_hash = _dl_elf_hash((const unsigned char *)__Start_Old_main_name);
+    _dl_debug_early("thunk name='%s', hash=%x \n", __Start_Old_main_name, __Start_Old_main_hash);
+}
diff -urbB uClibc-0.9.29.orig/ldso/ldso/ldso.c uClibc-0.9.29/ldso/ldso/ldso.c
--- uClibc-0.9.29.orig/ldso/ldso/ldso.c	2007-03-31 17:42:48.000000000 +0400
+++ uClibc-0.9.29/ldso/ldso/ldso.c	2008-07-07 23:48:05.000000000 +0400
@@ -243,6 +243,9 @@
 	 * linking.
 	 */
 
+        /* Perform additional init of global vars in dl-hash */
+        _dl_hash_init();
+
 	/* Find the runtime load address of the main executable.  This may be
 	 * different from what the ELF header says for ET_DYN/PIE executables.
 	 */
