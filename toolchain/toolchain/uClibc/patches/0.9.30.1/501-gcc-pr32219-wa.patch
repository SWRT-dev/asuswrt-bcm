From 2e53dd645d5348f207cec7f8595969dc566c5a55
From: Denys Vlasenko
Date: Mon, 17 May 2010 13:56:19 +0000
Subject: workaround GCC PR32219

we ended up calling 0
Fixes bug #1033 - https://bugs.uclibc.org/1033

Signed-off-by: Denys Vlasenko <vda.linux@googlemail.com>
Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
---
From aa67771881d65373da448ad5f7a8393f3a1d9469
From: Timo Teräs
Date: Wed, 30 Jun 2010 11:46:37 +0000
Subject: more workarounds for GCC PR32219

Commit 2e53dd645d5348f207cec7f8595969dc566c5a55 workarounds GCC
bug when accessing _locale_init and _stdio_init. We need the same
fix for __errno_location and __h_errno_location otherwise we crash
calling null with static and non-threaded builds.

Signed-off-by: Timo Teräs <timo.teras@iki.fi>
Signed-off-by: Bernhard Reutner-Fischer <rep.dot.nop@gmail.com>
---
diff --git a/libc/misc/internals/__uClibc_main.c b/libc/misc/internals/__uClibc_main.c
index f9e1244..4ee4443 100644
--- a/libc/misc/internals/__uClibc_main.c
+++ b/libc/misc/internals/__uClibc_main.c
@@ -105,6 +105,17 @@ _pthread_cleanup_pop_restore(struct _pthread_cleanup_buffer *__buffer,
 void internal_function _dl_aux_init (ElfW(auxv_t) *av);
 #endif /* !SHARED */
 
+/* Defeat compiler optimization which assumes function addresses are never NULL */
+static __always_inline int not_null_ptr(const void *p)
+{
+	const void *q;
+	__asm__ (""
+		: "=r" (q) /* output */
+		: "0" (p) /* input */
+	);
+	return q != 0;
+}
+
 /*
  * Prototypes.
  */
@@ -254,7 +265,7 @@ void __uClibc_init(void)
 
 #ifdef __UCLIBC_HAS_LOCALE__
     /* Initialize the global locale structure. */
-    if (likely(_locale_init!=NULL))
+    if (likely(not_null_ptr(_locale_init)))
 	_locale_init();
 #endif
 
@@ -264,7 +275,7 @@ void __uClibc_init(void)
      * Thus we get a nice size savings because the stdio functions
      * won't be pulled into the final static binary unless used.
      */
-    if (likely(_stdio_init != NULL))
+    if (likely(not_null_ptr(_stdio_init)))
 	_stdio_init();
 
 }
@@ -447,11 +447,11 @@ void __uClibc_main(int (*main)(int, char **, char **), int argc,
      * have resulted in errno being set nonzero, so set it to 0 before
      * we call main.
      */
-    if (likely(__errno_location!=NULL))
+    if (likely(not_null_ptr(__errno_location)))
 	*(__errno_location()) = 0;
 
     /* Set h_errno to 0 as well */
-    if (likely(__h_errno_location!=NULL))
+    if (likely(not_null_ptr(__h_errno_location)))
 	*(__h_errno_location()) = 0;
 
     /*
--
cgit v0.8.2.1
