CURRENT=..
SEP=echo "\033[41;1m   $@   \033[0m"
export SRCBASE := $(shell cd ../;pwd)
BUILD := $(shell (gcc -dumpmachine))
HOSTCC := gcc
PLATFORM := i686-cm-linux-
CROSS_COMPILE := i686-cm-linux-
CROSS_COMPILER := $(CROSS_COMPILE)
CONFIGURE := ./configure --host=i686-cm-linux --build=$(BUILD)
TOOLCHAIN := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/.. && pwd)
#IPKG_TOOLS := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))../../../ipkg-utils-1.7 && pwd)
IPKG_TOOLS := ~/toolchain/ipkg-utils-1.7
#LD_DIR := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))../../../../staging && pwd)
LD_DIR := $(TOOLCHAIN)

export CC := $(CROSS_COMPILE)gcc
AR := $(CROSS_COMPILE)ar
AS := $(CROSS_COMPILE)as
export LD := $(CROSS_COMPILE)ld
NM := $(CROSS_COMPILE)nm
RANLIB := $(CROSS_COMPILE)ranlib
STRIP := $(CROSS_COMPILE)strip
SIZE := $(CROSS_COMPILE)size

obj-y += mkdir
obj-y += zlib
obj-y += libxml2
obj-y += openssl
obj-y += curl-7.21.7
obj-y += neon
obj-y += webdav
obj-y += WebDAV-ipk

all: $(obj-y)

clean:
	@$(MAKE) neon-clean
	@$(MAKE) -C webdav clean -f Makefile.mipsel
	@$(MAKE) libxml2-clean
	@$(MAKE) openssl-clean
	@$(MAKE) curl-7.21.7-clean
	@$(MAKE) zlib-clean
	rm -rf WebdavClient-ipk/opt/tmp/bin/*
	rm -rf WebdavClient-ipk/opt/tmp/lib/*
	rm -rf webdavclient*.ipk

mkdir:
	-mkdir -p WebdavClient-ipk/opt/tmp/bin/
	-mkdir -p WebdavClient-ipk/opt/tmp/lib/

neon-clean:
	@$(MAKE) -C $(CURRENT)/neon clean
	rm -rf $(CURRENT)/neon/stamp-h1

neon/stamp-h1:
	cd $(CURRENT)/neon
	touch stamp-h1

neon: neon/stamp-h1
	cd $(CURRENT)/neon && \
	AR=$(TOOLCHAIN)/bin/i686-cm-linux-ar AS=$(TOOLCHAIN)/bin/i686-cm-linux-as LD=$(TOOLCHAIN)/bin/i686-cm-linux-ld NM=$(TOOLCHAIN)/bin/i686-cm-linux-nm CC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CPP="$(TOOLCHAIN)/bin/i686-cm-linux-gcc -E" GCC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CXX=$(TOOLCHAIN)/bin/i686-cm-linux-g++ RANLIB=$(TOOLCHAIN)/bin/i686-cm-linux-ranlib STRIP=$(TOOLCHAIN)/bin/i686-cm-linux-strip \
	./configure --build=i386-pc-linux-gnu --host=i686-cm-linux --target=i686-cm-linux --prefix=/opt --disable-static --enable-shared --disable-nls --with-zlib --with-libxml2 --with-ssl=openssl --with-libs=$(SRCBASE)/openssl-ipk:$(SRCBASE)/libxml2 CFLAGS='-I$(SRCBASE)/zlib -I$(SRCBASE)/libxml2/include -I$(SRCBASE)/openssl-ipk/include' LDFLAGS='-L$(SRCBASE)/libxml2/.libs -L$(SRCBASE)/openssl-ipk -L$(SRCBASE)/zlib' LIBS='-lxml2 -lcrypto -lssl -lz' XML2_CONFIG='$(SRCBASE)/libxml2/xml2-config'
	cp -f $(CURRENT)/neon/config.h $(CURRENT)/neon/src/config.h
	@$(MAKE) -C $(CURRENT)/neon
	cp -rf $(CURRENT)/neon/src/.libs/libneon.so.27.2.6 WebdavClient-ipk/opt/tmp/lib/

webdav-clean:
	@$(MAKE) -C $(CURRENT)/webdav_client clean -f Makefile.mipsel
	rm -rf webdav/stamp-h1

webdav/stamp-h1:
	cd $(CURRENT)/webdav_client
	touch stamp-h1

webdav: webdav/stamp-h1
	@$(MAKE) -C $(CURRENT)/webdav_client -f Makefile.mipsel I686_D=1
	cp -rf $(CURRENT)/webdav_client/webdav_client WebdavClient-ipk/opt/tmp/bin/



libxml2-clean:
	@$(MAKE) -C $(CURRENT)/libxml2 clean
	rm -rf $(CURRENT)/libxml2/stamp-h1

libxml2/stamp-h1:
	cd $(CURRENT)/libxml2
	touch stamp-h1

libxml2: libxml2/stamp-h1
	cd $(CURRENT)/libxml2 && autoreconf -i -f && \
	AR=$(TOOLCHAIN)/bin/i686-cm-linux-ar AS=$(TOOLCHAIN)/bin/i686-cm-linux-as LD=$(TOOLCHAIN)/bin/i686-cm-linux-ld NM=$(TOOLCHAIN)/bin/i686-cm-linux-nm CC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CPP="$(TOOLCHAIN)/bin/i686-cm-linux-gcc -E" GCC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CXX=$(TOOLCHAIN)/bin/i686-cm-linux-g++ RANLIB=$(TOOLCHAIN)/bin/i686-cm-linux-ranlib STRIP=$(TOOLCHAIN)/bin/i686-cm-linux-strip CPPFLAGS="-O2   -pipe  -I$(TOOLCHAIN)/include " LDFLAGS=" -L$(LD_DIR)/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(LD_DIR)/lib " \
	./configure --build=i386-pc-linux-gnu --host=i686-cm-linux --target=i686-cm-linux --prefix=/opt --disable-nls --disable-static --enable-shared --without-python
	@$(MAKE) -C $(CURRENT)/libxml2 all

openssl-clean:
	@$(MAKE) -C $(CURRENT)/openssl-ipk clean
	rm -rf $(CURRENT)/openssl-ipk/stamp-h1

openssl/stamp-h1:
	cd $(CURRENT)/openssl-ipk
	touch stamp-h1

openssl: openssl/stamp-h1
	cd $(CURRENT)/openssl-ipk && \
	AR=$(TOOLCHAIN)/bin/i686-cm-linux-ar AS=$(TOOLCHAIN)/bin/i686-cm-linux-as LD=$(TOOLCHAIN)/bin/i686-cm-linux-ld NM=$(TOOLCHAIN)/bin/i686-cm-linux-nm CC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CPP="$(LD_DIR)/bin/i686-cm-linux-gcc -E" GCC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CXX=$(TOOLCHAIN)/bin/i686-cm-linux-g++ RANLIB=$(TOOLCHAIN)/bin/i686-cm-linux-ranlib STRIP=$(TOOLCHAIN)/bin/i686-cm-linux-strip \
		./Configure \
			shared no-zlib \
			-O2   -pipe  -I$(LD_DIR)/opt/include \
			--openssldir=$(SRCBASE)/opt/share/openssl \
			--prefix=$(SRCBASE)/opt \
			linux-generic32 
	@$(MAKE) -C $(CURRENT)/openssl-ipk \
		AR=$(TOOLCHAIN)/bin/i686-cm-linux-ar AS=$(TOOLCHAIN)/bin/i686-cm-linux-as LD=$(TOOLCHAIN)/bin/i686-cm-linux-ld NM=$(TOOLCHAIN)/bin/i686-cm-linux-nm CC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CPP="$(TOOLCHAIN)/bin/i686-cm-linux-gcc -E" GCC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CXX=$(TOOLCHAIN)/bin/i686-cm-linux-g++ RANLIB=$(TOOLCHAIN)/bin/i686-cm-linux-ranlib STRIP=$(TOOLCHAIN)/bin/i686-cm-linux-strip \
		AR="$(AR) r" \
		\
		\
		MANDIR=/opt/man \
		EX_LIBS=" -L$(SRCBASE)/opt/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(TOOLCHAIN)/lib -ldl" \
		DIRS="crypto ssl apps test"
	 cd $(CURRENT)/openssl-ipk && \
	$(MAKE) install

curl-7.21.7-clean:
	@$(MAKE) -C $(CURRENT)/curl-7.21.7 clean
	rm -rf $(CURRENT)/curl-7.21.7/stamp-h1

curl-7.21.7/stamp-h1:
	cd $(CURRENT)/curl-7.21.7
	touch stamp-h1

curl-7.21.7: curl-7.21.7/stamp-h1
	cd $(CURRENT)/curl-7.21.7 && \
	AR=$(TOOLCHAIN)/bin/i686-cm-linux-ar AS=$(TOOLCHAIN)/bin/i686-cm-linux-as LD=$(TOOLCHAIN)/bin/i686-cm-linux-ld NM=$(TOOLCHAIN)/bin/i686-cm-linux-nm CC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CPP="$(LD_DIR)/bin/i686-cm-linux-gcc -E" GCC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CXX=$(TOOLCHAIN)/bin/i686-cm-linux-g++ RANLIB=$(TOOLCHAIN)/bin/i686-cm-linux-ranlib STRIP=$(TOOLCHAIN)/bin/i686-cm-linux-strip \
	./configure  --prefix=$(LD_DIR) --enable-http --with-ssl=$(SRCBASE)/openssl-ipk LDFLAGS="-ldl" CFLAGS="-g3 -O2" LDFLAGS="-g3 -O2"  --host=i686-cm-linux
	@$(MAKE) -C $(CURRENT)/curl-7.21.7 all

zlib-clean:
	@$(MAKE) -C $(CURRENT)/zlib clean
	rm -rf $(CURRENT)/zlib/stamp-h1

zlib/stamp-h1:
	cd $(CURRENT)/zlib
	touch stamp-h1

zlib: zlib/stamp-h1
	cd $(CURRENT)/zlib && \
	AR=$(TOOLCHAIN)/bin/i686-cm-linux-ar AS=$(TOOLCHAIN)/bin/i686-cm-linux-as LD=$(TOOLCHAIN)/bin/i686-cm-linux-ld NM=$(TOOLCHAIN)/bin/i686-cm-linux-nm CC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CPP="$(TOOLCHAIN)/bin/i686-cm-linux-gcc -E" GCC=$(TOOLCHAIN)/bin/i686-cm-linux-gcc CXX=$(TOOLCHAIN)/bin/i686-cm-linux-g++ RANLIB=$(TOOLCHAIN)/bin/i686-cm-linux-ranlib STRIP=$(TOOLCHAIN)/bin/i686-cm-linux-strip \
	./configure --shared
	@$(MAKE) -C $(CURRENT)/zlib all

WebDAV-ipk:
	cp -rf AiCloud-tmp/CONTROL/control-webdav-i686 WebdavClient-ipk/CONTROL/control
	$(STRIP) WebdavClient-ipk/opt/tmp/bin/*
	$(STRIP) WebdavClient-ipk/opt/tmp/lib/*
	@$(IPKG_TOOLS)/ipkg-build WebdavClient-ipk ./
