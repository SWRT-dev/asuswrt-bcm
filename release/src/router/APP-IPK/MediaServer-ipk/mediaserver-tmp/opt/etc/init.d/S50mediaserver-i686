#! /bin/sh

CHECK_MS=`ls /usr/sbin | grep minidlna`
if [ ! -z "$CHECK_MS" ]; then
	exit 1
fi

PRODUCTID=`nvram get productid`
ODMPID=`nvram get odmpid`
if [ -n "$ODMPID" ];then
	PRODUCTID=$ODMPID
fi
MACADDR=`nvram get et0macaddr`
MACLASTWORD=`echo $MACADDR | sed '/^.*/s/://g'`
MACLASTWORD=${MACLASTWORD:8}

MS_ITUNES=`nvram get ms_itunes`
if [ -n "$MS_ITUNES" ]; then
	DAAPD_NAME=$MS_ITUNES
else
	DAAPD_NAME=$PRODUCTID-$MACLASTWORD
fi

#daapd
DAAPD_PW=`nvram get http_passwd`
RUN_NAME=`nvram get http_username`

ACTUAL_S_SYSTEM=`nvram get Second_System`
ACTUAL_F_SYSTEM=`nvram get First_System`

PATH=/sbin:/usr/sbin:/bin:/usr/bin:/opt/bin

APPS_DEV=`nvram get apps_dev`
APPS_MOUNTED_PATH=`nvram get apps_mounted_path`
APPS_INSTALL_FOLDER=`nvram get apps_install_folder`
APPS_INSTALL_PATH=$APPS_MOUNTED_PATH/$APPS_INSTALL_FOLDER
APPS_PATH=${APPS_MOUNTED_PATH:9}

# leo added for port {

DM_PORT=`nvram get dm_http_port`
if [ -z "$DM_PORT" ]; then
DM_PORT=8081
fi

# leo added for port }

_generate_itune_service_config(){
	if [ ! -d "/tmp/avahi/services" ]; then
		mkdir -p /tmp/avahi/services
	fi
	chmod -R 777 /tmp/avahi/services

	if [ ! -f "/tmp/avahi/services/mt-daap.service" ]; then
		cd /tmp/avahi/services
		touch mt-daap.service
		chmod 777 /tmp/avahi/services/mt-daap.service
		echo "<service-group>" >/tmp/avahi/services/mt-daap.service
		echo "<name replace-wildcards=\"yes\">$PRODUCTID-$MACLASTWORD</name>" >>/tmp/avahi/services/mt-daap.service
		echo "<service>" >>/tmp/avahi/services/mt-daap.service
		echo "<type>_daap._tcp</type>" >>/tmp/avahi/services/mt-daap.service
		echo "<port>3689</port>" >>/tmp/avahi/services/mt-daap.service
		echo "<txt-record>txtvers=1 iTShVersion=131073 Version=196610</txt-record>" >>/tmp/avahi/services/mt-daap.service
		echo "</service>" >>/tmp/avahi/services/mt-daap.service	
		echo "</service-group>" >>/tmp/avahi/services/mt-daap.service
	else
		chmod 777 /tmp/avahi/services/mt-daap.service
		sed -i "2s/^.*$/<name replace-wildcards=\"yes\">$MS_ITUNES<\/name>/" /tmp/avahi/services/mt-daap.service
	fi
}


_base_lib_link(){
#only for fat32
APPS_DEV=`nvram get apps_dev`
APPS_MOUNTED_TYPE=`mount |grep "/dev/$APPS_DEV on " |awk '{print $5}'`
APP_LINK_DIR=/tmp/opt
APP_LINK_LIB=$APP_LINK_DIR/lib
APP_LIB=$APPS_INSTALL_PATH/lib
LIBPTH_VER=`ls -al /opt/lib/ |grep libpthread.so.0 |awk '{print $11}'| awk 'BEGIN {FS="-"}{print $2}'|awk 'BEGIN {FS=".so"} {print $1}'`
LIBSTD_VER=`ls -al /opt/lib/ |grep "libstdc++.so.6 -" | awk '{print $11}' |awk 'BEGIN {FS="so."}{print $2}'`
if [ "$APPS_MOUNTED_TYPE" == "vfat" ] || [ "$APPS_MOUNTED_TYPE" == "tfat" ]; then


	if [ "$LIBPTH_VER" != "2.12.1" ] || [ "$LIBSTD_VER" != "2.12.1" ] ;then
		ln -sf $APP_LIB/libpthread-2.12.1.so $APP_LINK_LIB/libpthread.so.0
		ln -sf $APP_LIB/libpthread-2.12.1.so $APP_LINK_LIB/libpthread.so
		ln -sf $APP_LIB/libstdc++.so.6.0.14 $APP_LINK_LIB/libstdc++.so.6
		ln -sf $APP_LIB/libstdc++.so.6.0.14 $APP_LINK_LIB/libstdc++.so
		
	fi
else
        if [ "$LIBPTH_VER" != "2.12.1" ] || [ "$LIBSTD_VER" != "2.12.1" ] ;then
		ln -sf $APPS_INSTALL_PATH/lib/libpthread-2.12.1.so $APPS_INSTALL_PATH/lib/libpthread.so.0
		ln -sf $APPS_INSTALL_PATH/lib/libpthread-2.12.1.so $APPS_INSTALL_PATH/lib/libpthread.so
		ln -sf $APPS_INSTALL_PATH/lib/libstdc++.so.6.0.14 $APPS_INSTALL_PATH/lib/libstdc++.so.6
		ln -sf $APPS_INSTALL_PATH/lib/libstdc++.so.6.0.14 $APPS_INSTALL_PATH/lib/libstdc++.so
		
	fi


fi

}


_base_lib_link



if [ "$1" != "stop" ]; then
	#nvram recover
	MS_DLNA_ENABLE=`nvram get ms_dlna`
	MS_DAAPD_ENABLE=`nvram get ms_daapd`
	MS_PATH=`nvram get ms_path`
	MS_TYPE=`nvram get ms_path_type`
	MS_NAME=`nvram get ms_name`
	MS_DIR_MANUAL=`nvram get ms_dir_manual`

	if [ ! -d "/tmp/Mediaserver" ]; then
	mkdir -p /tmp/Mediaserver
	fi
	chmod -R 777 /tmp/Mediaserver

	if [ ! -d "/tmp/asus_app" ]; then
	mkdir -p /tmp/asus_app
	fi
	chmod -R 777 /tmp/asus_app	

	if [ ! -f "/tmp/Mediaserver/ports.conf" ]; then
	cd /tmp/Mediaserver
	touch ports.conf
	fi

	chmod 777 /tmp/Mediaserver/ports.conf

#nvram recover
#echo "MS_DLNA_ENABLE=$MS_DLNA_ENABLE"
	if [ -z "$MS_DLNA_ENABLE" ] ; then
		nvram set ms_dlna=1
		nvram set ms_daapd=0
		nvram set ms_path="</tmp/mnt"
		nvram set ms_path_type="<APV"
		nvram set ms_name=$PRODUCTID-$MACLASTWORD
		nvram set ms_itunes=$PRODUCTID-$MACLASTWORD
		nvram set ms_dir_manual=0
		nvram commit
		echo "dms_enable=1" >/opt/etc/Mediaserver.conf
		echo "daapd_enable=0" >>/opt/etc/Mediaserver.conf
		echo "mediasever_path=</tmp/mnt/" >>/opt/etc/Mediaserver.conf
		echo "ms_type=<APV" >>/opt/etc/Mediaserver.conf
		echo "friendly_name=$PRODUCTID-$MACLASTWORD" >>/opt/etc/Mediaserver.conf
		echo "itunes_name=$PRODUCTID-$MACLASTWORD" >>/opt/etc/Mediaserver.conf
		echo "dms_dir_manual=0" >>/opt/etc/Mediaserver.conf
		sed -n "/media_dir/d" /opt/etc/minidlna.conf
		sed -i "12s/^.*$/media_dir=\/tmp\/mnt/" /opt/etc/minidlna.conf
		#sed -i "64s/^.*$/mp3_dir    \/tmp\/mnt/" /opt/etc/mt-daapd.conf
	elif [ -z "$MS_NAME" ]; then     ##/* old MS upgrade to new MS */
		nvram set ms_path="<$MS_PATH"
		nvram set ms_path_type="<APV"
		nvram set ms_name=$PRODUCTID-$MACLASTWORD
		nvram set ms_itunes=$PRODUCTID-$MACLASTWORD
		nvram set ms_dir_manual=1
		nvram commit
		echo "dms_enable=$MS_DLNA_ENABLE" >/opt/etc/Mediaserver.conf
		echo "daapd_enable=$MS_DAAPD_ENABLE" >>/opt/etc/Mediaserver.conf
		echo "mediasever_path=<$MS_PATH" >>/opt/etc/Mediaserver.conf
		echo "ms_type=<APV" >>/opt/etc/Mediaserver.conf
		echo "friendly_name=$PRODUCTID-$MACLASTWORD" >>/opt/etc/Mediaserver.conf
		echo "itunes_name=$PRODUCTID-$MACLASTWORD" >>/opt/etc/Mediaserver.conf
		echo "dms_dir_manual=1" >>/opt/etc/Mediaserver.conf
		sed -n "/media_dir/d" /opt/etc/minidlna.conf
		MS_PATH_TMP=`echo $MS_PATH|sed -n 's/\//\\\\\//pg'`
		sed -i "12s/^.*$/media_dir=$MS_PATH_TMP/" /opt/etc/minidlna.conf
		#MS_PATH_TMP=`echo $MS_PATH|sed -n 's/\//\\\\\//pg'`
		#sed -i "13s/^.*$/media_dir=$MS_PATH_TMP/" /opt/etc/minidlna.conf
		#sed -i "64s/^.*$/mp3_dir    $MS_PATH_TMP/" /opt/etc/mt-daapd.conf
	else
		echo "dms_enable=$MS_DLNA_ENABLE" >/opt/etc/Mediaserver.conf
		echo "daapd_enable=$MS_DAAPD_ENABLE" >>/opt/etc/Mediaserver.conf
		echo "mediasever_path=$MS_PATH" >>/opt/etc/Mediaserver.conf
		echo "ms_type=$MS_TYPE" >>/opt/etc/Mediaserver.conf
		echo "friendly_name=$MS_NAME" >>/opt/etc/Mediaserver.conf
		echo "itunes_name=$MS_ITUNES" >>/opt/etc/Mediaserver.conf
		echo "dms_dir_manual=$MS_DIR_MANUAL" >>/opt/etc/Mediaserver.conf
		sed -i "/media_dir/d" /opt/etc/minidlna.conf
		path_type=`echo $MS_TYPE | awk  'BEGIN {FS="<"} {for(i=2;i<=NF;i++)print $i}'`
		j=2
		#line=12
		for i in $path_type
		do
			if [ $j -le 11 ]; then
				path_real=`echo $MS_PATH | awk 'BEGIN {FS="<"} {print $'$j'}'`
			fi
			#MS_PATH_TMP=`echo $path_real|sed -n 's/\//\\\\\//pg'`
			j=$(($j+1))
			if [ "$i" == "APV" ]; then
				#sed -i ""$line"s/^.*$/media_dir=$MS_PATH_TMP/" /opt/etc/minidlna.conf
				echo "media_dir=$path_real/" >> /opt/etc/minidlna.conf
			else
				#sed -i ""$line"s/^.*$/media_dir=$i,$MS_PATH_TMP/" /opt/etc/minidlna.conf
				echo "media_dir=$i,$path_real/" >>/opt/etc/minidlna.conf
			fi 
			#line=$(($line+1))
		done
	fi
fi

if [ ! -f "$dir_control_file" ] || [ "$1" == "start" ] || [ "$1" == "restart" ];then
	sh /opt/etc/apps_asus_script/mes_check_general general-check
fi

dir_control_file=$APPS_INSTALL_PATH/etc/mes_general.conf

if [ "$1" != "stop" ]; then
	#ports
	EHCI_PORTS=`nvram get ehci_ports`
	OHCI_PORTS=`nvram get ohci_ports`

	#minidlna
	HWADDR=`nvram get lan_hwaddr`
	DMS_PORT=`nvram get dms_port`
	
	#avahi
	WAN_IFNAME=`nvram get wan0_ifname`

	if [ ! -z "$DMS_PORT" ]; then
	DLNA_PORT=$DMS_PORT
	else
	DLNA_PORT=8200
	fi
	LAN_NAME=`nvram get lan_ifname`
	DMS_RESCAN=`nvram get dms_rescan`
	if [ ! -z "$DMS_PORT" ]; then
		if [ "$DMS_RESCAN" == "1" ]; then
			INOTIFY=yes
		else
			INOTIFY=no
		fi
	else
	INOTIFY=yes
	fi

	DMS_TIVO=`nvram get dms_tivo`
	if [ ! -z "$DMS_TIVO" ]; then
		if [ "$DMS_TIVO" == "1" ]; then 
			TIVO=yes
		else
			TIVO=no
		fi
	else
	TIVO=no
	fi

	DMS_STDLNA=`nvram get dms_stdlna`
	if [ ! -z "$MDS_STDLNA" ]; then
		if [ "$DMS_STDLNA" == "1" ]; then 
			DLNA=yes
		else
			DLNA=no
		fi
	else
	DLNA=no
	fi
	LAN_IPADDR=`nvram get ${ACTUAL_F_SYSTEM}lan_ipaddr`
  LAN_IP_S=`nvram get lan_ipaddr`
		while [ ! -f "$dir_control_file" ]
		do
			sleep 2
		done

	DLNA_NAME=`nvram get ms_name`

	#daapd
	if [ -f "/opt/etc/mt-daapd.conf" ]; then
	sed -i "9s/^.*$/admin_pw    $DAAPD_PW/" /opt/etc/mt-daapd.conf
	sed -i "11s/^.*$/servername   $DAAPD_NAME/" /opt/etc/mt-daapd.conf
	sed -i "12s/^.*$/runas   $RUN_NAME/" /opt/etc/mt-daapd.conf
	fi
	
	#avahi
	_generate_itune_service_config
	if [ ! -d "/tmp/avahi" ]; then
		mkdir -p /tmp/avahi
	fi
	chmod -R 777 /tmp/avahi
	if [ -f "/tmp/avahi/avahi-daemon.conf" ]; then
		sed -i "2s/^.*$/host-name=$MS_ITUNES/" /tmp/avahi/avahi-daemon.conf
		sed -i "3s/^.*$/aliases=$PRODUCTID/" /tmp/avahi/avahi-daemon.conf
		sed -i "4s/^.*$/aliases_llmnr=$PRODUCTID/" /tmp/avahi/avahi-daemon.conf
		sed -i "7s/^.*$/deny-interfaces=$WAN_IFNAME/" /tmp/avahi/avahi-daemon.conf
	else
		echo "[Server]" >/tmp/avahi/avahi-daemon.conf
		echo "host-name=$PRODUCTID-$MACLASTWORD" >>/tmp/avahi/avahi-daemon.conf
		echo "aliases=$PRODUCTID" >>/tmp/avahi/avahi-daemon.conf
		echo "aliases_llmnr=$PRODUCTID" >>/tmp/avahi/avahi-daemon.conf
		echo "use-ipv4=yes" >>/tmp/avahi/avahi-daemon.conf
		echo "use-ipv6=no" >>/tmp/avahi/avahi-daemon.conf
		echo "deny-interfaces=$WAN_IFNAME" >>/tmp/avahi/avahi-daemon.conf
		echo "ratelimit-interval-usec=1000000" >>/tmp/avahi/avahi-daemon.conf
		echo "ratelimit-burst=1000" >>/tmp/avahi/avahi-daemon.conf
		echo "" >>/tmp/avahi/avahi-daemon.conf
		echo "[publish]" >>/tmp/avahi/avahi-daemon.conf
		echo "publish-a-on-ipv6=no" >>/tmp/avahi/avahi-daemon.conf
		echo "publish-aaaa-on-ipv4=no" >>/tmp/avahi/avahi-daemon.conf
		echo "" >>/tmp/avahi/avahi-daemon.conf
		echo "[wide-area]" >>/tmp/avahi/avahi-daemon.conf
		echo "enable-wide-area=yes" >>/tmp/avahi/avahi-daemon.conf
		echo "" >>/tmp/avahi/avahi-daemon.conf
		echo "[rlimits]" >>/tmp/avahi/avahi-daemon.conf
		echo "rlimit-core=0" >>/tmp/avahi/avahi-daemon.conf
		echo "rlimit-data=4194304" >>/tmp/avahi/avahi-daemon.conf
		echo "rlimit-fsize=0" >>/tmp/avahi/avahi-daemon.conf
		echo "rlimit-nofile=768" >>/tmp/avahi/avahi-daemon.conf
		echo "rlimit-stack=4194304" >>/tmp/avahi/avahi-daemon.conf
		echo "rlimit-nproc=3" >>/tmp/avahi/avahi-daemon.conf
	fi
	echo "$RUN_NAME" >/tmp/avahi/http_username
	
	#minidlna
	if [ -f "/opt/etc/minidlna.conf" ]; then
	#sed -i "5s/^.*$/network_interface=$LAN_NAME/" /opt/etc/minidlna.conf
	sed -i "2s/^.*$/friendly_name=$DLNA_NAME/" /opt/etc/minidlna.conf
	sed -i "9s/^.*$/presentation_url=http:\/\/$LAN_IPADDR\:8200/" /opt/etc/minidlna.conf
	sed -i "11s/^.*$/serial=$HWADDR/" /opt/etc/minidlna.conf
	fi

	#ports
	sed -i "/ehci_ports/d" /tmp/Mediaserver/ports.conf
	echo "ehci_ports=$EHCI_PORTS/" >>/tmp/Mediaserver/ports.conf
	sed -i "/ohci_ports/d" /tmp/Mediaserver/ports.conf
	echo "ohci_ports=$OHCI_PORTS/" >>/tmp/Mediaserver/ports.conf

	#renew router model for WIN8 icon
	#sed -i "20s/^.*$/PRODUCTID=$PRODUCTID/" $dir_control_file
	#sed -i "20s/^.*$/PRODUCTID=$PRODUCTID/" $APPS_INSTALL_PATH/etc/mes_general_bak.conf
fi

MINIDLNA=`nvram get ms_dlna`
DAAPD=`nvram get ms_daapd`

APP_BIN=$APPS_INSTALL_PATH/bin
APP_LIB=$APPS_INSTALL_PATH/lib

APP_LINK_DIR=/tmp/opt
APP_LINK_BIN=$APP_LINK_DIR/bin
APP_LINK_LIB=$APP_LINK_DIR/lib



case "$1" in
  start)
	rm -rf /tmp/have_ms
	sh /opt/etc/apps_asus_script/mes_check
	APPS_MOUNTED_TYPE=`mount |grep "/dev/$APPS_DEV on " |awk '{print $5}'`
        
        #leo added iptables for start {
	#start asus_lighttpd for mediaserver
	
	LAN_IP_S_TMP=`nvram get lan_ipaddr |awk 'BEGIN {FS="."} {print $1"."$2"."$3".0/24"}'`
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport $DM_PORT -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport $DM_PORT -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	
	
	#start minidlna
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 8200 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 8200 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	
	#start mini_daapd
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 3689 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 3689 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
        #leo added iptables for start }        

	touch /tmp/asus_app/mediaserver_start
	asuslighttpdnum=`ps | grep "asus_lighttpd" | grep -v "$0" | grep -v "grep" | awk '{printf $5}'`
	#echo "asuslighttpdnum="$asuslighttpdnum
	if [ "$asuslighttpdnum" != "./asus_lighttpd" ]; then
		sh /opt/etc/init.d/S50asuslighttpd start
	fi

if [ "$APPS_MOUNTED_TYPE" != "vfat" ] && [ "$APPS_MOUNTED_TYPE" != "tfat" ]; then
	#if [ ! -L "$APP_LINK_DIR" ]; then
     #   rm -rf $APP_LINK_DIR
     #   ln -sf $APPS_INSTALL_PATH $APP_LINK_DIR
     #   fi

	if [ ! -f "$APP_LIB/libjpeg.so.62" ]; then
		ln -sf 	$APP_LIB/libjpeg.so.62.0.0 $APP_LIB/libjpeg.so.62
	fi

	if [ ! -f "$APP_LIB/libjpeg.so.0" ]; then
		ln -sf 	$APP_LIB/libjpeg.so.62.0.0 $APP_LIB/libjpeg.so.0
	fi

	if [ ! -f "$APP_LIB/libid3tag_ms.so.0" ]; then
		ln -sf 	$APP_LIB/libid3tag_ms.so.0.3.0 $APP_LIB/libid3tag_ms.so.0
		ln -sf 	$APP_LIB/libid3tag_ms.so.0.3.0 $APP_LIB/libid3tag_ms.so
	fi
	
	if [ ! -f "$APP_LIB/libsqlite3.so.0" ]; then
		ln -sf 	$APP_LIB/libsqlite3.so.0.8.6 $APP_LIB/libsqlite3.so.0
	fi

	if [ ! -f "$APP_LIB/libexif.so.12" ]; then
		ln -sf 	$APP_LIB/libexif.so.12.3.1 $APP_LIB/libexif.so.12
	fi
	
	if [ ! -f "$APP_LIB/libFLAC.so.8" ]; then
		ln -sf 	$APP_LIB/libFLAC.so.8.2.0 $APP_LIB/libFLAC.so.8
	fi

	if [ ! -f "$APP_LIB/libogg.so.0" ]; then
		ln -sf 	$APP_LIB/libogg.so.0.7.1 $APP_LIB/libogg.so.0
	fi

	if [ ! -f "$APP_LIB/libvorbis.so.0" ]; then
		ln -sf 	$APP_LIB/libvorbis.so.0.4.5 $APP_LIB/libvorbis.so.0
	fi

	if [ ! -f "$APP_LIB/libgdbm.so.3" ]; then
		ln -sf 	$APP_LIB/libgdbm.so.3.0.0 $APP_LIB/libgdbm.so.3
	fi

	if [ ! -f "$APP_LIB/libpcre.so.1" ] && [ ! -f "$APP_LIB/libpcre.so.1.0.0" ]; then
		ln -sf 	$APP_LIB/libpcre.so.0.0.1 $APP_LIB/libpcre.so.1
	fi

	if [ ! -f "$APP_LIB/libpcre.so.0" ] && [ ! -f "$APP_LIB/libpcre.so.0.0.1" ]; then
		ln -sf 	$APP_LIB/libpcre.so.1.0.0 $APP_LIB/libpcre.so.0
	fi

	if [ "$MINIDLNA" == "1" ]; then
	killall -SIGTERM minidlna
	sleep 3
	/opt/bin/minidlna -f /opt/etc/minidlna.conf -r &
	else
	killall -SIGTERM minidlna
	fi
	
	if [ "$DAAPD" == "1" ]; then
	killall -9 mt-daapd
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
	sleep 3
	/opt/bin/mt-daapd -mc /opt/etc/mt-daapd.conf &
	/opt/bin/avahi-daemon &
	#/opt/bin/mDNSResponder $LAN_IPADDR thehost $DAAPD_NAME _daap._tcp. 3689 &
	else
	killall -9 mt-daapd
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
	fi
	echo "have_ms" > /tmp/have_ms
	exit 0
fi

# Others files or directories
#objs=`ls -a $APPS_INSTALL_PATH |grep -v ^\.__*`
#for obj in $objs; do
#	if [ "$obj" == "." ] || [ "$obj" == ".." ]; then
#		continue
#	fi

#	if [ "$obj" != "bin" ] && [ "$obj" != "lib" ]; then
#		ln -sf $APPS_INSTALL_PATH/$obj $APP_LINK_DIR/$obj 
#	fi
#done


# BIN
#objs=`ls -a $APP_BIN`
# ncurses
#ln -sf $APP_BIN/tic $APP_LINK_BIN/captoinfo
#ln -sf $APP_BIN/tic $APP_LINK_BIN/infotocap
#ln -sf $APP_BIN/tset $APP_LINK_BIN/reset

#for obj in $objs; do
#	if [ "$obj" == "." ] || [ "$obj" == ".." ]; then
#		continue
#	fi

#	ln -sf $APP_BIN/$obj $APP_LINK_BIN/$obj 
#done


# LIB
#objs=`ls -a $APP_LIB`
# first find the other objs and then do uclibc.
#for obj in $objs; do
#	if [ "$obj" == "." ] || [ "$obj" == ".." ]; then
#		continue
#	fi

#	ln -sf $APP_LIB/$obj $APP_LINK_LIB/$obj 
#done

#libdaemon
DAEMON_VER=`ls $APP_LIB/libdaemon.so.* |awk 'BEGIN {FS="libdaemon.so."} {print $2}'`
ln -sf $APP_LIB/libdaemon.so.$DAEMON_VER $APP_LINK_LIB/libdaemon.so
ln -sf $APP_LIB/libdaemon.so.$DAEMON_VER $APP_LINK_LIB/libdaemon.so.0

#AVAHI
AVAHI_COMMON_VER=`ls $APP_LIB/libavahi-common.so.* |awk 'BEGIN {FS="libavahi-common.so."} {print $2}'`
ln -sf $APP_LIB/libavahi-common.so.$AVAHI_COMMON_VER $APP_LINK_LIB/libavahi-common.so.3
AVAHI_CORE_VER=`ls $APP_LIB/libavahi-core.so.* |awk 'BEGIN {FS="libavahi-core.so."} {print $2}'`
ln -sf $APP_LIB/libavahi-core.so.$AVAHI_CORE_VER $APP_LINK_LIB/libavahi-core.so.7
EXPAT_VER=`ls $APP_LIB/libexpat.so.* |awk 'BEGIN {FS="libexpat.so."} {print $2}'`
ln -sf $APP_LIB/libexpat.so.$EXPAT_VER $APP_LINK_LIB/libexpat.so.1

# zlib
ZLIB_VER=`ls $APP_LIB/libz.so.* |awk 'BEGIN {FS="libz.so."} {print $2}'`
ln -sf $APP_LIB/libz.so.$ZLIB_VER $APP_LINK_LIB/libz.so.1
ln -sf $APP_LIB/libz.so.$ZLIB_VER $APP_LINK_LIB/libz.so.1
ln -sf $APP_LIB/libz.so.$ZLIB_VER $APP_LINK_LIB/libz.so

# sqlite3
SQLITE3_VER=`ls $APP_LIB/libsqlite3.so.* |awk 'BEGIN {FS="libsqlite3.so."} {print $2}'`
ln -sf $APP_LIB/libsqlite3.so.$SQLITE3_VER $APP_LINK_LIB/libsqlite3.so.0

#ogg
OGG_VER=`ls $APP_LIB/libogg.so.* |awk 'BEGIN {FS="libogg.so."} {print $2}'`
ln -sf $APP_LIB/libogg.so.$OGG_VER $APP_LINK_LIB/libogg.so.0

#gdbm
GDBM_VER=`ls $APP_LIB/libgdbm.so.* |awk 'BEGIN {FS="libgdbm.so."} {print $2}'`
ln -sf $APP_LIB/libgdbm.so.$GDBM_VER $APP_LINK_LIB/libgdbm.so.3

#avcodec
AVCODEC_VER=`ls $APP_LIB/libavcodec_asus.so.* |awk 'BEGIN {FS="libavcodec_asus.so."} {print $2}'`
#echo "$APP_LIB/libavcodec_asus.so.$AVCODEC_VER $APP_LINK_LIB/libavcodec_asus.so.51"
#ln -sf $APP_LIB/libavcodec_asus.so.$AVCODEC_VER $APP_LINK_LIB/libavcodec_asus.so.51
ln -sf $APP_LIB/libavcodec_asus.so.52 $APP_LINK_LIB/libavcodec_asus.so.52  #have two version libs ,cannot find right lib 

#avformat
AVFORMAT_VER=`ls $APP_LIB/libavformat_asus.so.* |awk 'BEGIN {FS="libavformat_asus.so."} {print $2}'`
#echo "$APP_LIB/libavformat_asus.so.$AVFORMAT_VER $APP_LINK_LIB/libavformat_asus.so.52"
#ln -sf $APP_LIB/libavformat_asus.so.$AVFORMAT_VER $APP_LINK_LIB/libavformat_asus.so.52
ln -sf $APP_LIB/libavformat_asus.so.52 $APP_LINK_LIB/libavformat_asus.so.52  

#avutil
AVUTIL_VER=`ls $APP_LIB/libavutil_asus.so.* |awk 'BEGIN {FS="libavutil_asus.so."} {print $2}'`
#echo "$APP_LIB/libavutil_asus.so.$AVUTIL_VER $APP_LINK_LIB/libavutil_asus.so.49"
#ln -sf $APP_LIB/libavutil_asus.so.$AVUTIL_VER $APP_LINK_LIB/libavutil_asus.so.49
ln -sf $APP_LIB/libavutil_asus.so.50 $APP_LINK_LIB/libavutil_asus.so.50

#exif
EXIF_VER=`ls $APP_LIB/libexif.so.* |awk 'BEGIN {FS="libexif.so."} {print $2}'`
ln -sf $APP_LIB/libexif.so.$EXIF_VER $APP_LINK_LIB/libexif.so.12

#flac
FLAC_VER=`ls $APP_LIB/libFLAC.so.* |awk 'BEGIN {FS="libFLAC.so."} {print $2}'`
ln -sf $APP_LIB/libFLAC.so.$FLAC_VER $APP_LINK_LIB/libFLAC.so.8

#id3tag
ID3TAG_VER=`ls $APP_LIB/libid3tag_ms.so.* |awk 'BEGIN {FS="libid3tag_ms.so."} {print $2}'`
ln -sf $APP_LIB/libid3tag_ms.so.$ID3TAG_VER $APP_LINK_LIB/libid3tag_ms.so.0
ln -sf $APP_LIB/libid3tag_ms.so.$ID3TAG_VER $APP_LINK_LIB/libid3tag_ms.so

#jpeg
JPEG_VER=`ls $APP_LIB/libjpeg.so.* |awk 'BEGIN {FS="libjpeg.so."} {print $2}'`
ln -sf $APP_LIB/libjpeg.so.$JPEG_VER $APP_LINK_LIB/libjpeg.so.62

#vorbis
VORBIS_VER=`ls $APP_LIB/libvorbis.so.* |awk 'BEGIN {FS="libvorbis.so."} {print $2}'`
ln -sf $APP_LIB/libvorbis.so.$VORBIS_VER $APP_LINK_LIB/libvorbis.so.0

#vorbisfile
VORBISFILE_VER=`ls $APP_LIB/libvorbisfile.so.* |awk 'BEGIN {FS="libvorbisfile.so."} {print $2}'`
ln -sf $APP_LIB/libvorbisfile.so.$VORBISFILE_VER $APP_LINK_LIB/libvorbisfile.so.3

	if [ "$MINIDLNA" == "1" ]; then
	killall -SIGTERM minidlna
	sleep 3
	/opt/bin/minidlna -f /opt/etc/minidlna.conf -r &
	else
	killall -SIGTERM minidlna
	fi
	
	if [ "$DAAPD" == "1" ]; then
	killall -9 mt-daapd
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
	sleep 3
	/opt/bin/mt-daapd -mc /opt/etc/mt-daapd.conf &
	/opt/bin/avahi-daemon &
	#/opt/bin/mDNSResponder $LAN_IPADDR thehost $DAAPD_NAME _daap._tcp. 3689 &
	else
	killall -9 mt-daapd
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
	fi
	echo "have_ms" > /tmp/have_ms	
	;;
  dlna-restart)
	echo "dlna-restart"
	rm -f /tmp/Mediaserver/scantag
	killall -SIGTERM minidlna
	sleep 3
	/opt/bin/minidlna -f /opt/etc/minidlna.conf -r &
	;;
  dlna-stop)
	echo "dlna-stop"
	rm -f /tmp/Mediaserver/scantag
	killall -SIGTERM minidlna
	;;
  daapd-restart)
	echo "daapd-restart"
	killall -9 mt-daapd
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
	sleep 3
	/opt/bin/mt-daapd -mc /opt/etc/mt-daapd.conf &
	/opt/bin/avahi-daemon &
	#/opt/bin/mDNSResponder $LAN_IPADDR thehost $DAAPD_NAME _daap._tcp. 3689 &
	;;
  daapd-stop)
	echo "daapd-stop"
	killall -9 mt-daapd
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
	;;
  server-stop)
	killall -SIGTERM minidlna
	killall -9 mt-daapd
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
	;;
  stop)
	rm -rf /tmp/have_ms
	echo -n "Stopping MediaServer"
	if [ -f "/tmp/username_pw_MS.txt" ] ; then
	rm -rf /tmp/username_pw_MS.txt
	fi
	rm -f /tmp/asus_app/mediaserver_start
	rm -f /tmp/Mediaserver/scantag
	dm2_control="/opt/lib/ipkg/info/downloadmaster.control"
	if [ ! -f "$dm2_control" ]; then
		dm2_exist="no"
	else 
		dm2_exist_tmp=`cat "$dm2_control" |grep "Enabled:"`
		dm2_exist=${dm2_exist_tmp:9}
	fi
	APP_CHECK=`ls -l /tmp/asus_app`
	if [ -z "$APP_CHECK" ] && [ "$dm2_exist" == "no" ]; then
		killall -SIGTERM asus_lighttpd&
	fi
	killall -9 mt-daapd
	killall -SIGTERM minidlna
	killall -9 avahi-daemon

	LAN_IPADDR=`nvram get ${ACTUAL_F_SYSTEM}lan_ipaddr`

        # leo added ipstables for stop {
	#stop asus_lighttpd for mediaserver
	
	LAN_IP_S_TMP=`nvram get lan_ipaddr |awk 'BEGIN {FS="."} {print $1"."$2"."$3".0/24"}'`
	
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport $DM_PORT -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport $DM_PORT -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	
	
	#stop minidlna
	
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 8200 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 8200 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	
	#stop mini_daapd
	
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 3689 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 3689 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
        # leo added ipstables for stop }
	#killall -9 mDNSResponder
	;;
  restart)
	echo "restart"
	rm -rf /tmp/have_ms
	killall -9 mt-daapd
	killall -SIGTERM minidlna
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
        # leo added ipstables for restart {
	#stop asus_lighttpd for mediaserver
	
	LAN_IP_S_TMP=`nvram get lan_ipaddr |awk 'BEGIN {FS="."} {print $1"."$2"."$3".0/24"}'`
	
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport $DM_PORT -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport $DM_PORT -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	
	
	#stop minidlna
	
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 8200 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 8200 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	
	#stop mini_daapd
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 3689 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 3689 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
        

        
	#start asus_lighttpd for mediaserver
	
	LAN_IP_S_TMP=`nvram get lan_ipaddr |awk 'BEGIN {FS="."} {print $1"."$2"."$3".0/24"}'`
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport $DM_PORT -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport $DM_PORT -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	
	
	#start minidlna
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 8200 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 8200 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	
	#start mini_daapd
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 3689 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 3689 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
        #leo added iptables for restart } 
	sleep 3
	sh /opt/etc/init.d/S50mediaserver start
	;;
  firewall-start|firewall-restart)
	echo "MS firewall-restart"
	MINIDLNA=`nvram get ms_dlna`
	DAAPD=`nvram get ms_daapd`
	killall -9 mt-daapd
	killall -9 minidlna
	killall -9 avahi-daemon
	#killall -9 mDNSResponder
	LAN_IPADDR=`nvram get ${ACTUAL_F_SYSTEM}lan_ipaddr`
	COMP_NAME=`nvram get computer_name`
	MS_ITUNES=`nvram get ms_itunes`	
	
	sed -i "9s/^.*$/presentation_url=http:\/\/$LAN_IPADDR\:8200/" /opt/etc/minidlna.conf
	sed -i "15s/^.*$/LAN_IP=$LAN_IPADDR/" /opt/etc/mes_general.conf
	sed -i "15s/^.*$/LAN_IP=$LAN_IPADDR/" /opt/etc/mes_general_bak.conf
	

	# sherry added ipstables for firewall-start{
	#stop asus_lighttpd for mediaserver
	
	LAN_IP_S_TMP=`nvram get lan_ipaddr |awk 'BEGIN {FS="."} {print $1"."$2"."$3".0/24"}'`
	
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport $DM_PORT -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport $DM_PORT -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	
	
	#stop minidlna
	
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 8200 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 8200 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	
	#stop mini_daapd
	
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 3689 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -D BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 3689 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i erouter0 -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
	${ACTUAL_S_SYSTEM}iptables -t nat -D VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
	
	
        
	#start asus_lighttpd for mediaserver
	
	LAN_IP_S_TMP=`nvram get lan_ipaddr |awk 'BEGIN {FS="."} {print $1"."$2"."$3".0/24"}'`
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport $DM_PORT -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport $DM_PORT -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport $DM_PORT -j DNAT --to-destination $LAN_IPADDR:$DM_PORT
	
	
	#start minidlna
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 8200 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 8200 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 8200 -j DNAT --to-destination $LAN_IPADDR:8200
	
	#start mini_daapd
	
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i erouter0 -o rndbr1 -p tcp -d $LAN_IPADDR --dport 3689 -j ACCEPT
	${ACTUAL_S_SYSTEM}iptables -I BASE_FORWARD_CHAIN -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IPADDR -p tcp --dport 3689 -j ACCEPT
	
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i erouter0 -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
	${ACTUAL_S_SYSTEM}iptables -t nat -I VSERVER -i rndbr1 -s $LAN_IP_S_TMP -d $LAN_IP_S -p tcp --dport 3689 -j DNAT --to-destination $LAN_IPADDR:3689
        #sherry added iptables for firewall-start} 

	sleep 1
	if [ "$MINIDLNA" == "1" ]; then
		/opt/bin/minidlna -f /opt/etc/minidlna.conf -r &
	fi
	if [ "$DAAPD" == "1" ]; then
		sed -i "9s/^.*$/admin_pw    $DAAPD_PW/" /opt/etc/mt-daapd.conf
		sed -i "11s/^.*$/servername   $DAAPD_NAME/" /opt/etc/mt-daapd.conf
		sed -i "12s/^.*$/runas   $RUN_NAME/" /opt/etc/mt-daapd.conf
		sed -i "2s/^.*$/host-name=$MS_ITUNES/" /tmp/avahi/avahi-daemon.conf
		sed -i "3s/^.*$/aliases=$PRODUCTID/" /tmp/avahi/avahi-daemon.conf
		sed -i "4s/^.*$/aliases_llmnr=$PRODUCTID/" /tmp/avahi/avahi-daemon.conf
		sed -i "7s/^.*$/deny-interfaces=$WAN_IFNAME/" /tmp/avahi/avahi-daemon.conf
		_generate_itune_service_config
		echo "$RUN_NAME" >/tmp/avahi/http_username
		/opt/bin/mt-daapd -mc /opt/etc/mt-daapd.conf &
		/opt/bin/avahi-daemon &
		#/opt/bin/mDNSResponder $LAN_IPADDR thehost $DAAPD_NAME _daap._tcp. 3689 &
	fi
	exit 2
	;;
  *)

  exit 1
  ;;
esac




