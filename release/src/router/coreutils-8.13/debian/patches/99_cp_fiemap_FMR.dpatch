#! /bin/sh /usr/share/dpatch/dpatch-run
## 99_cp_fiemap_FMR.dpatch by Colin Watson <cjwatson@ubuntu.com>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Avoid data-corrupting free-memory-read in cp/mv/install when dealing
## DP: with a very fragmented and sparse input file on certain filesystems.
## DP: http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=commitdiff;h=64aef5fb9afecc023a6e719da161dbbf450908b8

@DPATCH@
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' coreutils-8.13~/src/extent-scan.c coreutils-8.13/src/extent-scan.c
--- coreutils-8.13~/src/extent-scan.c	2011-07-28 11:38:27.000000000 +0100
+++ coreutils-8.13/src/extent-scan.c	2012-11-09 09:57:17.000000000 +0000
@@ -89,7 +89,7 @@
 extent_scan_read (struct extent_scan *scan)
 {
   unsigned int si = 0;
-  struct extent_info *last_ei IF_LINT ( = scan->ext_info);
+  struct extent_info *last_ei = scan->ext_info;
 
   while (true)
     {
@@ -127,8 +127,14 @@
 
       assert (scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents);
       scan->ei_count += fiemap->fm_mapped_extents;
-      scan->ext_info = xnrealloc (scan->ext_info, scan->ei_count,
-                                  sizeof (struct extent_info));
+      {
+        /* last_ei points into a buffer that may be freed via xnrealloc.
+           Record its offset and adjust after allocation.  */
+        size_t prev_idx = last_ei - scan->ext_info;
+        scan->ext_info = xnrealloc (scan->ext_info, scan->ei_count,
+                                    sizeof (struct extent_info));
+        last_ei = scan->ext_info + prev_idx;
+      }
 
       unsigned int i = 0;
       for (i = 0; i < fiemap->fm_mapped_extents; i++)
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' coreutils-8.13~/tests/Makefile.am coreutils-8.13/tests/Makefile.am
--- coreutils-8.13~/tests/Makefile.am	2012-11-09 09:57:16.000000000 +0000
+++ coreutils-8.13/tests/Makefile.am	2012-11-09 09:57:17.000000000 +0000
@@ -328,6 +328,7 @@
   cp/existing-perm-race				\
   cp/fail-perm					\
   cp/fiemap-empty                               \
+  cp/fiemap-FMR                                 \
   cp/fiemap-perf                                \
   cp/fiemap-2                                   \
   cp/file-perm-race				\
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' coreutils-8.13~/tests/Makefile.in coreutils-8.13/tests/Makefile.in
--- coreutils-8.13~/tests/Makefile.in	2012-11-09 09:57:16.000000000 +0000
+++ coreutils-8.13/tests/Makefile.in	2012-11-09 09:57:17.000000000 +0000
@@ -1682,6 +1682,7 @@
   cp/existing-perm-race				\
   cp/fail-perm					\
   cp/fiemap-empty                               \
+  cp/fiemap-FMR                                 \
   cp/fiemap-perf                                \
   cp/fiemap-2                                   \
   cp/file-perm-race				\
@@ -2775,6 +2776,8 @@
 	@p='cp/fail-perm'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
 cp/fiemap-empty.log: cp/fiemap-empty
 	@p='cp/fiemap-empty'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
+cp/fiemap-FMR.log: cp/fiemap-FMR
+	@p='cp/fiemap-FMR'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
 cp/fiemap-perf.log: cp/fiemap-perf
 	@p='cp/fiemap-perf'; $(am__check_pre) $(LOG_COMPILE) "$$tst" $(am__check_post)
 cp/fiemap-2.log: cp/fiemap-2
diff -urNad '--exclude=CVS' '--exclude=.svn' '--exclude=.git' '--exclude=.arch' '--exclude=.hg' '--exclude=_darcs' '--exclude=.bzr' coreutils-8.13~/tests/cp/fiemap-FMR coreutils-8.13/tests/cp/fiemap-FMR
--- coreutils-8.13~/tests/cp/fiemap-FMR	1970-01-01 01:00:00.000000000 +0100
+++ coreutils-8.13/tests/cp/fiemap-FMR	2012-11-09 09:57:29.000000000 +0000
@@ -0,0 +1,31 @@
+#!/bin/sh
+# Trigger a free-memory read bug in cp from coreutils-[8.11..8.19]
+
+# Copyright (C) 2012 Free Software Foundation, Inc.
+
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
+print_ver_ cp
+
+require_valgrind_
+require_perl_
+: ${PERL=perl}
+
+$PERL -e 'for (1..600) { sysseek (*STDOUT, 4096, 1)' \
+  -e '&& syswrite (*STDOUT, "a" x 1024) or die "$!"}' > j || fail=1
+valgrind --quiet --error-exitcode=3 cp j j2 || true # fail=1
+cmp j j2 || fail=1
+
+Exit $fail
