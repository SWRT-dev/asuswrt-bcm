<!-- ##### SECTION Title ##### -->
Testing

<!-- ##### SECTION Short_Description ##### -->


<!-- ##### SECTION Long_Description ##### -->
<para>

</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### SECTION Image ##### -->


<!-- ##### FUNCTION g_test_minimized_result ##### -->
<para>

</para>

@minimized_quantity: 
@format: 
@...: 


<!-- ##### FUNCTION g_test_maximized_result ##### -->
<para>

</para>

@maximized_quantity: 
@format: 
@...: 


<!-- ##### FUNCTION g_test_init ##### -->
<para>

</para>

@argc: 
@argv: 
@...: 


<!-- ##### MACRO g_test_initialized ##### -->
<para>

</para>



<!-- ##### MACRO g_test_quick ##### -->
<para>

</para>



<!-- ##### MACRO g_test_slow ##### -->
<para>

</para>



<!-- ##### MACRO g_test_thorough ##### -->
<para>

</para>



<!-- ##### MACRO g_test_perf ##### -->
<para>

</para>



<!-- ##### MACRO g_test_verbose ##### -->
<para>

</para>



<!-- ##### MACRO g_test_undefined ##### -->
<para>

</para>



<!-- ##### MACRO g_test_quiet ##### -->
<para>

</para>



<!-- ##### FUNCTION g_test_subprocess ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### FUNCTION g_test_run ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### USER_FUNCTION GTestFunc ##### -->
<para>

</para>

@void: 


<!-- ##### FUNCTION g_test_add_func ##### -->
<para>

</para>

@testpath: 
@test_func: 


<!-- ##### USER_FUNCTION GTestDataFunc ##### -->
<para>

</para>

@user_data: 


<!-- ##### FUNCTION g_test_add_data_func ##### -->
<para>

</para>

@testpath: 
@test_data: 
@test_func: 


<!-- ##### FUNCTION g_test_add_data_func_full ##### -->
<para>

</para>

@testpath: 
@test_data: 
@test_func: 
@data_free_func: 


<!-- ##### MACRO g_test_add ##### -->
<para>

</para>

@testpath: 
@Fixture: 
@tdata: 
@fsetup: 
@ftest: 
@fteardown: 


<!-- ##### ENUM GTestFileType ##### -->
<para>

</para>

@G_TEST_DIST: 
@G_TEST_BUILT: 

<!-- ##### FUNCTION g_test_build_filename ##### -->
<para>

</para>

@file_type: 
@first_path: 
@...: 
@Returns: 


<!-- ##### FUNCTION g_test_get_filename ##### -->
<para>

</para>

@file_type: 
@first_path: 
@...: 
@Returns: 


<!-- ##### FUNCTION g_test_get_dir ##### -->
<para>

</para>

@file_type: 
@Returns: 


<!-- ##### FUNCTION g_test_fail ##### -->
<para>

</para>

@void: 


<!-- ##### FUNCTION g_test_message ##### -->
<para>

</para>

@format: 
@...: 


<!-- ##### FUNCTION g_test_bug_base ##### -->
<para>

</para>

@uri_pattern: 


<!-- ##### FUNCTION g_test_bug ##### -->
<para>

</para>

@bug_uri_snippet: 


<!-- ##### USER_FUNCTION GTestLogFatalFunc ##### -->
<para>

</para>

@log_domain: 
@log_level: 
@message: 
@user_data: 
@Returns: 


<!-- ##### FUNCTION g_test_log_set_fatal_handler ##### -->
<para>

</para>

@log_func: 
@user_data: 


<!-- ##### FUNCTION g_test_timer_start ##### -->
<para>

</para>

@void: 


<!-- ##### FUNCTION g_test_timer_elapsed ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### FUNCTION g_test_timer_last ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### FUNCTION g_test_queue_free ##### -->
<para>

</para>

@gfree_pointer: 


<!-- ##### FUNCTION g_test_queue_destroy ##### -->
<para>

</para>

@destroy_func: 
@destroy_data: 


<!-- ##### MACRO g_test_queue_unref ##### -->
<para>

</para>

@gobject: 


<!-- ##### FUNCTION g_test_expect_message ##### -->
<para>

</para>

@log_domain: 
@log_level: 
@pattern: 


<!-- ##### MACRO g_test_assert_expected_messages ##### -->
<para>

</para>



<!-- ##### ENUM GTestTrapFlags ##### -->
<para>

</para>

@G_TEST_TRAP_SILENCE_STDOUT: 
@G_TEST_TRAP_SILENCE_STDERR: 
@G_TEST_TRAP_INHERIT_STDIN: 

<!-- ##### ENUM GTestSubprocessFlags ##### -->
<para>

</para>

@G_TEST_SUBPROCESS_INHERIT_STDIN: 
@G_TEST_SUBPROCESS_INHERIT_STDOUT: 
@G_TEST_SUBPROCESS_INHERIT_STDERR: 

<!-- ##### FUNCTION g_test_trap_subprocess ##### -->
<para>

</para>

@test_path: 
@usec_timeout: 
@test_flags: 


<!-- ##### FUNCTION g_test_trap_has_passed ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### FUNCTION g_test_trap_reached_timeout ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### MACRO g_test_trap_assert_passed ##### -->
<para>

</para>



<!-- ##### MACRO g_test_trap_assert_failed ##### -->
<para>

</para>



<!-- ##### MACRO g_test_trap_assert_stdout ##### -->
<para>

</para>

@soutpattern: 


<!-- ##### MACRO g_test_trap_assert_stdout_unmatched ##### -->
<para>

</para>

@soutpattern: 


<!-- ##### MACRO g_test_trap_assert_stderr ##### -->
<para>

</para>

@serrpattern: 


<!-- ##### MACRO g_test_trap_assert_stderr_unmatched ##### -->
<para>

</para>

@serrpattern: 


<!-- ##### FUNCTION g_test_trap_fork ##### -->
<para>

</para>

@usec_timeout: 
@test_trap_flags: 
@Returns: 


<!-- ##### MACRO g_test_rand_bit ##### -->
<para>

</para>



<!-- ##### FUNCTION g_test_rand_int ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### FUNCTION g_test_rand_int_range ##### -->
<para>

</para>

@begin: 
@end: 
@Returns: 


<!-- ##### FUNCTION g_test_rand_double ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### FUNCTION g_test_rand_double_range ##### -->
<para>

</para>

@range_start: 
@range_end: 
@Returns: 


<!-- ##### MACRO g_assert ##### -->
<para>

</para>

@expr: 


<!-- ##### MACRO g_assert_not_reached ##### -->
<para>

</para>



<!-- ##### MACRO g_assert_cmpstr ##### -->
<para>

</para>

@s1: 
@cmp: 
@s2: 


<!-- ##### MACRO g_assert_cmpint ##### -->
<para>

</para>

@n1: 
@cmp: 
@n2: 


<!-- ##### MACRO g_assert_cmpuint ##### -->
<para>

</para>

@n1: 
@cmp: 
@n2: 


<!-- ##### MACRO g_assert_cmphex ##### -->
<para>

</para>

@n1: 
@cmp: 
@n2: 


<!-- ##### MACRO g_assert_cmpfloat ##### -->
<para>

</para>

@n1: 
@cmp: 
@n2: 


<!-- ##### MACRO g_assert_no_error ##### -->
<para>

</para>

@err: 


<!-- ##### MACRO g_assert_error ##### -->
<para>

</para>

@err: 
@dom: 
@c: 


<!-- ##### TYPEDEF GTestCase ##### -->
<para>

</para>


<!-- ##### TYPEDEF GTestSuite ##### -->
<para>

</para>


<!-- ##### USER_FUNCTION GTestFixtureFunc ##### -->
<para>

</para>

@fixture: 
@user_data: 


<!-- ##### FUNCTION g_test_create_case ##### -->
<para>

</para>

@test_name: 
@data_size: 
@test_data: 
@data_setup: 
@data_test: 
@data_teardown: 
@Returns: 


<!-- ##### FUNCTION g_test_create_suite ##### -->
<para>

</para>

@suite_name: 
@Returns: 


<!-- ##### FUNCTION g_test_get_root ##### -->
<para>

</para>

@void: 
@Returns: 


<!-- ##### FUNCTION g_test_suite_add ##### -->
<para>

</para>

@suite: 
@test_case: 


<!-- ##### FUNCTION g_test_suite_add_suite ##### -->
<para>

</para>

@suite: 
@nestedsuite: 


<!-- ##### FUNCTION g_test_run_suite ##### -->
<para>

</para>

@suite: 
@Returns: 


