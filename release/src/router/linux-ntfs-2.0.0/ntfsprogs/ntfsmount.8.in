.\" Copyright (c) 2005-2007 Yura Pakhuchiy.
.\" Copyright (c) 2005 Richard Russon.
.\" Copyright (c) 2006-2007 Szabolcs Szakacsits.
.\" This file may be copied under the terms of the GNU Public License.
.\"
.TH NTFSMOUNT 8 "September 2007" "ntfsprogs @VERSION@"
.SH NAME
ntfsmount \- Read/Write userspace NTFS driver.
.SH SYNOPSIS
\fBntfsmount\fR \fIdevice mount_point\fR [\fB\-o\fR \fIoptions\fR]
.br
\fBmount \-t fuse.ntfs\fR \fIdevice mount_point\fR [\fB\-o\fR \fIoptions\fR]
.sp
/etc/ftsab entry:
.br
\fIdevice mount_point\fR \fBfuse.ntfs\fR \fIoptions\fR \fB0 0\fR
.SH DESCRIPTION
\fBntfsmount\fR is a read/write userspace NTFS filesystem driver. Technically
it connects \fBFUSE\fR with \fBlibntfs\fR.
.TP
\fBntfsmount\fR features:
\(bu Create/Delete/Move files and directories.
.br
\(bu Hard link files.
.br
\(bu Read and write to normal and sparse files.
.br
\(bu Read compressed and encrypted files.
.br
\(bu Access to special Interix files (symlinks, devices, FIFOs).
.br
\(bu List/Read/Write/Add/Remove named data streams.
.br
\(bu Supports Linux, FreeBSD, NetBSD and Mac OS X.
.SH OPTIONS
\fBntfsmount\fR supports most of options that \fBmount\fR and \fBFUSE\fR
accepts (see "man 8 mount" and FUSE documentation for them). Additionally
\fBntfsmount\fR have some unique to it options, below is a summary of them.
.TP
.B silent, nosilent
\fBsilent\fR option makes ntfsmount to do not return "Operation is not
supported" error on chmod and chown operations (this option is on by default).
\fBnosilent\fR cancels this.
.TP
.BI locale= value
You can set locale with this option. It's useful if locale environment variables
are not set before partitions from /etc/fstab had been mounted. Try submitting this option if you are experience problems with displaying national characters in filenames.
.TP
\fBuid=\fIvalue\fR, \fBgid=\fIvalue\fR
Set the owner and the group of files and directories. The values are numerical.
The defaults are the uid and gid of the current process.
.TP
\fBumask=\fIvalue\fR, \fBdmask=\fIvalue\fR, \fBfmask=\fIvalue\fR
Set the bitmask of the file and directory permissions that are not present.
The value is given in octal. Instead of specifying umask which applies both to
files and directories, fmask applies only to files and dmask only to
directories.
.TP
.B case_insensitive
Make \fBntfsmount\fR treat filenames in POSIX names as case insensitive.
See \fBFILENAME NAMESPACES\fR section for details.
.TP
.B no_def_opts
By default ntfsmount acts as some useful options were passed to it (you can get
list of this options by running ntfsmount without any arguments). Submitting
this option will cancel such behaviour.
.TP
.B noblkdev
By default ntfsmount tries to mount block devices with blkdev FUSE option if it
have enough privileges. Submit this option if blkdev mount does not work for
you for some reasons.
.TP
.B force
Force mount even if errors occurred. Use this option only if you know what
are you doing and don't cry about data loss.
.TP
.B relatime, norelatime
Update inode access times relative to modify or change time.  Access
time is only updated if the previous access time was earlier than the
current modify or change time. (Similar to noatime, but doesn't break
mutt or other applications that need to know if a file has been read
since the last time it was modified.)
.TP
.BI streams_interface= value
This option controls how the user can access named data streams.  It can be set
to, one of \fBnone\fR, \fBwindows\fR or \fBxattr\fR. See \fBDATA STREAMS\fR section for details.
.TP
.B debug
Makes ntfsmount to not detach from terminal and print a lot of debug output from
libntfs and FUSE.
.TP
.B no_detach
Same as above but with less debug output.
.SH FILENAME NAMESPACES
There are exist several namespaces for filenames in NTFS: DOS, Win32 and POSIX.
Names in DOS and Win32 namespaces are case insensitive, but names in POSIX
namespace are case sensitive. By default windows creates filenames in DOS and
Win32 namespaces (with exception for hard links), but ntfsmount always creates
files in POSIX namespace. Note: you can create several files that differs only
in case in one directory with ntfsmount, but windows applications may be
confused by this.
.SH DATA STREAMS
All data on NTFS is stored in streams.  Every file has exactly one unnamed data
stream and can have many named data streams.  The size of a file is the size of
its unnamed data stream.  Windows applications don't, consistently, allow you
to read named data streams, so you are recommended to use tools like FAR, or
utilities from Cygwin.
.PP
By default or if "streams_interface=none" option was passed, \fBntfsmount\fR will only read the unnamed data stream.
.PP
By using the option "streams_interface=windows", you will be able to read
any named data streams, simply by specifying the stream's name after a colon.
Named data streams act like normals files, so you can read from them, write to
them and even delete them (using rm). You can list all the named data streams
a file has by getting the "ntfs.streams.list" extended attribute. Some examples:
.RS
.sp
cat some.mp3:artist
.br
rm some.mp3:album
.br
echo Sympho Black Metal > some.mp3:genre
.br
getfattr \-n ntfs.streams.list some.mp3
.sp
.RE
If \fBstreams_interface\fR option is set to \fBxattr\fR, then the named data streams are mapped to xattrs and user can manipulate them using \fBgetfattr\fR and
\fBsetfattr\fR utilities. Eg.:
.RS
.sp
setfattr -n user.artist -v "Some Artist" some.mp3
.br
getfattr -d some.mp3
.RE
.SH ALLOWED CHARACTERS
Win32 does not allow characters like '<', '>', '*', '?' and so on in the
filenames, but NTFS supports any characters except '\\0' (NULL) and '/'.  You
can create filenames with any allowed by NTFS characters using ntfsmount, but
aware, you will not be able to access files with denied by Win32 characters from
windows.
.SH ACCESS HANDLING AND SECURITY
By default, files and directories are owned by the user and group of the
mounting process and everybody has full read, write, execution and directory
browsing permissions.  If you want to use permissions handling then use the
\fBuid\fR and/or the \fBgid\fR options together with the \fBumask\fR or
\fBfmask\fR and \fBdmask\fR options.
.PP
Windows users have full access to the files created by \fBntfsmount\fR.
.SH EXAMPLES
Mount /dev/hda1 to /mnt/ntfs using ntfsmount submiting locale option:
.RS
.sp
.B ntfsmount /dev/hda1 /mnt/ntfs -o locale=be_BY.UTF-8
.sp
.RE
/etc/fstab entry for above:
.RS
.sp
.B /dev/hda1 /mnt/ntfs fuse.ntfs locale=be_BY.UTF-8 0 0
.sp
.RE
Umount /mnt/ntfs:
.RS
.sp
.B fusermount \-u /mnt/ntfs
.SH BUGS
If you find a bug please send an email describing the problem to the
development team:
.br
.nh
linux\-ntfs\-dev@lists.sourceforge.net
.hy
.SH AUTHORS
\fBntfsmount\fR was written by Yura Pakhuchiy, with contributions from Yuval Fledel and Szabolcs Szakacsits.
.SH DEDICATION
With love to Marina Sapego.
.SH THANKS
Many thanks to Miklos Szeredi for advice and answers about FUSE.
.SH AVAILABILITY
\fBntfsmount\fR is part of the \fBntfsprogs\fR package and is available from:
.br
.nh
http://www.linux\-ntfs.org/content/view/19/37
.hy
.sp
The manual pages are available online at:
.br
.nh
http://man.linux-ntfs.org/
.hy
.sp
Additional up-to-date information can be found furthermore at:
.br
.nh
http://wiki.linux-ntfs.org/doku.php?id=ntfsmount
.hy
.SH SEE ALSO
Read \fBlibntfs\fR(8) for details how to access encrypted files.
.sp
.BR libntfs (8),
.BR ntfsprogs (8),
.BR attr (5),
.BR getfattr (1)
