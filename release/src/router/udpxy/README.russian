#
# Copyright 2008-2012 Pavel V. Cherenkov (pcherenkov@gmail.com)
#
#  This file is part of udpxy.
#
#  udpxy is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  udpxy is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with udpxy.  If not, see <http://www.gnu.org/licenses/>.
#

Краткое описание
--------------------

udpxy - серверное приложение (daemon) для передачи данных из сетевого потока мультикаст канала
(вещаемого по UDP) в HTTP соединение запрашивающего клиента.

udpxy - распространяется бесплатно в соответствие с лицензией GNU GPLv3.

Сборка и установка:

Разархивируйте исходный код из файла *.tgz в директорию по выбору с помощью команды:
        tar -xzvf udpxy.X.Y-ZZ.tgz
    или
        gzip -dc udpxy.X.Y-ZZ.tgz | tar -xvf -

Убедитесь в наличии GNU make и gcc (версии gcc начиная с 3.x должны подойти,
предыдущие версии не гарантируют корректной сборки кода); для сборки при помощи
других компиляторов (не gcc) могут понадобиться изменения в Makefile.

Запуск 'make' без параметра режима приведёт к сборке версии udpxy 'release'
(без вызовов assert(3), без отладочных символов, с возможностью работы в режиме
отладки - verbose).

Прочие режимы сборки:
    debug (assert(3), отладочные символы, режим verbose);
    lean  (без assert(3), нет отладочных символов, нет режима verbose);
    rdebug (то же, что и release, но с отладочными символами);
    ldebug (то же, что и lean, но с отладочными символами).

При успешном окончании работы make, исполныемый файл udpxy может быть
скопирован в любую выбранную директорию и запускаться оттуда - никаких
дополнительных шагов установки не требуется.

udpxy может быть запущен с различными параметрами, такими как,
к примеру, адрес и номер порта, принимающего запросы, имя сетевого
интерфейса для работы с мультикаст потоками, и т.д. Краткое руководство
к использованию и описание параметров командной строки будет выведено,
если запустить udpxy без параметров.

HTTP команды
--------------------

udpxy реагирует на команды протокола HTTP (GET) для получения данных
из мультикаст группы и перенаправления этих даных в запрашивающее
HTTP соединение.

Формат команды перенаправления сетевого потока приведён ниже:

http://address:port/cmd/mgroup_address[SEP]mgroup_port/

[SEP] ::= :|%|~|+|-|^
т.е. команды:
    http://ip:port/cmd/mgroup_address:mgroup_port/
    http://ip:port/cmd/mgroup_address%mgroup_port/
    http://ip:port/cmd/mgroup_address~mgroup_port/
    ......
    http://ip:port/cmd/mgroup_address^mgroup_port/

принимаются и должны выполняться одинаково.

cmd ::= udp | rtp

ip и port соответствуют адресу и порту, на котором udpxy принимает команды,
а mgroup_address:mgroup_port указывают на мультикаст группу для подписки.

Использование команды 'udp' приведёт к тестированию полученных данных на
известные приложению типы видеоинформации ("чистый" MPEG-TS и
RTP c MPEG-TS); использование команды 'rtp' однозначно укажет udpxy
на RTP c MPEG-TS и отменит тестирование.

udpxy запускает 'процесс-клиент' для работы с каждым новым запросом на
перенаправление сетевого потока, количество одновременно запущенных потоков
ограничивается соответствующим параметром (см. краткое руководство к
использованию).

udpxy также поддерживает несколько дополнительных HTTP запросов, таких как:

http://address:port/status/  - вывести статус программы и статистику
http://address:port/restart/ - закрыть все текущие соединения и перезапустить программу

Типы видеопотоков и работа с ними
--------------

udpxy способно распознать видеопотоки MPEG-TS и RTP с MPEG-TS в перенаправляемых пакетах;
если udpxy получает видеопоток RTP, он автоматически 'переводится' в MPEG-TS, чтобы дать
возможность вопспоизвести видео плеерам, не работающим с RTP потоком по протоколу TCP.

Пока что трансляция или транскодирование иных типов потоков не производится.

Запись MPEG потока в файл
--------------
udpxy (в сборках после 0.33) предусматривает возможность записи обрабатываемого
потока в виде "чистого" MPEG-TS в файл. Данная функциональность предоставляется
посредством включённого в дистрибутив приложения udpxrec, вызываемого через
ссылку на udpxy (т.к. оба приложения содержатся в едином бинарном файле udpxy).

udpxrec вызывается через символьную ссылку (названную udpxrec) на исполняемый
файл udpxy. (NB: не переименовывайте исполняемый файл udpxy.)

udpxrec создаёт MPEG файлы, содержащие в себе записи MPEG-TS потока; большинство
медиа-плееров (в 2008 году) не могли проигрывать подобные файлы. Файлы
MPEG-TS могут быть сконвертированы в (знакомый всем плеерам) формат MPEG-PS
при помощи следующей команды плеера vlc (который проигрывает и MPEG-TS, и PS):

vlc input-ts.mpg --sout="#std{access=file,mux=ps,dst=out-ps.mpg}"

Полученный в результате файл MPEG-PS проигрывается большинством медиа-плееров.

Портируемость
--------------

udpxy был написан для работы на POSIX-совместимых системах.
На сей день (практически) все сборки должны собираться и работать на Linux
версий 2.4, 2.6 и 3.х (x86, amd64, ARM). Не все *старые* сборки были протестированы
на новых версиях Linux, обратное так же верно.

Отдельные (старые, т.е. до версии 1.0) сборки были протестированы на HP-UX 11.11
(PA-RISC 1.1, 2.0w).

Для новых версий udpxy активно поддерживаются ОС Linux и FreeBSD (до версии 9.0).
Сообщество FreeBSD также поддерживает официальный порт udpxy, загружаемый
через систему портов FreeBSD.

Отдельно, вне этого проекта, существует порт udpxy под cуgwin. Этот порт
поддерживает и распространяет через свой сайт Алексей Сухинин
(пользователь Alexey S на udpxy.com/forum).

Переменные среды как параметры
--------------
udpxy использует следующие переменные среды для дополнения
своего набора опций командной строки; данные переменные
прелагаются для тех опций, кои не слишком часто изменяются
пользователем (или которые просто неудобно указывать из
командной строки).

NB: Если какой-либо параметр командной строки пересекается в функционалиности с
переменной среды, то параметр всегда будет иметь больший приоритет.


UDPXY_RCV_TMOUT         - тайм-аут (секунд) на чтение входящего (мультикаст) потока, по умолчанию=5;
UDPXY_DHOLD_TMOUT       - тайм-аут (секунд) на буферизацию потока перед отправкой клиент(у,ам), по умолчанию=1;
UDPXY_SREAD_TMOUT       - тайм-аут (секунд) на чтение из пассивного сокета (обработка HTTP запросов), по умолчанию=1;
UDPXY_SWRITE_TMOUT      - тайм-аут (секунд) на запись в пассивный сокет (обработка HTTP запросов), по умолчанию=1;
UDPXY_SSEL_TMOUT        - тайм-аут (секунд) на select(2) в основном цикле сервера (не задействован при использовании pselect(2)), по умолчанию=30;
UDPXY_LQ_BACKLOG        - размер очереди соединений серверного сокета, по умолчанию=16;
UDPXY_SRV_RLWMARK       - размер нижнего порога (low watermark) on на сокете входящих (мультакаст) данных, по умолчанию=0 (не устанавливается);
UDPXY_SSOCKBUF_NOSYNC   - не синхронизировать размер буфера (UDP) сокета со значением параметра -B, по умолчанию=1 (синхронизировать);
UDPXY_DSOCKBUF_NOSYNC   - не синхронизировать размер буфера (TCP) сокета со значением параметра -B, по умолчанию=1 (синхронизировать);

UDPXY_TCP_NODELAY       - отключать алгоритм Нэйгла (Nagle algorithm) на новопринятых сокетах (ускоряет переключение каналов), по умолчанию=1;

UDPXY_HTTP200_FTR_FILE - добавить содержимое данного (текстового) файла к ответу HTTP 200 сервера, по умолчанию=none;
UDPXY_HTTP200_FTR_LN   - добавить тектовую строку к ответу  HTTP 200 сервера, по умолчанию=none;

UDPXY_ALLOW_PAUSES     - В случае блокирования на write(2), продолжать читать данные до заполнения буфера (размер устанавливается параметром -B), по умолчанию=disabled;
UDPXY_PAUSE_MSEC       - ограничить время чтения данных в N миллисекунд в случае блокирования на write(2).
UDPXY_CONTENT_TYPE     - использовать данное значение HTTP поля Content-Type в ответе на HTTP запросы.

# --EOF--

