#ifndef __MDM_OBJECT_H__
#define __MDM_OBJECT_H__


/*
 * This file is automatically generated from the data-model spreadsheet.
 * Do not modify this file directly - You will lose all your changes the
 * next time this file is generated!
 */


/*!\file mdm_object.h 
 * \brief Automatically generated header file mdm_object.h
 */


#include "cms.h"

/*! \brief Obj struct for InternetGatewayDevice.
 *
 * MDMOID_IGD 1
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    deviceSummary;	/**< DeviceSummary */
    UINT32    LANDeviceNumberOfEntries;	/**< LANDeviceNumberOfEntries */
    UINT32    WANDeviceNumberOfEntries;	/**< WANDeviceNumberOfEntries */
#ifdef DMP_DOWNLOAD_1
    UBOOL8    IPv4DownloadDiagnosticsSupported;	/**< IPv4DownloadDiagnosticsSupported */
#endif
#ifdef DMP_DOWNLOAD_1
    UBOOL8    IPv6DownloadDiagnosticsSupported;	/**< IPv6DownloadDiagnosticsSupported */
#endif
#ifdef DMP_UPLOAD_1
    UBOOL8    IPv4UploadDiagnosticsSupported;	/**< IPv4UploadDiagnosticsSupported */
#endif
#ifdef DMP_UPLOAD_1
    UBOOL8    IPv6UploadDiagnosticsSupported;	/**< IPv6UploadDiagnosticsSupported */
#endif
#ifdef DMP_UDPECHO_1
    UBOOL8    IPv4UDPEchoDiagnosticsSupported;	/**< IPv4UDPEchoDiagnosticsSupported */
#endif
#ifdef DMP_UDPECHO_1
    UBOOL8    IPv6UDPEchoDiagnosticsSupported;	/**< IPv6UDPEchoDiagnosticsSupported */
#endif
} IGDObject;

/*! \brief _IGDObject is used internally to represent IGDObject */
typedef IGDObject _IGDObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.
 *
 * MDMOID_IGD_DEVICE_INFO 2
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturer;	/**< Manufacturer */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    modelName;	/**< ModelName */
    char *    description;	/**< Description */
    char *    productClass;	/**< ProductClass */
    char *    serialNumber;	/**< SerialNumber */
    char *    hardwareVersion;	/**< HardwareVersion */
    char *    softwareVersion;	/**< SoftwareVersion */
    char *    modemFirmwareVersion;	/**< ModemFirmwareVersion */
    char *    enabledOptions;	/**< EnabledOptions */
    char *    additionalHardwareVersion;	/**< AdditionalHardwareVersion */
    char *    additionalSoftwareVersion;	/**< AdditionalSoftwareVersion */
    char *    specVersion;	/**< SpecVersion */
    char *    provisioningCode;	/**< ProvisioningCode */
    UINT32    upTime;	/**< UpTime */
    DATETIME  firstUseDate;	/**< FirstUseDate */
#ifdef DMP_X_BROADCOM_COM_BASELINE_1
    UINT32    X_BROADCOM_COM_NumberOfCpuThreads;	/**< X_BROADCOM_COM_NumberOfCpuThreads */
#endif
    char *    X_BROADCOM_COM_SwBuildTimestamp;	/**< X_BROADCOM_COM_SwBuildTimestamp */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_DslPhyDrvVersion;	/**< X_BROADCOM_COM_DslPhyDrvVersion */
#endif
#ifdef DMP_X_BROADCOM_COM_PSTNENDPOINT_1
    char *    X_BROADCOM_COM_VoiceServiceVersion;	/**< X_BROADCOM_COM_VoiceServiceVersion */
#endif
#ifdef DMP_DEVICE2_HOMEPLUG_1
    UINT32    X_BROADCOM_COM_FlashSize;	/**< X_BROADCOM_COM_FlashSize */
#endif
#ifdef DMP_DEVICE2_HOMEPLUG_1
    char *    X_BROADCOM_COM_FlashDescription;	/**< X_BROADCOM_COM_FlashDescription */
#endif
    char *    deviceLog;	/**< DeviceLog */
    UINT32    vendorConfigFileNumberOfEntries;	/**< VendorConfigFileNumberOfEntries */
} IGDDeviceInfoObject;

/*! \brief _IGDDeviceInfoObject is used internally to represent IGDDeviceInfoObject */
typedef IGDDeviceInfoObject _IGDDeviceInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceInfo.VendorConfigFile.{i}.
 *
 * MDMOID_VENDOR_CONFIG_FILE 3
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    version;	/**< Version */
    DATETIME  date;	/**< Date */
    char *    description;	/**< Description */
} VendorConfigFileObject;

/*! \brief _VendorConfigFileObject is used internally to represent VendorConfigFileObject */
typedef VendorConfigFileObject _VendorConfigFileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_FiltersCfg.
 *
 * MDMOID_FILTERS_CFG 3400
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    localSwitching;	/**< LocalSwitching */
    UBOOL8    prevCfg;	/**< PrevCfg */
} FiltersCfgObject;

/*! \brief _FiltersCfgObject is used internally to represent FiltersCfgObject */
typedef FiltersCfgObject _FiltersCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_FiltersCfg.IngressFilters.{i}.
 *
 * MDMOID_INGRESS_FILTERS_DATA 3401
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    type;	/**< Type */
    char *    action;	/**< Action */
    UINT32    val;	/**< Val */
    UINT32    valId;	/**< ValId */
    HEXBINARY  ports;	/**< Ports */
} IngressFiltersDataObject;

/*! \brief _IngressFiltersDataObject is used internally to represent IngressFiltersDataObject */
typedef IngressFiltersDataObject _IngressFiltersDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SyslogCfg.
 *
 * MDMOID_SYSLOG_CFG 3110
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    option;	/**< Option */
    char *    localDisplayLevel;	/**< LocalDisplayLevel */
    char *    localLogLevel;	/**< LocalLogLevel */
    char *    remoteLogLevel;	/**< RemoteLogLevel */
    char *    serverIPAddress;	/**< ServerIPAddress */
    UINT32    serverPortNumber;	/**< ServerPortNumber */
} SyslogCfgObject;

/*! \brief _SyslogCfgObject is used internally to represent SyslogCfgObject */
typedef SyslogCfgObject _SyslogCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_LoginCfg.
 *
 * MDMOID_LOGIN_CFG 3120
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    adminUserName;	/**< AdminUserName */
    char *    adminPassword;	/**< AdminPassword */
    char *    adminPasswordHash;	/**< AdminPasswordHash */
    char *    supportUserName;	/**< SupportUserName */
    char *    supportPassword;	/**< SupportPassword */
    char *    supportPasswordHash;	/**< SupportPasswordHash */
    char *    userUserName;	/**< UserUserName */
    char *    userPassword;	/**< UserPassword */
    char *    userPasswordHash;	/**< UserPasswordHash */
} LoginCfgObject;

/*! \brief _LoginCfgObject is used internally to represent LoginCfgObject */
typedef LoginCfgObject _LoginCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SELT_TEST.
 *
 * MDMOID_SELT 3290
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} SeltObject;

/*! \brief _SeltObject is used internally to represent SeltObject */
typedef SeltObject _SeltObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SELT_TEST.Configuration.
 *
 * MDMOID_SELT_CFG 3291
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    seltTestState;	/**< SeltTestState */
    char *    maxSeltF;	/**< MaxSeltF */
    char *    maxSeltT;	/**< MaxSeltT */
    char *    maxSeltPSD;	/**< MaxSeltPSD */
    char *    CID;	/**< CID */
    UINT32    lineNumber;	/**< LineNumber */
} SeltCfgObject;

/*! \brief _SeltCfgObject is used internally to represent SeltCfgObject */
typedef SeltCfgObject _SeltCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SELT_TEST.Result.{i}.
 *
 * MDMOID_SELT_RESULT 3292
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    CID;	/**< CID */
    UINT32    lineNumber;	/**< LineNumber */
    DATETIME  testStartTime;	/**< TestStartTime */
    DATETIME  testEndTime;	/**< TestEndTime */
    char *    maxSeltPSD;	/**< MaxSeltPSD */
    char *    maxSeltF;	/**< MaxSeltF */
    char *    maxSeltT;	/**< MaxSeltT */
    char *    UER;	/**< UER */
    char *    loopEchoResponse;	/**< LoopEchoResponse */
    char *    loopLength;	/**< LoopLength */
    char *    gauge;	/**< Gauge */
    UINT32    BTLen1;	/**< BTLen1 */
    UINT32    BTLocation1;	/**< BTLocation1 */
    UINT32    BTLen2;	/**< BTLen2 */
    UINT32    BTLocation2;	/**< BTLocation2 */
    char *    NETerminationType;	/**< NETerminationType */
    UINT32    missingMicrofilterLocation;	/**< MissingMicrofilterLocation */
    UINT32    shortLocation1;	/**< ShortLocation1 */
    UINT32    shortLocation2;	/**< ShortLocation2 */
    UINT32    openLocation1;	/**< OpenLocation1 */
    UINT32    openLocation2;	/**< OpenLocation2 */
} SeltResultObject;

/*! \brief _SeltResultObject is used internally to represent SeltResultObject */
typedef SeltResultObject _SeltResultObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.
 *
 * MDMOID_APP_CFG 3130
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} AppCfgObject;

/*! \brief _AppCfgObject is used internally to represent AppCfgObject */
typedef AppCfgObject _AppCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.HttpdCfg.
 *
 * MDMOID_HTTPD_CFG 3150
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
#ifdef DMP_X_BROADCOM_COM_QUICKSETUP_1
    UBOOL8    quickSetupEnabled;	/**< QuickSetupEnabled */
#endif
} HttpdCfgObject;

/*! \brief _HttpdCfgObject is used internally to represent HttpdCfgObject */
typedef HttpdCfgObject _HttpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.Tr69cCfg.
 *
 * MDMOID_TR69C_CFG 3131
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
#ifdef DMP_X_BROADCOM_COM_DEBUG_1
    UBOOL8    loggingSOAP;	/**< LoggingSOAP */
#endif
#ifdef DMP_X_BROADCOM_COM_SECURITY_1
    UBOOL8    connectionRequestAuthentication;	/**< ConnectionRequestAuthentication */
#endif
} Tr69cCfgObject;

/*! \brief _Tr69cCfgObject is used internally to represent Tr69cCfgObject */
typedef Tr69cCfgObject _Tr69cCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.Tr64cCfg.
 *
 * MDMOID_TR64C_CFG 3170
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} Tr64cCfgObject;

/*! \brief _Tr64cCfgObject is used internally to represent Tr64cCfgObject */
typedef Tr64cCfgObject _Tr64cCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.SshdCfg.
 *
 * MDMOID_SSHD_CFG 3132
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SshdCfgObject;

/*! \brief _SshdCfgObject is used internally to represent SshdCfgObject */
typedef SshdCfgObject _SshdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.TelnetdCfg.
 *
 * MDMOID_TELNETD_CFG 3133
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} TelnetdCfgObject;

/*! \brief _TelnetdCfgObject is used internally to represent TelnetdCfgObject */
typedef TelnetdCfgObject _TelnetdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.ConsoledCfg.
 *
 * MDMOID_CONSOLED_CFG 3134
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} ConsoledCfgObject;

/*! \brief _ConsoledCfgObject is used internally to represent ConsoledCfgObject */
typedef ConsoledCfgObject _ConsoledCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.SmdCfg.
 *
 * MDMOID_SMD_CFG 3135
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SmdCfgObject;

/*! \brief _SmdCfgObject is used internally to represent SmdCfgObject */
typedef SmdCfgObject _SmdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.SskCfg.
 *
 * MDMOID_SSK_CFG 3136
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SskCfgObject;

/*! \brief _SskCfgObject is used internally to represent SskCfgObject */
typedef SskCfgObject _SskCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.SnmpdCfg.
 *
 * MDMOID_SNMPD_CFG 3180
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} SnmpdCfgObject;

/*! \brief _SnmpdCfgObject is used internally to represent SnmpdCfgObject */
typedef SnmpdCfgObject _SnmpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.FtpdCfg.
 *
 * MDMOID_FTPD_CFG 3137
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} FtpdCfgObject;

/*! \brief _FtpdCfgObject is used internally to represent FtpdCfgObject */
typedef FtpdCfgObject _FtpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.TftpdCfg.
 *
 * MDMOID_TFTPD_CFG 3138
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} TftpdCfgObject;

/*! \brief _TftpdCfgObject is used internally to represent TftpdCfgObject */
typedef TftpdCfgObject _TftpdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.PppdCfg.
 *
 * MDMOID_PPPD_CFG 3139
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} PppdCfgObject;

/*! \brief _PppdCfgObject is used internally to represent PppdCfgObject */
typedef PppdCfgObject _PppdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.IcmpCfg.
 *
 * MDMOID_ICMP_CFG 3140
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    networkAccess;	/**< NetworkAccess */
} IcmpCfgObject;

/*! \brief _IcmpCfgObject is used internally to represent IcmpCfgObject */
typedef IcmpCfgObject _IcmpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.UpnpCfg.
 *
 * MDMOID_UPNP_CFG 3141
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} UpnpCfgObject;

/*! \brief _UpnpCfgObject is used internally to represent UpnpCfgObject */
typedef UpnpCfgObject _UpnpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.DnsProxyCfg.
 *
 * MDMOID_DNS_PROXY_CFG 3142
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    deviceDomainName;	/**< DeviceDomainName */
    char *    deviceHostName;	/**< DeviceHostName */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} DnsProxyCfgObject;

/*! \brief _DnsProxyCfgObject is used internally to represent DnsProxyCfgObject */
typedef DnsProxyCfgObject _DnsProxyCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.DectdCfg.
 *
 * MDMOID_DECTD_CFG 3143
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} DectdCfgObject;

/*! \brief _DectdCfgObject is used internally to represent DectdCfgObject */
typedef DectdCfgObject _DectdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.VectoringCfg.
 *
 * MDMOID_VECTORING_CFG 3144
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} VectoringCfgObject;

/*! \brief _VectoringCfgObject is used internally to represent VectoringCfgObject */
typedef VectoringCfgObject _VectoringCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.OmcidCfg.
 *
 * MDMOID_OMCID_CFG 2000
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} OmcidCfgObject;

/*! \brief _OmcidCfgObject is used internally to represent OmcidCfgObject */
typedef OmcidCfgObject _OmcidCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.OsgidCfg.
 *
 * MDMOID_OSGID_CFG 3160
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} OsgidCfgObject;

/*! \brief _OsgidCfgObject is used internally to represent OsgidCfgObject */
typedef OsgidCfgObject _OsgidCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.LinmosdCfg.
 *
 * MDMOID_LINMOSD_CFG 3161
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} LinmosdCfgObject;

/*! \brief _LinmosdCfgObject is used internally to represent LinmosdCfgObject */
typedef LinmosdCfgObject _LinmosdCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.XmppcCfg.
 *
 * MDMOID_XMPPC_CFG 3300
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} XmppcCfgObject;

/*! \brief _XmppcCfgObject is used internally to represent XmppcCfgObject */
typedef XmppcCfgObject _XmppcCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.CellularappCfg.
 *
 * MDMOID_CELLULARAPP_CFG 3410
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} CellularappCfgObject;

/*! \brief _CellularappCfgObject is used internally to represent CellularappCfgObject */
typedef CellularappCfgObject _CellularappCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AppCfg.EponappCfg.
 *
 * MDMOID_EPONAPP_CFG 2500
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loggingLevel;	/**< LoggingLevel */
    char *    loggingDestination;	/**< LoggingDestination */
} EponappCfgObject;

/*! \brief _EponappCfgObject is used internally to represent EponappCfgObject */
typedef EponappCfgObject _EponappCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetSwitch.
 *
 * MDMOID_ETHERNET_SWITCH 3220
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    numberOfVirtualPorts;	/**< NumberOfVirtualPorts */
    UBOOL8    enableVirtualPorts;	/**< EnableVirtualPorts */
    char *    ifName;	/**< IfName */
} EthernetSwitchObject;

/*! \brief _EthernetSwitchObject is used internally to represent EthernetSwitchObject */
typedef EthernetSwitchObject _EthernetSwitchObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_PwrMngtCfg.
 *
 * MDMOID_PWR_MNGT 3230
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    CPUSpeed;	/**< CPUSpeed */
    UBOOL8    CPUr4kWaitEn;	/**< CPUr4kWaitEn */
    UBOOL8    DRAMSelfRefreshEn;	/**< DRAMSelfRefreshEn */
    UBOOL8    DRAMAutoPDEn;	/**< DRAMAutoPDEn */
    UBOOL8    ethAutoPwrDwnEn;	/**< EthAutoPwrDwnEn */
    UBOOL8    ethEEE;	/**< EthEEE */
    SINT32    ethRegisteredCount;	/**< EthRegisteredCount */
    SINT32    ethIfConnectedCount;	/**< EthIfConnectedCount */
    SINT32    USBIfRegisteredCount;	/**< USBIfRegisteredCount */
    SINT32    USBIfConnectedCount;	/**< USBIfConnectedCount */
    UBOOL8    avsEn;	/**< AvsEn */
    UBOOL8    VCTEn;	/**< VCTEn */
    UBOOL8    wifiEn;	/**< WifiEn */
    UBOOL8    ledEn;	/**< LedEn */
    UBOOL8    USBHostEn;	/**< USBHostEn */
    UBOOL8    USBDevEn;	/**< USBDevEn */
    UBOOL8    DSLEn;	/**< DSLEn */
    UBOOL8    moCAEn;	/**< MoCAEn */
    UBOOL8    GPONEn;	/**< GPONEn */
    UBOOL8    bcm6358MAC0En;	/**< bcm6358MAC0En */
    UBOOL8    bcm6358MAC1En;	/**< bcm6358MAC1En */
    UBOOL8    bcm6358EPHYEn;	/**< bcm6358EPHYEn */
    UBOOL8    bcm5325ePHY0En;	/**< bcm5325ePHY0En */
    UBOOL8    bcm5325ePHY1En;	/**< bcm5325ePHY1En */
    UBOOL8    bcm5325ePHY2En;	/**< bcm5325ePHY2En */
    UBOOL8    bcm5325ePHY3En;	/**< bcm5325ePHY3En */
    UBOOL8    bcm5325ePHY45En;	/**< bcm5325ePHY45En */
    UBOOL8    bcm6368ePHY0En;	/**< bcm6368ePHY0En */
    UBOOL8    bcm6368ePHY1En;	/**< bcm6368ePHY1En */
    UBOOL8    bcm6368ePHY2En;	/**< bcm6368ePHY2En */
    UBOOL8    bcm6368ePHY3En;	/**< bcm6368ePHY3En */
    UBOOL8    bcm6816ePHY0En;	/**< bcm6816ePHY0En */
    UBOOL8    bcm6816ePHY1En;	/**< bcm6816ePHY1En */
    UBOOL8    bcm6816ePHY2En;	/**< bcm6816ePHY2En */
    UBOOL8    bcm6816ePHY3En;	/**< bcm6816ePHY3En */
} PwrMngtObject;

/*! \brief _PwrMngtObject is used internally to represent PwrMngtObject */
typedef PwrMngtObject _PwrMngtObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_StandbyCfg.
 *
 * MDMOID_STANDBY_CFG 3231
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    standbyEnable;	/**< StandbyEnable */
    char *    standbyStatusString;	/**< StandbyStatusString */
    SINT32    standbyHour;	/**< StandbyHour */
    SINT32    standbyMinutes;	/**< StandbyMinutes */
    SINT32    wakeupHour;	/**< WakeupHour */
    SINT32    wakeupMinutes;	/**< WakeupMinutes */
} StandbyCfgObject;

/*! \brief _StandbyCfgObject is used internally to represent StandbyCfgObject */
typedef StandbyCfgObject _StandbyCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_BMU.
 *
 * MDMOID_BATTERY_MANAGEMENT 3232
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} BatteryManagementObject;

/*! \brief _BatteryManagementObject is used internally to represent BatteryManagementObject */
typedef BatteryManagementObject _BatteryManagementObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_BMU.Config.
 *
 * MDMOID_BATTERY_MANAGEMENT_CONFIGURATION 3233
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    pollIntervalSeconds;	/**< PollIntervalSeconds */
    SINT32    maxChargePercent;	/**< MaxChargePercent */
    SINT32    upsConfigLowBattTime;	/**< UpsConfigLowBattTime */
    SINT32    replacementThresholdPercent;	/**< ReplacementThresholdPercent */
    SINT32    lowChargePercent;	/**< LowChargePercent */
    UBOOL8    lifeTestingEnabled;	/**< LifeTestingEnabled */
    UINT32    lifeTestPeriod;	/**< LifeTestPeriod */
    char *    lifeTestTOD;	/**< LifeTestTOD */
    SINT32    packVoltageSmoothingSteps;	/**< PackVoltageSmoothingSteps */
    UINT32    boardVoltageSmoothingSteps;	/**< BoardVoltageSmoothingSteps */
    UINT32    packTemperatureSmoothingSteps;	/**< PackTemperatureSmoothingSteps */
    UINT32    boardTemperatureSmoothingSteps;	/**< BoardTemperatureSmoothingSteps */
    UINT32    allowedFaults;	/**< AllowedFaults */
} BatteryManagementConfigurationObject;

/*! \brief _BatteryManagementConfigurationObject is used internally to represent BatteryManagementConfigurationObject */
typedef BatteryManagementConfigurationObject _BatteryManagementConfigurationObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_BMU.Status.
 *
 * MDMOID_BATTERY_MANAGEMENT_STATUS 3234
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    version;	/**< Version */
    DATETIME  buildDateTime;	/**< BuildDateTime */
    UBOOL8    operatingOnBattery;	/**< OperatingOnBattery */
    char *    state;	/**< State */
    UINT32    numberOfPresentBatteries;	/**< NumberOfPresentBatteries */
    UINT32    inputVoltage;	/**< InputVoltage */
    SINT32    temperature;	/**< Temperature */
    UINT32    estimatedMinutesRemaining;	/**< EstimatedMinutesRemaining */
    SINT32    batteryCurrent;	/**< BatteryCurrent */
    UINT32    upsSecondsOnBattery;	/**< UpsSecondsOnBattery */
} BatteryManagementStatusObject;

/*! \brief _BatteryManagementStatusObject is used internally to represent BatteryManagementStatusObject */
typedef BatteryManagementStatusObject _BatteryManagementStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_BMU.BatteryStatus.{i}.
 *
 * MDMOID_BATTERY_MANAGEMENT_BATTERY_STATUS 3235
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    index;	/**< Index */
    UBOOL8    batteryPresent;	/**< BatteryPresent */
    UBOOL8    batteryValid;	/**< BatteryValid */
    UBOOL8    batteryBad;	/**< BatteryBad */
    UBOOL8    batterySelected;	/**< BatterySelected */
    UBOOL8    batteryFullyCharged;	/**< BatteryFullyCharged */
    UBOOL8    batteryChargeLow;	/**< BatteryChargeLow */
    UBOOL8    batteryChargeLowPercent;	/**< BatteryChargeLowPercent */
    UBOOL8    batteryChargeDepleted;	/**< BatteryChargeDepleted */
    UBOOL8    batteryChargeStateUnknown;	/**< BatteryChargeStateUnknown */
    UINT32    batteryChargeCapacity;	/**< BatteryChargeCapacity */
    UINT32    batteryActualCapacity;	/**< BatteryActualCapacity */
    UINT32    batteryFullChargeVoltage;	/**< BatteryFullChargeVoltage */
    UINT32    batteryDepletedVoltage;	/**< BatteryDepletedVoltage */
    UINT32    batteryMeasuredVoltage;	/**< BatteryMeasuredVoltage */
    UINT32    batteryPercentCharge;	/**< BatteryPercentCharge */
    UINT32    batteryEstimatedMinutesRemaining;	/**< BatteryEstimatedMinutesRemaining */
    SINT32    batteryTemperature;	/**< BatteryTemperature */
    UINT32    batteryLifeTestCount;	/**< BatteryLifeTestCount */
    DATETIME  batteryLastLifeTest;	/**< BatteryLastLifeTest */
    DATETIME  batteryNextLifeTest;	/**< BatteryNextLifeTest */
    char *    batteryLifeTestState;	/**< BatteryLifeTestState */
    UINT32    batteryStateofHealth;	/**< BatteryStateofHealth */
} BatteryManagementBatteryStatusObject;

/*! \brief _BatteryManagementBatteryStatusObject is used internally to represent BatteryManagementBatteryStatusObject */
typedef BatteryManagementBatteryStatusObject _BatteryManagementBatteryStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_BMU.BatteryNonVol.{i}.
 *
 * MDMOID_BATTERY_MANAGEMENT_BATTERY_NON_VOL 3236
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    index;	/**< Index */
    UINT32    flags;	/**< Flags */
    UINT32    estLifeRemaining;	/**< EstLifeRemaining */
    UINT32    designCapacity;	/**< DesignCapacity */
    UINT32    maxMicroWh;	/**< MaxMicroWh */
    UINT64    guid;	/**< Guid */
    UINT32    lifeTestCount;	/**< LifeTestCount */
    UINT64    lastLifeTestStarted;	/**< LastLifeTestStarted */
    UINT64    nextLifeTestUpdate;	/**< NextLifeTestUpdate */
    UINT32    totalSeconds;	/**< TotalSeconds */
    UINT32    seriesResistance;	/**< SeriesResistance */
    HEXBINARY  dchgVoltages;	/**< DchgVoltages */
} BatteryManagementBatteryNonVolObject;

/*! \brief _BatteryManagementBatteryNonVolObject is used internally to represent BatteryManagementBatteryNonVolObject */
typedef BatteryManagementBatteryNonVolObject _BatteryManagementBatteryNonVolObject;



/*! \brief Obj struct for InternetGatewayDevice.DeviceConfig.
 *
 * MDMOID_DEVICE_CONFIG 4
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    persistentData;	/**< PersistentData */
    char *    configFile;	/**< ConfigFile */
} DeviceConfigObject;

/*! \brief _DeviceConfigObject is used internally to represent DeviceConfigObject */
typedef DeviceConfigObject _DeviceConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.ManagementServer.
 *
 * MDMOID_MANAGEMENT_SERVER 5
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    URL;	/**< URL */
    char *    lastConnectedURL;	/**< LastConnectedURL */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    UBOOL8    periodicInformEnable;	/**< PeriodicInformEnable */
    UINT32    periodicInformInterval;	/**< PeriodicInformInterval */
    DATETIME  periodicInformTime;	/**< PeriodicInformTime */
    char *    parameterKey;	/**< ParameterKey */
    char *    X_BROADCOM_COM_BoundIfName;	/**< X_BROADCOM_COM_BoundIfName */
    char *    connectionRequestURL;	/**< ConnectionRequestURL */
    char *    connectionRequestUsername;	/**< ConnectionRequestUsername */
    char *    connectionRequestPassword;	/**< ConnectionRequestPassword */
    UBOOL8    upgradesManaged;	/**< UpgradesManaged */
    char *    kickURL;	/**< KickURL */
    UINT32    CWMPRetryMinimumWaitInterval;	/**< CWMPRetryMinimumWaitInterval */
    UINT32    CWMPRetryIntervalMultiplier;	/**< CWMPRetryIntervalMultiplier */
#ifdef DMP_DEVICEASSOCIATION_1
    UINT32    manageableDeviceNumberOfEntries;	/**< ManageableDeviceNumberOfEntries */
#endif
    UINT32    manageableDeviceNotificationLimit;	/**< ManageableDeviceNotificationLimit */
#ifdef DMP_UDPCONNREQ_1
    char *    UDPConnectionRequestAddress;	/**< UDPConnectionRequestAddress */
#endif
#ifdef DMP_UDPCONNREQ_1
    UINT32    UDPConnectionRequestAddressNotificationLimit;	/**< UDPConnectionRequestAddressNotificationLimit */
#endif
#ifdef DMP_UDPCONNREQ_1
    UBOOL8    STUNEnable;	/**< STUNEnable */
#endif
#ifdef DMP_UDPCONNREQ_1
    char *    STUNServerAddress;	/**< STUNServerAddress */
#endif
#ifdef DMP_UDPCONNREQ_1
    UINT32    STUNServerPort;	/**< STUNServerPort */
#endif
#ifdef DMP_UDPCONNREQ_1
    char *    STUNUsername;	/**< STUNUsername */
#endif
#ifdef DMP_UDPCONNREQ_1
    char *    STUNPassword;	/**< STUNPassword */
#endif
#ifdef DMP_UDPCONNREQ_1
    SINT32    STUNMaximumKeepAlivePeriod;	/**< STUNMaximumKeepAlivePeriod */
#endif
#ifdef DMP_UDPCONNREQ_1
    UINT32    STUNMinimumKeepAlivePeriod;	/**< STUNMinimumKeepAlivePeriod */
#endif
#ifdef DMP_UDPCONNREQ_1
    UBOOL8    NATDetected;	/**< NATDetected */
#endif
#ifdef DMP_DEVICE2_XMPPCONNREQ_1
    char *    supportedConnReqMethods;	/**< SupportedConnReqMethods */
#endif
#ifdef DMP_DEVICE2_XMPPCONNREQ_1
    char *    connReqXMPPConnection;	/**< ConnReqXMPPConnection */
#endif
#ifdef DMP_DEVICE2_XMPPCONNREQ_1
    char *    connReqAllowedJabberIDs;	/**< ConnReqAllowedJabberIDs */
#endif
#ifdef DMP_DEVICE2_XMPPCONNREQ_1
    char *    connReqJabberID;	/**< ConnReqJabberID */
#endif
#ifdef DMP_X_BROADCOM_COM_UPNPIGDHTTPCONNREQ_1
    char *    X_BROADCOM_COM_UPNPC_IGD_WAN_ADDRESS;	/**< X_BROADCOM_COM_UPNPC_IGD_WAN_ADDRESS */
#endif
#ifdef DMP_X_BROADCOM_COM_UPNPIGDHTTPCONNREQ_1
    UINT32    X_BROADCOM_COM_UPNPC_IGD_EXT_PORT;	/**< X_BROADCOM_COM_UPNPC_IGD_EXT_PORT */
#endif
} ManagementServerObject;

/*! \brief _ManagementServerObject is used internally to represent ManagementServerObject */
typedef ManagementServerObject _ManagementServerObject;



/*! \brief Obj struct for InternetGatewayDevice.ManagementServer.ManageableDevice.{i}.
 *
 * MDMOID_MANAGEABLE_DEVICE 6
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    serialNumber;	/**< SerialNumber */
    char *    productClass;	/**< ProductClass */
} ManageableDeviceObject;

/*! \brief _ManageableDeviceObject is used internally to represent ManageableDeviceObject */
typedef ManageableDeviceObject _ManageableDeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.ManagementServer.AutonomousTransferCompletePolicy.
 *
 * MDMOID_AUTON_XFER_COMPLETE_POLICY 7
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    transferTypeFilter;	/**< TransferTypeFilter */
    char *    resultTypeFilter;	/**< ResultTypeFilter */
    char *    fileTypeFilter;	/**< FileTypeFilter */
} AutonXferCompletePolicyObject;

/*! \brief _AutonXferCompletePolicyObject is used internally to represent AutonXferCompletePolicyObject */
typedef AutonXferCompletePolicyObject _AutonXferCompletePolicyObject;



/*! \brief Obj struct for InternetGatewayDevice.ManagementServer.DUStateChangeComplPolicy.
 *
 * MDMOID_DU_STATE_CHANGE_COMPL_POLICY 8
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    operationTypeFilter;	/**< OperationTypeFilter */
    char *    resultTypeFilter;	/**< ResultTypeFilter */
    char *    faultCodeFilter;	/**< FaultCodeFilter */
} DUStateChangeComplPolicyObject;

/*! \brief _DUStateChangeComplPolicyObject is used internally to represent DUStateChangeComplPolicyObject */
typedef DUStateChangeComplPolicyObject _DUStateChangeComplPolicyObject;



/*! \brief Obj struct for InternetGatewayDevice.Time.
 *
 * MDMOID_TIME_SERVER_CFG 9
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    NTPServer1;	/**< NTPServer1 */
    char *    NTPServer2;	/**< NTPServer2 */
    char *    NTPServer3;	/**< NTPServer3 */
    char *    NTPServer4;	/**< NTPServer4 */
    char *    NTPServer5;	/**< NTPServer5 */
    DATETIME  currentLocalTime;	/**< CurrentLocalTime */
    char *    localTimeZone;	/**< LocalTimeZone */
    char *    localTimeZoneName;	/**< LocalTimeZoneName */
    UBOOL8    daylightSavingsUsed;	/**< DaylightSavingsUsed */
    DATETIME  daylightSavingsStart;	/**< DaylightSavingsStart */
    DATETIME  daylightSavingsEnd;	/**< DaylightSavingsEnd */
} TimeServerCfgObject;

/*! \brief _TimeServerCfgObject is used internally to represent TimeServerCfgObject */
typedef TimeServerCfgObject _TimeServerCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.
 *
 * MDMOID_L2_BRIDGING 11
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    maxBridgeEntries;	/**< MaxBridgeEntries */
    UINT32    maxFilterEntries;	/**< MaxFilterEntries */
    UINT32    maxMarkingEntries;	/**< MaxMarkingEntries */
    UINT32    bridgeNumberOfEntries;	/**< BridgeNumberOfEntries */
    UINT32    filterNumberOfEntries;	/**< FilterNumberOfEntries */
    UINT32    markingNumberOfEntries;	/**< MarkingNumberOfEntries */
    UINT32    availableInterfaceNumberOfEntries;	/**< AvailableInterfaceNumberOfEntries */
} L2BridgingObject;

/*! \brief _L2BridgingObject is used internally to represent L2BridgingObject */
typedef L2BridgingObject _L2BridgingObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.Bridge.{i}.
 *
 * MDMOID_L2_BRIDGING_ENTRY 12
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bridgeKey;	/**< BridgeKey */
    UBOOL8    bridgeEnable;	/**< BridgeEnable */
    char *    bridgeStatus;	/**< BridgeStatus */
    char *    bridgeName;	/**< BridgeName */
    UINT32    VLANID;	/**< VLANID */
} L2BridgingEntryObject;

/*! \brief _L2BridgingEntryObject is used internally to represent L2BridgingEntryObject */
typedef L2BridgingEntryObject _L2BridgingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.Filter.{i}.
 *
 * MDMOID_L2_BRIDGING_FILTER 13
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    filterKey;	/**< FilterKey */
    UBOOL8    filterEnable;	/**< FilterEnable */
    char *    filterStatus;	/**< FilterStatus */
    SINT32    filterBridgeReference;	/**< FilterBridgeReference */
    char *    filterInterface;	/**< FilterInterface */
    SINT32    X_BROADCOM_COM_VLANIDFilter;	/**< X_BROADCOM_COM_VLANIDFilter */
    char *    sourceMACFromVendorClassIDFilter;	/**< SourceMACFromVendorClassIDFilter */
    UBOOL8    sourceMACFromVendorClassIDFilterExclude;	/**< SourceMACFromVendorClassIDFilterExclude */
} L2BridgingFilterObject;

/*! \brief _L2BridgingFilterObject is used internally to represent L2BridgingFilterObject */
typedef L2BridgingFilterObject _L2BridgingFilterObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer2Bridging.AvailableInterface.{i}.
 *
 * MDMOID_L2_BRIDGING_INTF 15
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    availableInterfaceKey;	/**< AvailableInterfaceKey */
    char *    interfaceType;	/**< InterfaceType */
    char *    interfaceReference;	/**< InterfaceReference */
} L2BridgingIntfObject;

/*! \brief _L2BridgingIntfObject is used internally to represent L2BridgingIntfObject */
typedef L2BridgingIntfObject _L2BridgingIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.
 *
 * MDMOID_Q_MGMT 16
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    maxQueues;	/**< MaxQueues */
    UINT32    maxClassificationEntries;	/**< MaxClassificationEntries */
    UINT32    classificationNumberOfEntries;	/**< ClassificationNumberOfEntries */
    UINT32    maxAppEntries;	/**< MaxAppEntries */
    UINT32    appNumberOfEntries;	/**< AppNumberOfEntries */
    UINT32    maxFlowEntries;	/**< MaxFlowEntries */
    UINT32    flowNumberOfEntries;	/**< FlowNumberOfEntries */
    UINT32    maxPolicerEntries;	/**< MaxPolicerEntries */
    UINT32    policerNumberOfEntries;	/**< PolicerNumberOfEntries */
    UINT32    maxQueueEntries;	/**< MaxQueueEntries */
    UINT32    queueNumberOfEntries;	/**< QueueNumberOfEntries */
    UINT32    defaultForwardingPolicy;	/**< DefaultForwardingPolicy */
    SINT32    defaultPolicer;	/**< DefaultPolicer */
    UINT32    defaultQueue;	/**< DefaultQueue */
    SINT32    defaultDSCPMark;	/**< DefaultDSCPMark */
    SINT32    defaultEthernetPriorityMark;	/**< DefaultEthernetPriorityMark */
    char *    availableAppList;	/**< AvailableAppList */
} QMgmtObject;

/*! \brief _QMgmtObject is used internally to represent QMgmtObject */
typedef QMgmtObject _QMgmtObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.Classification.{i}.
 *
 * MDMOID_Q_MGMT_CLASSIFICATION 17
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    classificationKey;	/**< ClassificationKey */
    UBOOL8    classificationEnable;	/**< ClassificationEnable */
    char *    classificationStatus;	/**< ClassificationStatus */
    UINT32    classificationOrder;	/**< ClassificationOrder */
    char *    classInterface;	/**< ClassInterface */
    char *    destIP;	/**< DestIP */
    char *    destMask;	/**< DestMask */
    UBOOL8    destIPExclude;	/**< DestIPExclude */
    char *    sourceIP;	/**< SourceIP */
    char *    sourceMask;	/**< SourceMask */
    UBOOL8    sourceIPExclude;	/**< SourceIPExclude */
    SINT32    protocol;	/**< Protocol */
    UBOOL8    protocolExclude;	/**< ProtocolExclude */
    SINT32    destPort;	/**< DestPort */
    SINT32    destPortRangeMax;	/**< DestPortRangeMax */
    UBOOL8    destPortExclude;	/**< DestPortExclude */
    SINT32    sourcePort;	/**< SourcePort */
    SINT32    sourcePortRangeMax;	/**< SourcePortRangeMax */
    UBOOL8    sourcePortExclude;	/**< SourcePortExclude */
    char *    sourceMACAddress;	/**< SourceMACAddress */
    char *    sourceMACMask;	/**< SourceMACMask */
    UBOOL8    sourceMACExclude;	/**< SourceMACExclude */
    char *    destMACAddress;	/**< DestMACAddress */
    char *    destMACMask;	/**< DestMACMask */
    UBOOL8    destMACExclude;	/**< DestMACExclude */
    SINT32    ethertype;	/**< Ethertype */
    UBOOL8    ethertypeExclude;	/**< EthertypeExclude */
    char *    sourceVendorClassID;	/**< SourceVendorClassID */
    UBOOL8    sourceVendorClassIDExclude;	/**< SourceVendorClassIDExclude */
    char *    sourceUserClassID;	/**< SourceUserClassID */
    UBOOL8    sourceUserClassIDExclude;	/**< SourceUserClassIDExclude */
    SINT32    DSCPCheck;	/**< DSCPCheck */
    UBOOL8    DSCPExclude;	/**< DSCPExclude */
    SINT32    DSCPMark;	/**< DSCPMark */
    SINT32    ethernetPriorityCheck;	/**< EthernetPriorityCheck */
    UBOOL8    ethernetPriorityExclude;	/**< EthernetPriorityExclude */
    SINT32    ethernetPriorityMark;	/**< EthernetPriorityMark */
    SINT32    VLANIDCheck;	/**< VLANIDCheck */
    UBOOL8    VLANIDExclude;	/**< VLANIDExclude */
    UINT32    forwardingPolicy;	/**< ForwardingPolicy */
    SINT32    classPolicer;	/**< ClassPolicer */
    SINT32    classQueue;	/**< ClassQueue */
    SINT32    classApp;	/**< ClassApp */
    SINT32    X_BROADCOM_COM_ClassRate;	/**< X_BROADCOM_COM_ClassRate */
    char *    X_BROADCOM_COM_ClassName;	/**< X_BROADCOM_COM_ClassName */
    SINT32    X_BROADCOM_COM_VLANIDTag;	/**< X_BROADCOM_COM_VLANIDTag */
    char *    X_BROADCOM_COM_egressInterface;	/**< X_BROADCOM_COM_egressInterface */
    UINT32    X_BROADCOM_COM_ClassKey;	/**< X_BROADCOM_COM_ClassKey */
} QMgmtClassificationObject;

/*! \brief _QMgmtClassificationObject is used internally to represent QMgmtClassificationObject */
typedef QMgmtClassificationObject _QMgmtClassificationObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.Policer.{i}.
 *
 * MDMOID_Q_MGMT_POLICER 20
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    policerKey;	/**< PolicerKey */
    UBOOL8    policerEnable;	/**< PolicerEnable */
    char *    policerStatus;	/**< PolicerStatus */
    UINT32    committedRate;	/**< CommittedRate */
    UINT32    committedBurstSize;	/**< CommittedBurstSize */
    UINT32    excessBurstSize;	/**< ExcessBurstSize */
    UINT32    peakRate;	/**< PeakRate */
    UINT32    peakBurstSize;	/**< PeakBurstSize */
    char *    meterType;	/**< MeterType */
    char *    possibleMeterTypes;	/**< PossibleMeterTypes */
    char *    conformingAction;	/**< ConformingAction */
    char *    partialConformingAction;	/**< PartialConformingAction */
    char *    nonConformingAction;	/**< NonConformingAction */
    UINT32    countedPackets;	/**< CountedPackets */
    UINT32    countedBytes;	/**< CountedBytes */
    char *    X_BROADCOM_COM_PolicerName;	/**< X_BROADCOM_COM_PolicerName */
} QMgmtPolicerObject;

/*! \brief _QMgmtPolicerObject is used internally to represent QMgmtPolicerObject */
typedef QMgmtPolicerObject _QMgmtPolicerObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.Queue.{i}.
 *
 * MDMOID_Q_MGMT_QUEUE 21
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    queueKey;	/**< QueueKey */
    UBOOL8    queueEnable;	/**< QueueEnable */
    char *    queueStatus;	/**< QueueStatus */
    char *    queueInterface;	/**< QueueInterface */
    UINT32    queueWeight;	/**< QueueWeight */
    UINT32    queuePrecedence;	/**< QueuePrecedence */
    UINT32    REDThreshold;	/**< REDThreshold */
    char *    dropAlgorithm;	/**< DropAlgorithm */
    char *    schedulerAlgorithm;	/**< SchedulerAlgorithm */
    SINT32    shapingRate;	/**< ShapingRate */
    UINT32    shapingBurstSize;	/**< ShapingBurstSize */
    SINT32    X_BROADCOM_COM_MinBitRate;	/**< X_BROADCOM_COM_MinBitRate */
    char *    X_BROADCOM_COM_QueueName;	/**< X_BROADCOM_COM_QueueName */
    SINT32    X_BROADCOM_COM_DslLatency;	/**< X_BROADCOM_COM_DslLatency */
    SINT32    X_BROADCOM_COM_PtmPriority;	/**< X_BROADCOM_COM_PtmPriority */
    UINT32    X_BROADCOM_COM_QueueId;	/**< X_BROADCOM_COM_QueueId */
    UINT32    X_BROADCOM_COM_LowClassMaxThreshold;	/**< X_BROADCOM_COM_LowClassMaxThreshold */
    UINT32    X_BROADCOM_COM_HighClassMinThreshold;	/**< X_BROADCOM_COM_HighClassMinThreshold */
    UINT32    X_BROADCOM_COM_HighClassMaxThreshold;	/**< X_BROADCOM_COM_HighClassMaxThreshold */
} QMgmtQueueObject;

/*! \brief _QMgmtQueueObject is used internally to represent QMgmtQueueObject */
typedef QMgmtQueueObject _QMgmtQueueObject;



/*! \brief Obj struct for InternetGatewayDevice.QueueManagement.QueueStats.{i}.
 *
 * MDMOID_Q_MGMT_QUEUE_STATS 22
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    queueInterface;	/**< QueueInterface */
    UINT32    X_BROADCOM_COM_QueueId;	/**< X_BROADCOM_COM_QueueId */
    UINT32    outputPackets;	/**< OutputPackets */
    UINT32    outputBytes;	/**< OutputBytes */
    UINT32    droppedPackets;	/**< DroppedPackets */
    UINT32    droppedBytes;	/**< DroppedBytes */
} QMgmtQueueStatsObject;

/*! \brief _QMgmtQueueStatsObject is used internally to represent QMgmtQueueStatsObject */
typedef QMgmtQueueStatsObject _QMgmtQueueStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.IPPingDiagnostics.
 *
 * MDMOID_IP_PING_DIAG 24
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    host;	/**< Host */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    dataBlockSize;	/**< DataBlockSize */
    UINT32    DSCP;	/**< DSCP */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} IPPingDiagObject;

/*! \brief _IPPingDiagObject is used internally to represent IPPingDiagObject */
typedef IPPingDiagObject _IPPingDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.EponSoftwareImage.{i}.
 *
 * MDMOID_EPON_SOFTWARE_IMAGE 25
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  version;	/**< Version */
    UBOOL8    isCommitted;	/**< IsCommitted */
    UBOOL8    isActive;	/**< IsActive */
    UBOOL8    isValid;	/**< IsValid */
} EponSoftwareImageObject;

/*! \brief _EponSoftwareImageObject is used internally to represent EponSoftwareImageObject */
typedef EponSoftwareImageObject _EponSoftwareImageObject;



/*! \brief Obj struct for InternetGatewayDevice.EponSwUpgradeStatus.
 *
 * MDMOID_EPON_SW_UPGRADE_STATUS 26
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    ctcDownloadState;	/**< CtcDownloadState */
    UINT32    recentlyDownloadedPartition;	/**< RecentlyDownloadedPartition */
    UBOOL8    download3715Needed;	/**< Download3715Needed */
} EponSwUpgradeStatusObject;

/*! \brief _EponSwUpgradeStatusObject is used internally to represent EponSwUpgradeStatusObject */
typedef EponSwUpgradeStatusObject _EponSwUpgradeStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.
 *
 * MDMOID_LAN_DEV 27
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    LANEthernetInterfaceNumberOfEntries;	/**< LANEthernetInterfaceNumberOfEntries */
    UINT32    LANUSBInterfaceNumberOfEntries;	/**< LANUSBInterfaceNumberOfEntries */
    UINT32    LANWLANConfigurationNumberOfEntries;	/**< LANWLANConfigurationNumberOfEntries */
#ifdef DMP_X_BROADCOM_COM_BASELINE_1
    UINT32    X_BROADCOM_COM_LANMocaInterfaceNumberOfEntries;	/**< X_BROADCOM_COM_LANMocaInterfaceNumberOfEntries */
#endif
#ifdef DMP_X_BROADCOM_COM_EPON_1
    UINT32    X_BROADCOM_COM_LANEponInterfaceNumberOfEntries;	/**< X_BROADCOM_COM_LANEponInterfaceNumberOfEntries */
#endif
} LanDevObject;

/*! \brief _LanDevObject is used internally to represent LanDevObject */
typedef LanDevObject _LanDevObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_MldSnoopingConfig.
 *
 * MDMOID_MLD_SNOOPING_CFG 3281
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    mode;	/**< Mode */
    SINT32    lanToLanEnable;	/**< LanToLanEnable */
} MldSnoopingCfgObject;

/*! \brief _MldSnoopingCfgObject is used internally to represent MldSnoopingCfgObject */
typedef MldSnoopingCfgObject _MldSnoopingCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_IgmpSnoopingConfig.
 *
 * MDMOID_IGMP_SNOOPING_CFG 3280
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    mode;	/**< Mode */
    SINT32    lanToLanEnable;	/**< LanToLanEnable */
} IgmpSnoopingCfgObject;

/*! \brief _IgmpSnoopingCfgObject is used internally to represent IgmpSnoopingCfgObject */
typedef IgmpSnoopingCfgObject _IgmpSnoopingCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.
 *
 * MDMOID_LAN_HOST_CFG 28
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    DHCPServerConfigurable;	/**< DHCPServerConfigurable */
    UBOOL8    DHCPServerEnable;	/**< DHCPServerEnable */
    UBOOL8    DHCPRelay;	/**< DHCPRelay */
    char *    X_BROADCOM_COM_DhcpRelayServer;	/**< X_BROADCOM_COM_DhcpRelayServer */
    char *    minAddress;	/**< MinAddress */
    char *    maxAddress;	/**< MaxAddress */
    char *    reservedAddresses;	/**< ReservedAddresses */
    char *    subnetMask;	/**< SubnetMask */
    char *    DNSServers;	/**< DNSServers */
    char *    domainName;	/**< DomainName */
    char *    IPRouters;	/**< IPRouters */
    SINT32    DHCPLeaseTime;	/**< DHCPLeaseTime */
    UINT32    IPInterfaceNumberOfEntries;	/**< IPInterfaceNumberOfEntries */
} LanHostCfgObject;

/*! \brief _LanHostCfgObject is used internally to represent LanHostCfgObject */
typedef LanHostCfgObject _LanHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.
 *
 * MDMOID_LAN_IP_INTF 29
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    IPInterfaceIPAddress;	/**< IPInterfaceIPAddress */
    char *    IPInterfaceSubnetMask;	/**< IPInterfaceSubnetMask */
    char *    IPInterfaceAddressingType;	/**< IPInterfaceAddressingType */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
#ifdef DMP_X_BROADCOM_COM_SECURITY_1
    UBOOL8    X_BROADCOM_COM_FirewallEnabled;	/**< X_BROADCOM_COM_FirewallEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_BASELINE_1
    char *    X_BROADCOM_COM_DhcpConnectionStatus;	/**< X_BROADCOM_COM_DhcpConnectionStatus */
#endif
#ifdef DMP_X_BROADCOM_COM_BASELINE_1
    char *    X_BROADCOM_COM_DhcpDefaultGateway;	/**< X_BROADCOM_COM_DhcpDefaultGateway */
#endif
#ifdef DMP_X_BROADCOM_COM_BASELINE_1
    char *    X_BROADCOM_COM_DNSServers;	/**< X_BROADCOM_COM_DNSServers */
#endif
#ifdef DMP_X_BROADCOM_COM_BASELINE_1
    UINT32    X_BROADCOM_COM_DhcpcPid;	/**< X_BROADCOM_COM_DhcpcPid */
#endif
} LanIpIntfObject;

/*! \brief _LanIpIntfObject is used internally to represent LanIpIntfObject */
typedef LanIpIntfObject _LanIpIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_BROADCOM_COM_IPv6LanIntfAddress.
 *
 * MDMOID_I_PV6_LAN_INTF_ADDR 30
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    uniqueLocalAddress;	/**< UniqueLocalAddress */
} IPv6LanIntfAddrObject;

/*! \brief _IPv6LanIntfAddrObject is used internally to represent IPv6LanIntfAddrObject */
typedef IPv6LanIntfAddrObject _IPv6LanIntfAddrObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_BROADCOM_COM_IPv6LanIntfAddress.DelegatedAddress.{i}.
 *
 * MDMOID_DELEGATED_ADDRESS 31
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    mode;	/**< Mode */
    char *    delegatedConnection;	/**< DelegatedConnection */
    char *    IPv6InterfaceAddress;	/**< IPv6InterfaceAddress */
} DelegatedAddressObject;

/*! \brief _DelegatedAddressObject is used internally to represent DelegatedAddressObject */
typedef DelegatedAddressObject _DelegatedAddressObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_BROADCOM_COM_FirewallException.{i}.
 *
 * MDMOID_LAN_IP_INTF_FIREWALL_EXCEPTION 32
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} LanIpIntfFirewallExceptionObject;

/*! \brief _LanIpIntfFirewallExceptionObject is used internally to represent LanIpIntfFirewallExceptionObject */
typedef LanIpIntfFirewallExceptionObject _LanIpIntfFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.IPInterface.{i}.X_BROADCOM_COM_IpFilterCfg.{i}.
 *
 * MDMOID_IP_FILTER_CFG 33
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} IpFilterCfgObject;

/*! \brief _IpFilterCfgObject is used internally to represent IpFilterCfgObject */
typedef IpFilterCfgObject _IpFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANHostConfigManagement.DHCPConditionalServingPool.{i}.
 *
 * MDMOID_DHCP_CONDITIONAL_SERVING 34
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    chaddr;	/**< Chaddr */
    char *    chaddrMask;	/**< ChaddrMask */
    char *    minAddress;	/**< MinAddress */
    char *    maxAddress;	/**< MaxAddress */
    char *    reservedAddresses;	/**< ReservedAddresses */
    char *    subnetMask;	/**< SubnetMask */
    char *    DNSServers;	/**< DNSServers */
    char *    domainName;	/**< DomainName */
    char *    IPRouters;	/**< IPRouters */
    SINT32    DHCPLeaseTime;	/**< DHCPLeaseTime */
} DHCPConditionalServingObject;

/*! \brief _DHCPConditionalServingObject is used internally to represent DHCPConditionalServingObject */
typedef DHCPConditionalServingObject _DHCPConditionalServingObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_IPv6LANHostConfigManagement.
 *
 * MDMOID_I_PV6_LAN_HOST_CFG 36
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    DHCPv6ServerEnable;	/**< DHCPv6ServerEnable */
    UBOOL8    statefulDHCPv6Server;	/**< StatefulDHCPv6Server */
    char *    minInterfaceID;	/**< MinInterfaceID */
    char *    maxInterfaceID;	/**< MaxInterfaceID */
    SINT32    DHCPv6LeaseTime;	/**< DHCPv6LeaseTime */
    char *    IPv6DomainName;	/**< IPv6DomainName */
    char *    IPv6DNSConfigType;	/**< IPv6DNSConfigType */
    char *    IPv6DNSServers;	/**< IPv6DNSServers */
    char *    IPv6DNSWANConnection;	/**< IPv6DNSWANConnection */
    UINT32    IPv6InterfaceNumberOfEntries;	/**< IPv6InterfaceNumberOfEntries */
} IPv6LanHostCfgObject;

/*! \brief _IPv6LanHostCfgObject is used internally to represent IPv6LanHostCfgObject */
typedef IPv6LanHostCfgObject _IPv6LanHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_IPv6LANHostConfigManagement.RadvdConfigManagement.
 *
 * MDMOID_RADVD_CONFIG_MGT 37
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
} RadvdConfigMgtObject;

/*! \brief _RadvdConfigMgtObject is used internally to represent RadvdConfigMgtObject */
typedef RadvdConfigMgtObject _RadvdConfigMgtObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_IPv6LANHostConfigManagement.RadvdConfigManagement.ULAPrefixInfo.
 *
 * MDMOID_ULA_PREFIX_INFO 38
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UBOOL8    random;	/**< Random */
    char *    prefix;	/**< Prefix */
    SINT32    preferredLifeTime;	/**< PreferredLifeTime */
    SINT32    validLifeTime;	/**< ValidLifeTime */
} ULAPrefixInfoObject;

/*! \brief _ULAPrefixInfoObject is used internally to represent ULAPrefixInfoObject */
typedef ULAPrefixInfoObject _ULAPrefixInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_IPv6LANHostConfigManagement.RadvdConfigManagement.PrefixInformation.{i}.
 *
 * MDMOID_PREFIX_INFO 39
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    mode;	/**< Mode */
    char *    delegatedConnection;	/**< DelegatedConnection */
    char *    prefix;	/**< Prefix */
    SINT32    preferredLifeTime;	/**< PreferredLifeTime */
    SINT32    validLifeTime;	/**< ValidLifeTime */
} PrefixInfoObject;

/*! \brief _PrefixInfoObject is used internally to represent PrefixInfoObject */
typedef PrefixInfoObject _PrefixInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.
 *
 * MDMOID_LAN_ETH_INTF 40
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    char *    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    SINT32    X_BROADCOM_COM_EthernetPriorityMark;	/**< X_BROADCOM_COM_EthernetPriorityMark */
    SINT32    X_BROADCOM_COM_dot1qPvid;	/**< X_BROADCOM_COM_dot1qPvid */
    UINT32    X_BROADCOM_COM_VLAN_Enable;	/**< X_BROADCOM_COM_VLAN_Enable */
    char *    X_BROADCOM_COM_VLAN_TagList;	/**< X_BROADCOM_COM_VLAN_TagList */
    UBOOL8    X_BROADCOM_COM_GMAC_Enabled;	/**< X_BROADCOM_COM_GMAC_Enabled */
    SINT32    X_BROADCOM_COM_ShapingRate;	/**< X_BROADCOM_COM_ShapingRate */
    UINT32    X_BROADCOM_COM_ShapingBurstSize;	/**< X_BROADCOM_COM_ShapingBurstSize */
    char *    X_BROADCOM_COM_WanLan_Attribute;	/**< X_BROADCOM_COM_WanLan_Attribute */
} LanEthIntfObject;

/*! \brief _LanEthIntfObject is used internally to represent LanEthIntfObject */
typedef LanEthIntfObject _LanEthIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANEthernetInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_ETH_INTF_STATS 41
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    X_BROADCOM_COM_PacketsSent;	/**< X_BROADCOM_COM_PacketsSent */
    UINT32    X_BROADCOM_COM_PacketsReceived;	/**< X_BROADCOM_COM_PacketsReceived */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_MulticastPacketsSent;	/**< X_BROADCOM_COM_MulticastPacketsSent */
    UINT32    X_BROADCOM_COM_MulticastPacketsReceived;	/**< X_BROADCOM_COM_MulticastPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT32    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT32    X_BROADCOM_COM_UnicastPacketsSent;	/**< X_BROADCOM_COM_UnicastPacketsSent */
    UINT32    X_BROADCOM_COM_UnicastPacketsReceived;	/**< X_BROADCOM_COM_UnicastPacketsReceived */
    UINT32    X_BROADCOM_COM_BroadcastPacketsSent;	/**< X_BROADCOM_COM_BroadcastPacketsSent */
    UINT32    X_BROADCOM_COM_BroadcastPacketsReceived;	/**< X_BROADCOM_COM_BroadcastPacketsReceived */
} LanEthIntfStatsObject;

/*! \brief _LanEthIntfStatsObject is used internally to represent LanEthIntfStatsObject */
typedef LanEthIntfStatsObject _LanEthIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.
 *
 * MDMOID_LAN_USB_INTF 42
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    char *    power;	/**< Power */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
} LanUsbIntfObject;

/*! \brief _LanUsbIntfObject is used internally to represent LanUsbIntfObject */
typedef LanUsbIntfObject _LanUsbIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.LANUSBInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_USB_INTF_STATS 43
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    cellsSent;	/**< CellsSent */
    UINT32    cellsReceived;	/**< CellsReceived */
    UINT32    X_BROADCOM_COM_PacketsSent;	/**< X_BROADCOM_COM_PacketsSent */
    UINT32    X_BROADCOM_COM_PacketsReceived;	/**< X_BROADCOM_COM_PacketsReceived */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_MulticastPacketsSent;	/**< X_BROADCOM_COM_MulticastPacketsSent */
    UINT32    X_BROADCOM_COM_MulticastPacketsReceived;	/**< X_BROADCOM_COM_MulticastPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT32    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT32    X_BROADCOM_COM_UnicastPacketsSent;	/**< X_BROADCOM_COM_UnicastPacketsSent */
    UINT32    X_BROADCOM_COM_UnicastPacketsReceived;	/**< X_BROADCOM_COM_UnicastPacketsReceived */
    UINT32    X_BROADCOM_COM_BroadcastPacketsSent;	/**< X_BROADCOM_COM_BroadcastPacketsSent */
    UINT32    X_BROADCOM_COM_BroadcastPacketsReceived;	/**< X_BROADCOM_COM_BroadcastPacketsReceived */
} LanUsbIntfStatsObject;

/*! \brief _LanUsbIntfStatsObject is used internally to represent LanUsbIntfStatsObject */
typedef LanUsbIntfStatsObject _LanUsbIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.
 *
 * MDMOID_LAN_WLAN 44
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    BSSID;	/**< BSSID */
    char *    maxBitRate;	/**< MaxBitRate */
    UINT32    channel;	/**< Channel */
    char *    SSID;	/**< SSID */
    char *    beaconType;	/**< BeaconType */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
    char *    standard;	/**< Standard */
    UINT32    WEPKeyIndex;	/**< WEPKeyIndex */
    char *    keyPassphrase;	/**< KeyPassphrase */
    char *    WEPEncryptionLevel;	/**< WEPEncryptionLevel */
    char *    basicEncryptionModes;	/**< BasicEncryptionModes */
    char *    basicAuthenticationMode;	/**< BasicAuthenticationMode */
    char *    WPAEncryptionModes;	/**< WPAEncryptionModes */
    char *    WPAAuthenticationMode;	/**< WPAAuthenticationMode */
    char *    IEEE11iEncryptionModes;	/**< IEEE11iEncryptionModes */
    char *    IEEE11iAuthenticationMode;	/**< IEEE11iAuthenticationMode */
    char *    possibleChannels;	/**< PossibleChannels */
    char *    basicDataTransmitRates;	/**< BasicDataTransmitRates */
    char *    operationalDataTransmitRates;	/**< OperationalDataTransmitRates */
    char *    possibleDataTransmitRates;	/**< PossibleDataTransmitRates */
    UBOOL8    insecureOOBAccessEnabled;	/**< InsecureOOBAccessEnabled */
    UBOOL8    beaconAdvertisementEnabled;	/**< BeaconAdvertisementEnabled */
    UBOOL8    radioEnabled;	/**< RadioEnabled */
    UBOOL8    autoRateFallBackEnabled;	/**< AutoRateFallBackEnabled */
    char *    locationDescription;	/**< LocationDescription */
    char *    regulatoryDomain;	/**< RegulatoryDomain */
    UINT32    totalPSKFailures;	/**< TotalPSKFailures */
    UINT32    totalIntegrityFailures;	/**< TotalIntegrityFailures */
    char *    channelsInUse;	/**< ChannelsInUse */
    char *    deviceOperationMode;	/**< DeviceOperationMode */
    UINT32    distanceFromRoot;	/**< DistanceFromRoot */
    char *    peerBSSID;	/**< PeerBSSID */
    char *    authenticationServiceMode;	/**< AuthenticationServiceMode */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
    UINT32    totalPacketsSent;	/**< TotalPacketsSent */
    UINT32    totalPacketsReceived;	/**< TotalPacketsReceived */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_MulticastPacketsSent;	/**< X_BROADCOM_COM_MulticastPacketsSent */
    UINT32    X_BROADCOM_COM_MulticastPacketsReceived;	/**< X_BROADCOM_COM_MulticastPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT32    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT32    X_BROADCOM_COM_UnicastPacketsSent;	/**< X_BROADCOM_COM_UnicastPacketsSent */
    UINT32    X_BROADCOM_COM_UnicastPacketsReceived;	/**< X_BROADCOM_COM_UnicastPacketsReceived */
    UINT32    X_BROADCOM_COM_BroadcastPacketsSent;	/**< X_BROADCOM_COM_BroadcastPacketsSent */
    UINT32    X_BROADCOM_COM_BroadcastPacketsReceived;	/**< X_BROADCOM_COM_BroadcastPacketsReceived */
    UINT32    totalAssociations;	/**< TotalAssociations */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    UBOOL8    X_BROADCOM_COM_HideSSID;	/**< X_BROADCOM_COM_HideSSID */
    UINT32    X_BROADCOM_COM_TxPowerPercent;	/**< X_BROADCOM_COM_TxPowerPercent */
    char *    X_BROADCOM_COM_GuestSSID;	/**< X_BROADCOM_COM_GuestSSID */
    char *    X_BROADCOM_COM_GuestBSSID;	/**< X_BROADCOM_COM_GuestBSSID */
    UBOOL8    X_BROADCOM_COM_GuestEnable;	/**< X_BROADCOM_COM_GuestEnable */
    UBOOL8    X_BROADCOM_COM_GuestHiden;	/**< X_BROADCOM_COM_GuestHiden */
    UBOOL8    X_BROADCOM_COM_GuestIsolateClients;	/**< X_BROADCOM_COM_GuestIsolateClients */
    UBOOL8    X_BROADCOM_COM_GuestDisableWMMAdvertise;	/**< X_BROADCOM_COM_GuestDisableWMMAdvertise */
    SINT32    X_BROADCOM_COM_GuestMaxClients;	/**< X_BROADCOM_COM_GuestMaxClients */
    char *    X_BROADCOM_COM_Guest1SSID;	/**< X_BROADCOM_COM_Guest1SSID */
    char *    X_BROADCOM_COM_Guest1BSSID;	/**< X_BROADCOM_COM_Guest1BSSID */
    UBOOL8    X_BROADCOM_COM_Guest1Enable;	/**< X_BROADCOM_COM_Guest1Enable */
    UBOOL8    X_BROADCOM_COM_Guest1Hiden;	/**< X_BROADCOM_COM_Guest1Hiden */
    UBOOL8    X_BROADCOM_COM_Guest1IsolateClients;	/**< X_BROADCOM_COM_Guest1IsolateClients */
    UBOOL8    X_BROADCOM_COM_Guest1DisableWMMAdvertise;	/**< X_BROADCOM_COM_Guest1DisableWMMAdvertise */
    SINT32    X_BROADCOM_COM_Guest1MaxClients;	/**< X_BROADCOM_COM_Guest1MaxClients */
    char *    X_BROADCOM_COM_Guest2SSID;	/**< X_BROADCOM_COM_Guest2SSID */
    char *    X_BROADCOM_COM_Guest2BSSID;	/**< X_BROADCOM_COM_Guest2BSSID */
    UBOOL8    X_BROADCOM_COM_Guest2Enable;	/**< X_BROADCOM_COM_Guest2Enable */
    UBOOL8    X_BROADCOM_COM_Guest2Hiden;	/**< X_BROADCOM_COM_Guest2Hiden */
    UBOOL8    X_BROADCOM_COM_Guest2IsolateClients;	/**< X_BROADCOM_COM_Guest2IsolateClients */
    UBOOL8    X_BROADCOM_COM_Guest2DisableWMMAdvertise;	/**< X_BROADCOM_COM_Guest2DisableWMMAdvertise */
    SINT32    X_BROADCOM_COM_Guest2MaxClients;	/**< X_BROADCOM_COM_Guest2MaxClients */
} LanWlanObject;

/*! \brief _LanWlanObject is used internally to represent LanWlanObject */
typedef LanWlanObject _LanWlanObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.AssociatedDevice.{i}.
 *
 * MDMOID_LAN_WLAN_ASSOCIATED_DEVICE_ENTRY 45
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    associatedDeviceMACAddress;	/**< AssociatedDeviceMACAddress */
    char *    associatedDeviceIPAddress;	/**< AssociatedDeviceIPAddress */
    UBOOL8    associatedDeviceAuthenticationState;	/**< AssociatedDeviceAuthenticationState */
    char *    lastRequestedUnicastCipher;	/**< LastRequestedUnicastCipher */
    char *    lastRequestedMulticastCipher;	/**< LastRequestedMulticastCipher */
    char *    lastPMKId;	/**< LastPMKId */
    char *    lastDataTransmitRate;	/**< LastDataTransmitRate */
    SINT32    X_BROADCOM_COM_Associated;	/**< X_BROADCOM_COM_Associated */
    SINT32    X_BROADCOM_COM_Authorized;	/**< X_BROADCOM_COM_Authorized */
    char *    X_BROADCOM_COM_Ssid;	/**< X_BROADCOM_COM_Ssid */
    char *    X_BROADCOM_COM_Ifcname;	/**< X_BROADCOM_COM_Ifcname */
} LanWlanAssociatedDeviceEntryObject;

/*! \brief _LanWlanAssociatedDeviceEntryObject is used internally to represent LanWlanAssociatedDeviceEntryObject */
typedef LanWlanAssociatedDeviceEntryObject _LanWlanAssociatedDeviceEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.WEPKey.{i}.
 *
 * MDMOID_LAN_WLAN_WEP_KEY 46
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    WEPKey;	/**< WEPKey */
} LanWlanWepKeyObject;

/*! \brief _LanWlanWepKeyObject is used internally to represent LanWlanWepKeyObject */
typedef LanWlanWepKeyObject _LanWlanWepKeyObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.PreSharedKey.{i}.
 *
 * MDMOID_LAN_WLAN_PRE_SHARED_KEY 47
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    preSharedKey;	/**< PreSharedKey */
    char *    keyPassphrase;	/**< KeyPassphrase */
    char *    associatedDeviceMACAddress;	/**< AssociatedDeviceMACAddress */
} LanWlanPreSharedKeyObject;

/*! \brief _LanWlanPreSharedKeyObject is used internally to represent LanWlanPreSharedKeyObject */
typedef LanWlanPreSharedKeyObject _LanWlanPreSharedKeyObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.
 *
 * MDMOID_WLAN_ADAPTER 49
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WlanAdapterObject;

/*! \brief _WlanAdapterObject is used internally to represent WlanAdapterObject */
typedef WlanAdapterObject _WlanAdapterObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlBaseCfg.
 *
 * MDMOID_WL_BASE_CFG 50
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlEnbl;	/**< WlEnbl */
    SINT32    wlSsidIdx;	/**< WlSsidIdx */
    char *    wlMode;	/**< WlMode */
    char *    wlCountry;	/**< WlCountry */
    char *    wlPhyType;	/**< WlPhyType */
    SINT32    wlCoreRev;	/**< WlCoreRev */
    char *    wlBasicRate;	/**< WlBasicRate */
    char *    wlProtection;	/**< WlProtection */
    char *    wlPreambleType;	/**< WlPreambleType */
    char *    wlAfterBurnerEn;	/**< WlAfterBurnerEn */
    char *    wlFrameBurst;	/**< WlFrameBurst */
    SINT32    wlChannel;	/**< WlChannel */
    SINT32    wlCurrentChannel;	/**< WlCurrentChannel */
    SINT32    wlFrgThrshld;	/**< WlFrgThrshld */
    SINT32    wlRtsThrshld;	/**< WlRtsThrshld */
    SINT32    wlDtmIntvl;	/**< WlDtmIntvl */
    SINT32    wlBcnIntvl;	/**< WlBcnIntvl */
    SINT32    wlRate;	/**< WlRate */
    SINT32    wlgMode;	/**< WlgMode */
    SINT32    wlBand;	/**< WlBand */
    SINT32    wlMCastRate;	/**< WlMCastRate */
    SINT32    wlInfra;	/**< WlInfra */
    SINT32    wlAntDiv;	/**< WlAntDiv */
    SINT32    wlWme;	/**< WlWme */
    SINT32    wlWmeNoAck;	/**< WlWmeNoAck */
    SINT32    wlWmeApsd;	/**< WlWmeApsd */
    SINT32    wlTxPwrPcnt;	/**< WlTxPwrPcnt */
    SINT32    wlRegMode;	/**< WlRegMode */
    SINT32    wlDfsPreIsm;	/**< WlDfsPreIsm */
    SINT32    wlDfsPostIsm;	/**< WlDfsPostIsm */
    SINT32    wlTpcDb;	/**< WlTpcDb */
    SINT32    wlCsScanTimer;	/**< WlCsScanTimer */
    SINT32    wlGlobalMaxAssoc;	/**< WlGlobalMaxAssoc */
    SINT32    wlMBands;	/**< WlMBands */
    char *    wlVer;	/**< WlVer */
    SINT32    wlNumBss;	/**< WlNumBss */
    SINT32    wlMaxMbss;	/**< WlMaxMbss */
    UBOOL8    wlMbssSupported;	/**< WlMbssSupported */
    SINT32    wlLazyWds;	/**< WlLazyWds */
    SINT32    wlAburnSupported;	/**< WlAburnSupported */
    SINT32    wlAmpduSupported;	/**< WlAmpduSupported */
    SINT32    wlAmsduSupported;	/**< WlAmsduSupported */
    SINT32    wlWmeSupported;	/**< WlWmeSupported */
    SINT32    wlWmfSupported;	/**< WlWmfSupported */
    SINT32    wlVecSupported;	/**< WlVecSupported */
    SINT32    wlVec;	/**< WlVec */
    SINT32    wlIperf;	/**< WlIperf */
    SINT32    wlRifsAdvert;	/**< WlRifsAdvert */
    SINT32    wlChanImEnab;	/**< WlChanImEnab */
    SINT32    wlObssCoex;	/**< WlObssCoex */
    SINT32    wlRxChainPwrSaveEnable;	/**< WlRxChainPwrSaveEnable */
    SINT32    wlRxChainPwrSaveQuietTime;	/**< WlRxChainPwrSaveQuietTime */
    SINT32    wlRxChainPwrSavePps;	/**< WlRxChainPwrSavePps */
    SINT32    wlRadioPwrSaveEnable;	/**< WlRadioPwrSaveEnable */
    SINT32    wlRadioPwrSaveQuietTime;	/**< WlRadioPwrSaveQuietTime */
    SINT32    wlRadioPwrSavePps;	/**< WlRadioPwrSavePps */
    SINT32    wlRadioPwrSaveLevel;	/**< WlRadioPwrSaveLevel */
    SINT32    wlTXBFCapable;	/**< WlTXBFCapable */
    SINT32    wlEnableBFR;	/**< WlEnableBFR */
    SINT32    wlEnableBFE;	/**< WlEnableBFE */
    SINT32    bsdRole;	/**< BsdRole */
    SINT32    bsdHport;	/**< BsdHport */
    SINT32    bsdPport;	/**< BsdPport */
    char *    bsdHelper;	/**< BsdHelper */
    char *    bsdPrimary;	/**< BsdPrimary */
    SINT32    ssdEnable;	/**< SsdEnable */
    SINT32    wlTafEnable;	/**< WlTafEnable */
    SINT32    wlAtf;	/**< WlAtf */
    SINT32    wlPspretendThreshold;	/**< WlPspretendThreshold */
    SINT32    wlPspretendRetryLimit;	/**< WlPspretendRetryLimit */
    SINT32    wlAcsFcsMode;	/**< WlAcsFcsMode */
    SINT32    wlAcsDfs;	/**< WlAcsDfs */
    SINT32    wlAcsCsScanTimer;	/**< WlAcsCsScanTimer */
    SINT32    wlAcsCiScanTimer;	/**< WlAcsCiScanTimer */
    SINT32    wlAcsCiScanTimeout;	/**< WlAcsCiScanTimeout */
    SINT32    wlAcsScanEntryExpire;	/**< WlAcsScanEntryExpire */
    SINT32    wlAcsTxIdleCnt;	/**< WlAcsTxIdleCnt */
    SINT32    wlAcsChanDwellTime;	/**< WlAcsChanDwellTime */
    SINT32    wlAcsChanFlopPeriod;	/**< WlAcsChanFlopPeriod */
    SINT32    wlIntferPeriod;	/**< WlIntferPeriod */
    SINT32    wlIntferCnt;	/**< WlIntferCnt */
    SINT32    wlIntferTxfail;	/**< WlIntferTxfail */
    SINT32    wlIntferTcptxfail;	/**< WlIntferTcptxfail */
    char *    wlAcsDfsrImmediate;	/**< WlAcsDfsrImmediate */
    char *    wlAcsDfsrDeferred;	/**< WlAcsDfsrDeferred */
    char *    wlAcsDfsrActivity;	/**< WlAcsDfsrActivity */
    UBOOL8    wlTxPriority;	/**< WlTxPriority */
    UBOOL8    wlRxPriority;	/**< WlRxPriority */
    UBOOL8    wlCalPriority;	/**< WlCalPriority */
    SINT32    wlWdsSec;	/**< WlWdsSec */
    char *    wlWdsKey;	/**< WlWdsKey */
    SINT32    wlWdsSecEnable;	/**< WlWdsSecEnable */
    SINT32    wlEnableUre;	/**< WlEnableUre */
    SINT32    wlStaRetryTime;	/**< WlStaRetryTime */
} WlBaseCfgObject;

/*! \brief _WlBaseCfgObject is used internally to represent WlBaseCfgObject */
typedef WlBaseCfgObject _WlBaseCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlStaticWdsCfg.{i}.
 *
 * MDMOID_WL_STATIC_WDS_CFG 51
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
} WlStaticWdsCfgObject;

/*! \brief _WlStaticWdsCfgObject is used internally to represent WlStaticWdsCfgObject */
typedef WlStaticWdsCfgObject _WlStaticWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlWdsCfg.{i}.
 *
 * MDMOID_WL_WDS_CFG 52
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlWdsCfgObject;

/*! \brief _WlWdsCfgObject is used internally to represent WlWdsCfgObject */
typedef WlWdsCfgObject _WlWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlScanWdsCfg.{i}.
 *
 * MDMOID_WL_SCAN_WDS_CFG 53
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlScanWdsCfgObject;

/*! \brief _WlScanWdsCfgObject is used internally to represent WlScanWdsCfgObject */
typedef WlScanWdsCfgObject _WlScanWdsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlMimoCfg.
 *
 * MDMOID_WL_MIMO_CFG 54
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlNBwCap;	/**< WlNBwCap */
    SINT32    wlNCtrlsb;	/**< WlNCtrlsb */
    SINT32    wlNBand;	/**< WlNBand */
    SINT32    wlNMcsidx;	/**< WlNMcsidx */
    char *    wlNProtection;	/**< WlNProtection */
    char *    wlRifs;	/**< WlRifs */
    char *    wlAmpdu;	/**< WlAmpdu */
    char *    wlAmsdu;	/**< WlAmsdu */
    char *    wlNmode;	/**< WlNmode */
    SINT32    wlNReqd;	/**< WlNReqd */
    SINT32    wlStbcTx;	/**< WlStbcTx */
    SINT32    wlStbcRx;	/**< WlStbcRx */
} WlMimoCfgObject;

/*! \brief _WlMimoCfgObject is used internally to represent WlMimoCfgObject */
typedef WlMimoCfgObject _WlMimoCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlSesCfg.
 *
 * MDMOID_WL_SES_CFG 55
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlSesEnable;	/**< WlSesEnable */
    SINT32    wlSesEvent;	/**< WlSesEvent */
    char *    wlSesStates;	/**< WlSesStates */
    char *    wlSesSsid;	/**< WlSesSsid */
    char *    wlSesWpaPsk;	/**< WlSesWpaPsk */
    SINT32    wlSesHide;	/**< WlSesHide */
    SINT32    wlSesAuth;	/**< WlSesAuth */
    char *    wlSesAuthMode;	/**< WlSesAuthMode */
    char *    wlSesWep;	/**< WlSesWep */
    char *    wlSesWpa;	/**< WlSesWpa */
    SINT32    wlSesWdsMode;	/**< WlSesWdsMode */
    SINT32    wlSesClEnable;	/**< WlSesClEnable */
    SINT32    wlSesClEvent;	/**< WlSesClEvent */
    char *    wlSesWdsWsec;	/**< WlSesWdsWsec */
} WlSesCfgObject;

/*! \brief _WlSesCfgObject is used internally to represent WlSesCfgObject */
typedef WlSesCfgObject _WlSesCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlVirtIntfCfg.{i}.
 *
 * MDMOID_WL_VIRT_INTF_CFG 56
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    wlIdx;	/**< WlIdx */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
    char *    wlBrName;	/**< WlBrName */
    char *    wlBssMacAddr;	/**< WlBssMacAddr */
    char *    wlWpaPsk;	/**< WlWpaPsk */
    char *    wlWep;	/**< WlWep */
    char *    wlWpa;	/**< WlWpa */
    char *    wlAuthMode;	/**< WlAuthMode */
    SINT32    wlWpaGTKRekey;	/**< WlWpaGTKRekey */
    char *    wlRadiusKey;	/**< WlRadiusKey */
    char *    wlRadiusServerIP;	/**< WlRadiusServerIP */
    SINT32    wlRadiusPort;	/**< WlRadiusPort */
    char *    wlWapiCertificate;	/**< WlWapiCertificate */
    SINT32    wlAuth;	/**< WlAuth */
    SINT32    wlEnblSsid;	/**< WlEnblSsid */
    char *    status;	/**< Status */
    SINT32    wlKeyIndex128;	/**< WlKeyIndex128 */
    SINT32    wlKeyIndex64;	/**< WlKeyIndex64 */
    SINT32    wlKeyBit;	/**< WlKeyBit */
    SINT32    wlPreauth;	/**< WlPreauth */
    SINT32    wlNetReauth;	/**< WlNetReauth */
    SINT32    wlMFP;	/**< WlMFP */
    SINT32    wlSsdType;	/**< WlSsdType */
    SINT32    wlHide;	/**< WlHide */
    SINT32    wlAPIsolation;	/**< WlAPIsolation */
    SINT32    wlMaxAssoc;	/**< WlMaxAssoc */
    SINT32    wlDisableWme;	/**< WlDisableWme */
    char *    wlFltMacMode;	/**< WlFltMacMode */
    SINT32    wlEnableWmf;	/**< WlEnableWmf */
    SINT32    wlEnableHspot;	/**< WlEnableHspot */
    char *    wlOperMode;	/**< WlOperMode */
} WlVirtIntfCfgObject;

/*! \brief _WlVirtIntfCfgObject is used internally to represent WlVirtIntfCfgObject */
typedef WlVirtIntfCfgObject _WlVirtIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlVirtIntfCfg.{i}.WlMacFltCfg.{i}.
 *
 * MDMOID_WL_MAC_FLT 57
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlMacAddr;	/**< WlMacAddr */
    char *    wlSsid;	/**< WlSsid */
    char *    wlIfcname;	/**< WlIfcname */
} WlMacFltObject;

/*! \brief _WlMacFltObject is used internally to represent WlMacFltObject */
typedef WlMacFltObject _WlMacFltObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlVirtIntfCfg.{i}.WlKey64Cfg.{i}.
 *
 * MDMOID_WL_KEY64_CFG 58
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlKey64;	/**< WlKey64 */
} WlKey64CfgObject;

/*! \brief _WlKey64CfgObject is used internally to represent WlKey64CfgObject */
typedef WlKey64CfgObject _WlKey64CfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlVirtIntfCfg.{i}.WlKey128Cfg.{i}.
 *
 * MDMOID_WL_KEY128_CFG 59
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlKey128;	/**< WlKey128 */
} WlKey128CfgObject;

/*! \brief _WlKey128CfgObject is used internally to represent WlKey128CfgObject */
typedef WlKey128CfgObject _WlKey128CfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WlanAdapter.WlVirtIntfCfg.{i}.WlWpsCfg.
 *
 * MDMOID_WL_WPS_CFG 60
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wsc_config_state;	/**< Wsc_config_state */
    char *    wsc_mode;	/**< Wsc_mode */
} WlWpsCfgObject;

/*! \brief _WlWpsCfgObject is used internally to represent WlWpsCfgObject */
typedef WlWpsCfgObject _WlWpsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.WLANConfiguration.{i}.X_BROADCOM_COM_WLANVirtMbssConfiguration.{i}.
 *
 * MDMOID_LAN_WLAN_VIRT_MBSS 61
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    mbssGuestSSID;	/**< MbssGuestSSID */
    char *    mbssGuestBSSID;	/**< MbssGuestBSSID */
    UBOOL8    mbssGuestEnable;	/**< MbssGuestEnable */
    UBOOL8    mbssGuestHiden;	/**< MbssGuestHiden */
    UBOOL8    mbssGuestIsolateClients;	/**< MbssGuestIsolateClients */
    UBOOL8    mbssGuestDisableWMMAdvertise;	/**< MbssGuestDisableWMMAdvertise */
    SINT32    mbssGuestMaxClients;	/**< MbssGuestMaxClients */
} LanWlanVirtMbssObject;

/*! \brief _LanWlanVirtMbssObject is used internally to represent LanWlanVirtMbssObject */
typedef LanWlanVirtMbssObject _LanWlanVirtMbssObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_LANMocaInterfaceConfig.{i}.
 *
 * MDMOID_LAN_MOCA_INTF 62
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    ifName;	/**< IfName */
    char *    connectionMode;	/**< ConnectionMode */
    UINT32    loopbackConfiguration;	/**< LoopbackConfiguration */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    char *    mocaControl;	/**< MocaControl */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UBOOL8    pppoeFilter;	/**< PppoeFilter */
    UINT32    networkStatus;	/**< NetworkStatus */
    char *    password;	/**< Password */
    UBOOL8    privacy;	/**< Privacy */
    UINT32    minBandwidthAlarmThreshold;	/**< MinBandwidthAlarmThreshold */
    UINT32    frequencyMask;	/**< FrequencyMask */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    lastOperationalFrequency;	/**< LastOperationalFrequency */
    UINT32    ncMode;	/**< NcMode */
    UBOOL8    autoNwSearch;	/**< AutoNwSearch */
    UBOOL8    txPwrControl;	/**< TxPwrControl */
    UINT32    continuousPowerMode;	/**< ContinuousPowerMode */
    UINT32    mcastMode;	/**< McastMode */
    UBOOL8    labMode;	/**< LabMode */
    UBOOL8    eclQTagMode;	/**< EclQTagMode */
    UINT32    maxTransmitTime;	/**< MaxTransmitTime */
    SINT32    maxTransmitPower;	/**< MaxTransmitPower */
    SINT32    snrMargin;	/**< SnrMargin */
    UINT32    outOfOrderLmo;	/**< OutOfOrderLmo */
    UBOOL8    lmoReportEnable;	/**< LmoReportEnable */
    UINT32    tabooMaskStart;	/**< TabooMaskStart */
    UINT32    tabooChannelMask;	/**< TabooChannelMask */
    UBOOL8    continuousIerrInsert;	/**< ContinuousIerrInsert */
    UBOOL8    continuousIeMapInsert;	/**< ContinuousIeMapInsert */
    UINT32    maxPktAggr;	/**< MaxPktAggr */
    UINT32    maxConstellationNode;	/**< MaxConstellationNode */
    UINT32    maxConstellation;	/**< MaxConstellation */
    UBOOL8    preferedNetworkController;	/**< PreferedNetworkController */
    UINT32    pmkExchangeInterval;	/**< PmkExchangeInterval */
    UINT32    tekExchangeInterval;	/**< TekExchangeInterval */
    UINT32    traceLevel;	/**< TraceLevel */
    UBOOL8    traceLevelRestoreDefault;	/**< TraceLevelRestoreDefault */
    UINT32    mrNonDefSeqNumber;	/**< MrNonDefSeqNumber */
    char *    initParmsString;	/**< InitParmsString */
    char *    configParmsString;	/**< ConfigParmsString */
    char *    traceParmsString;	/**< TraceParmsString */
    UBOOL8    limitedConnections;	/**< LimitedConnections */
#ifdef DMP_X_BROADCOM_COM_AUTODETECTION_1
    UINT32    maxConnections;	/**< MaxConnections */
#endif
} LanMocaIntfObject;

/*! \brief _LanMocaIntfObject is used internally to represent LanMocaIntfObject */
typedef LanMocaIntfObject _LanMocaIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_LANMocaInterfaceConfig.{i}.Status.
 *
 * MDMOID_LAN_MOCA_INTF_STATUS 63
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    vendorId;	/**< VendorId */
    UINT32    hwVersion;	/**< HwVersion */
    UINT32    softwareVersion;	/**< SoftwareVersion */
    UINT32    driverMajorVersion;	/**< DriverMajorVersion */
    UINT32    driverMinorVersion;	/**< DriverMinorVersion */
    UINT32    driverBuildVersion;	/**< DriverBuildVersion */
    UINT32    selfMoCAVersion;	/**< SelfMoCAVersion */
    UINT32    networkVersionNumber;	/**< NetworkVersionNumber */
    UINT32    qam256Support;	/**< Qam256Support */
    UINT32    operationalStatus;	/**< OperationalStatus */
    UINT32    linkStatus;	/**< LinkStatus */
    UINT32    connectedNodes;	/**< ConnectedNodes */
    UINT32    nodeId;	/**< NodeId */
    UINT32    networkControllerNodeId;	/**< NetworkControllerNodeId */
    UINT32    upTime;	/**< UpTime */
    UINT32    linkUpTime;	/**< LinkUpTime */
    UINT32    backupNetworkControllerNodeId;	/**< BackupNetworkControllerNodeId */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    bwStatus;	/**< BwStatus */
} LanMocaIntfStatusObject;

/*! \brief _LanMocaIntfStatusObject is used internally to represent LanMocaIntfStatusObject */
typedef LanMocaIntfStatusObject _LanMocaIntfStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_LANMocaInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_MOCA_INTF_STATS 64
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    inUcPkts;	/**< InUcPkts */
    UINT32    inDiscardPktsEcl;	/**< InDiscardPktsEcl */
    UINT32    inDiscardPktsMac;	/**< InDiscardPktsMac */
    UINT32    inUnKnownPkts;	/**< InUnKnownPkts */
    UINT32    inMcPkts;	/**< InMcPkts */
    UINT32    inBcPkts;	/**< InBcPkts */
    UINT32    inOctetsLow;	/**< InOctetsLow */
    UINT32    outUcPkts;	/**< OutUcPkts */
    UINT32    outDiscardPkts;	/**< OutDiscardPkts */
    UINT32    outBcPkts;	/**< OutBcPkts */
    UINT32    outOctetsLow;	/**< OutOctetsLow */
    UINT32    networkControllerHandOffs;	/**< NetworkControllerHandOffs */
    UINT32    networkControllerBackups;	/**< NetworkControllerBackups */
} LanMocaIntfStatsObject;

/*! \brief _LanMocaIntfStatsObject is used internally to represent LanMocaIntfStatsObject */
typedef LanMocaIntfStatsObject _LanMocaIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_LANEponInterfaceConfig.{i}.
 *
 * MDMOID_LAN_EPON_INTF 65
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    ifName;	/**< IfName */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressControlEnabled;	/**< MACAddressControlEnabled */
} LanEponIntfObject;

/*! \brief _LanEponIntfObject is used internally to represent LanEponIntfObject */
typedef LanEponIntfObject _LanEponIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.X_BROADCOM_COM_LANEponInterfaceConfig.{i}.Stats.
 *
 * MDMOID_LAN_EPON_INTF_STATS 66
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    txErrors;	/**< TxErrors */
    UINT32    rxErrors;	/**< RxErrors */
    UINT32    txDrops;	/**< TxDrops */
    UINT32    rxDrops;	/**< RxDrops */
    UINT32    X_BROADCOM_COM_MulticastPacketsSent;	/**< X_BROADCOM_COM_MulticastPacketsSent */
    UINT32    X_BROADCOM_COM_MulticastPacketsReceived;	/**< X_BROADCOM_COM_MulticastPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT32    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT32    X_BROADCOM_COM_UnicastPacketsSent;	/**< X_BROADCOM_COM_UnicastPacketsSent */
    UINT32    X_BROADCOM_COM_UnicastPacketsReceived;	/**< X_BROADCOM_COM_UnicastPacketsReceived */
    UINT32    X_BROADCOM_COM_BroadcastPacketsSent;	/**< X_BROADCOM_COM_BroadcastPacketsSent */
    UINT32    X_BROADCOM_COM_BroadcastPacketsReceived;	/**< X_BROADCOM_COM_BroadcastPacketsReceived */
} LanEponIntfStatsObject;

/*! \brief _LanEponIntfStatsObject is used internally to represent LanEponIntfStatsObject */
typedef LanEponIntfStatsObject _LanEponIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.Hosts.
 *
 * MDMOID_LAN_HOSTS 67
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    hostNumberOfEntries;	/**< HostNumberOfEntries */
} LanHostsObject;

/*! \brief _LanHostsObject is used internally to represent LanHostsObject */
typedef LanHostsObject _LanHostsObject;



/*! \brief Obj struct for InternetGatewayDevice.LANDevice.{i}.Hosts.Host.{i}.
 *
 * MDMOID_LAN_HOST_ENTRY 68
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
    char *    addressSource;	/**< AddressSource */
    SINT32    leaseTimeRemaining;	/**< LeaseTimeRemaining */
    char *    MACAddress;	/**< MACAddress */
    char *    hostName;	/**< HostName */
    char *    interfaceType;	/**< InterfaceType */
    UBOOL8    active;	/**< Active */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
} LanHostEntryObject;

/*! \brief _LanHostEntryObject is used internally to represent LanHostEntryObject */
typedef LanHostEntryObject _LanHostEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.
 *
 * MDMOID_WAN_DEV 69
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    WANConnectionNumberOfEntries;	/**< WANConnectionNumberOfEntries */
} WanDevObject;

/*! \brief _WanDevObject is used internally to represent WanDevObject */
typedef WanDevObject _WanDevObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANCommonInterfaceConfig.
 *
 * MDMOID_WAN_COMMON_INTF_CFG 70
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    WANAccessType;	/**< WANAccessType */
    UINT32    layer1UpstreamMaxBitRate;	/**< Layer1UpstreamMaxBitRate */
    UINT32    layer1DownstreamMaxBitRate;	/**< Layer1DownstreamMaxBitRate */
    char *    physicalLinkStatus;	/**< PhysicalLinkStatus */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
    UINT32    totalPacketsSent;	/**< TotalPacketsSent */
    UINT32    totalPacketsReceived;	/**< TotalPacketsReceived */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    maximumActiveConnections;	/**< MaximumActiveConnections */
    UINT32    numberOfActiveConnections;	/**< NumberOfActiveConnections */
} WanCommonIntfCfgObject;

/*! \brief _WanCommonIntfCfgObject is used internally to represent WanCommonIntfCfgObject */
typedef WanCommonIntfCfgObject _WanCommonIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_XTM_Interface_Stats.{i}.
 *
 * MDMOID_XTM_INTERFACE_STATS 72
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    port;	/**< Port */
    char *    status;	/**< Status */
    UINT32    inOctets;	/**< InOctets */
    UINT32    outOctets;	/**< OutOctets */
    UINT32    inPackets;	/**< InPackets */
    UINT32    outPackets;	/**< OutPackets */
    UINT32    inOAMCells;	/**< InOAMCells */
    UINT32    outOAMCells;	/**< OutOAMCells */
    UINT32    inASMCells;	/**< InASMCells */
    UINT32    outASMCells;	/**< OutASMCells */
    UINT32    inPacketErrors;	/**< InPacketErrors */
    UINT32    inCellErrors;	/**< InCellErrors */
} XtmInterfaceStatsObject;

/*! \brief _XtmInterfaceStatsObject is used internally to represent XtmInterfaceStatsObject */
typedef XtmInterfaceStatsObject _XtmInterfaceStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.
 *
 * MDMOID_WAN_DSL_INTF_CFG 77
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    UBOOL8    errorSamplesAvailable;	/**< ErrorSamplesAvailable */
    char *    linkEncapsulationUsed;	/**< LinkEncapsulationUsed */
    char *    linkEncapsulationSupported;	/**< LinkEncapsulationSupported */
    char *    linkEncapsulationRequested;	/**< LinkEncapsulationRequested */
    char *    modulationType;	/**< ModulationType */
    char *    lineEncoding;	/**< LineEncoding */
    char *    dataPath;	/**< DataPath */
    UINT32    interleaveDepth;	/**< InterleaveDepth */
    SINT32    lineNumber;	/**< LineNumber */
    UINT32    upstreamCurrRate;	/**< UpstreamCurrRate */
    UINT32    downstreamCurrRate;	/**< DownstreamCurrRate */
    UINT32    X_BROADCOM_COM_UpstreamCurrRate_2;	/**< X_BROADCOM_COM_UpstreamCurrRate_2 */
    UINT32    X_BROADCOM_COM_DownstreamCurrRate_2;	/**< X_BROADCOM_COM_DownstreamCurrRate_2 */
    UINT32    upstreamMaxRate;	/**< UpstreamMaxRate */
    UINT32    downstreamMaxRate;	/**< DownstreamMaxRate */
    SINT32    upstreamNoiseMargin;	/**< UpstreamNoiseMargin */
    SINT32    downstreamNoiseMargin;	/**< DownstreamNoiseMargin */
    SINT32    upstreamAttenuation;	/**< UpstreamAttenuation */
    SINT32    downstreamAttenuation;	/**< DownstreamAttenuation */
    SINT32    upstreamPower;	/**< UpstreamPower */
    SINT32    downstreamPower;	/**< DownstreamPower */
    char *    ATURVendor;	/**< ATURVendor */
    UINT32    ATURCountry;	/**< ATURCountry */
    UINT32    ATURANSIStd;	/**< ATURANSIStd */
    UINT32    ATURANSIRev;	/**< ATURANSIRev */
    char *    ATUCVendor;	/**< ATUCVendor */
    UINT32    ATUCCountry;	/**< ATUCCountry */
    UINT32    ATUCANSIStd;	/**< ATUCANSIStd */
    UINT32    ATUCANSIRev;	/**< ATUCANSIRev */
    UINT32    totalStart;	/**< TotalStart */
    UINT32    showtimeStart;	/**< ShowtimeStart */
    UINT32    lastShowtimeStart;	/**< LastShowtimeStart */
    UINT32    currentDayStart;	/**< CurrentDayStart */
    UINT32    quarterHourStart;	/**< QuarterHourStart */
    char *    standardsSupported;	/**< StandardsSupported */
    char *    standardUsed;	/**< StandardUsed */
#ifdef DMP_VDSL2WAN_1
    char *    allowedProfiles;	/**< AllowedProfiles */
#endif
#ifdef DMP_VDSL2WAN_1
    char *    currentProfile;	/**< CurrentProfile */
#endif
#ifdef DMP_VDSL2WAN_1
    UINT32    UPBOKLE;	/**< UPBOKLE */
#endif
    SINT32    TRELLISds;	/**< TRELLISds */
    SINT32    TRELLISus;	/**< TRELLISus */
    UINT32    ACTSNRMODEds;	/**< ACTSNRMODEds */
    SINT32    ACTSNRMODEus;	/**< ACTSNRMODEus */
    UINT32    ACTUALCE;	/**< ACTUALCE */
    char *    SNRMpbds;	/**< SNRMpbds */
    char *    SNRMpbus;	/**< SNRMpbus */
    char *    X_BROADCOM_COM_AdslVersion;	/**< X_BROADCOM_COM_AdslVersion */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_AdslModulationCfg;	/**< X_BROADCOM_COM_AdslModulationCfg */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_ADSL2_AnnexM;	/**< X_BROADCOM_COM_ADSL2_AnnexM */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_PhoneLinePair;	/**< X_BROADCOM_COM_PhoneLinePair */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_Bitswap;	/**< X_BROADCOM_COM_Bitswap */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_SRA;	/**< X_BROADCOM_COM_SRA */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_TrellisD;	/**< X_BROADCOM_COM_TrellisD */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_TrellisU;	/**< X_BROADCOM_COM_TrellisU */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_SNR;	/**< X_BROADCOM_COM_SNR */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_Bitmap;	/**< X_BROADCOM_COM_Bitmap */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_QueueSize;	/**< X_BROADCOM_COM_QueueSize */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_NumTxQueues;	/**< X_BROADCOM_COM_NumTxQueues */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_UpstreamS;	/**< X_BROADCOM_COM_UpstreamS */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_DownstreamS;	/**< X_BROADCOM_COM_DownstreamS */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamR;	/**< X_BROADCOM_COM_UpstreamR */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamR;	/**< X_BROADCOM_COM_DownstreamR */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamK;	/**< X_BROADCOM_COM_UpstreamK */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamK;	/**< X_BROADCOM_COM_DownstreamK */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_UpstreamDelay;	/**< X_BROADCOM_COM_UpstreamDelay */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_UpstreamDelay_2;	/**< X_BROADCOM_COM_UpstreamDelay_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_DownstreamDelay;	/**< X_BROADCOM_COM_DownstreamDelay */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_DownstreamDelay_2;	/**< X_BROADCOM_COM_DownstreamDelay_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_DownstreamINP;	/**< X_BROADCOM_COM_DownstreamINP */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_DownstreamINP_2;	/**< X_BROADCOM_COM_DownstreamINP_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_UpstreamINP;	/**< X_BROADCOM_COM_UpstreamINP */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_UpstreamINP_2;	/**< X_BROADCOM_COM_UpstreamINP_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamD;	/**< X_BROADCOM_COM_UpstreamD */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamD_2;	/**< X_BROADCOM_COM_UpstreamD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamD;	/**< X_BROADCOM_COM_DownstreamD */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamD_2;	/**< X_BROADCOM_COM_DownstreamD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamMSGc;	/**< X_BROADCOM_COM_ADSL2_UpstreamMSGc */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamMSGc_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamMSGc_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamMSGc;	/**< X_BROADCOM_COM_ADSL2_DownstreamMSGc */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamMSGc_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamMSGc_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamB;	/**< X_BROADCOM_COM_ADSL2_UpstreamB */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamB_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamB_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamB;	/**< X_BROADCOM_COM_ADSL2_DownstreamB */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamB_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamB_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamM;	/**< X_BROADCOM_COM_ADSL2_UpstreamM */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamM_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamM_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamM;	/**< X_BROADCOM_COM_ADSL2_DownstreamM */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamM_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamM_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamT;	/**< X_BROADCOM_COM_ADSL2_UpstreamT */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamT_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamT_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamT;	/**< X_BROADCOM_COM_ADSL2_DownstreamT */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamT_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamT_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamR;	/**< X_BROADCOM_COM_ADSL2_UpstreamR */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamR_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamR_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamR;	/**< X_BROADCOM_COM_ADSL2_DownstreamR */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamR_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamR_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_ADSL2_UpstreamS;	/**< X_BROADCOM_COM_ADSL2_UpstreamS */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_ADSL2_UpstreamS_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamS_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_ADSL2_DownstreamS;	/**< X_BROADCOM_COM_ADSL2_DownstreamS */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_ADSL2_DownstreamS_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamS_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamL;	/**< X_BROADCOM_COM_ADSL2_UpstreamL */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamL_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamL_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamL;	/**< X_BROADCOM_COM_ADSL2_DownstreamL */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamL_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamL_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8a;	/**< X_BROADCOM_COM_VDSL_8a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8b;	/**< X_BROADCOM_COM_VDSL_8b */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8c;	/**< X_BROADCOM_COM_VDSL_8c */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8d;	/**< X_BROADCOM_COM_VDSL_8d */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_12a;	/**< X_BROADCOM_COM_VDSL_12a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_12b;	/**< X_BROADCOM_COM_VDSL_12b */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_17a;	/**< X_BROADCOM_COM_VDSL_17a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_30a;	/**< X_BROADCOM_COM_VDSL_30a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_BrcmPriv1;	/**< X_BROADCOM_COM_VDSL_BrcmPriv1 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_US0_8a;	/**< X_BROADCOM_COM_VDSL_US0_8a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamI;	/**< X_BROADCOM_COM_VDSL_UpstreamI */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamI_2;	/**< X_BROADCOM_COM_VDSL_UpstreamI_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamI;	/**< X_BROADCOM_COM_VDSL_DownstreamI */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamI_2;	/**< X_BROADCOM_COM_VDSL_DownstreamI_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamN;	/**< X_BROADCOM_COM_VDSL_UpstreamN */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamN_2;	/**< X_BROADCOM_COM_VDSL_UpstreamN_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamN;	/**< X_BROADCOM_COM_VDSL_DownstreamN */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamN_2;	/**< X_BROADCOM_COM_VDSL_DownstreamN_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_LinkPowerState;	/**< X_BROADCOM_COM_LinkPowerState */
#endif
#ifdef DMP_X_BROADCOM_COM_DSLBONDING_1
    UBOOL8    X_BROADCOM_COM_EnableBonding;	/**< X_BROADCOM_COM_EnableBonding */
#endif
    UINT32    X_BROADCOM_COM_BondingLineNumber;	/**< X_BROADCOM_COM_BondingLineNumber */
#ifdef DMP_X_BROADCOM_COM_DSLBONDING_1
    char *    X_BROADCOM_COM_BondingPeerName;	/**< X_BROADCOM_COM_BondingPeerName */
#endif
    UINT32    X_BROADCOM_COM_DslCfgParam;	/**< X_BROADCOM_COM_DslCfgParam */
    SINT32    X_BROADCOM_COM_DslTrainingMarginQ4;	/**< X_BROADCOM_COM_DslTrainingMarginQ4 */
    SINT32    X_BROADCOM_COM_DslShowtimeMarginQ4;	/**< X_BROADCOM_COM_DslShowtimeMarginQ4 */
    SINT32    X_BROADCOM_COM_DslLOMTimeThldSec;	/**< X_BROADCOM_COM_DslLOMTimeThldSec */
    SINT32    X_BROADCOM_COM_DslPwmSyncClockFreq;	/**< X_BROADCOM_COM_DslPwmSyncClockFreq */
    SINT32    X_BROADCOM_COM_DslHsModeSwitchTime;	/**< X_BROADCOM_COM_DslHsModeSwitchTime */
    UINT32    X_BROADCOM_COM_DslParam;	/**< X_BROADCOM_COM_DslParam */
    UINT32    X_BROADCOM_COM_DslPhyCfg1Mask;	/**< X_BROADCOM_COM_DslPhyCfg1Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg1Value;	/**< X_BROADCOM_COM_DslPhyCfg1Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg2Mask;	/**< X_BROADCOM_COM_DslPhyCfg2Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg2Value;	/**< X_BROADCOM_COM_DslPhyCfg2Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg3Mask;	/**< X_BROADCOM_COM_DslPhyCfg3Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg3Value;	/**< X_BROADCOM_COM_DslPhyCfg3Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg4Mask;	/**< X_BROADCOM_COM_DslPhyCfg4Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg4Value;	/**< X_BROADCOM_COM_DslPhyCfg4Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg5Mask;	/**< X_BROADCOM_COM_DslPhyCfg5Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg5Value;	/**< X_BROADCOM_COM_DslPhyCfg5Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg6Mask;	/**< X_BROADCOM_COM_DslPhyCfg6Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg6Value;	/**< X_BROADCOM_COM_DslPhyCfg6Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg7Mask;	/**< X_BROADCOM_COM_DslPhyCfg7Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg7Value;	/**< X_BROADCOM_COM_DslPhyCfg7Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg8Mask;	/**< X_BROADCOM_COM_DslPhyCfg8Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg8Value;	/**< X_BROADCOM_COM_DslPhyCfg8Value */
    UINT32    X_BROADCOM_COM_DslPhyUsDataRateKbps;	/**< X_BROADCOM_COM_DslPhyUsDataRateKbps */
    UINT32    X_BROADCOM_COM_DslPhyDsDataRateKbps;	/**< X_BROADCOM_COM_DslPhyDsDataRateKbps */
    UINT32    X_BROADCOM_COM_DslPhyAggrDataRateKbps;	/**< X_BROADCOM_COM_DslPhyAggrDataRateKbps */
    UINT32    X_BROADCOM_COM_DslPhyMiscCfgParam;	/**< X_BROADCOM_COM_DslPhyMiscCfgParam */
} WanDslIntfCfgObject;

/*! \brief _WanDslIntfCfgObject is used internally to represent WanDslIntfCfgObject */
typedef WanDslIntfCfgObject _WanDslIntfCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.X_BROADCOM_COM_BertTest.
 *
 * MDMOID_WAN_BERT_TEST 78
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    bertTestMode;	/**< BertTestMode */
    UINT32    bertTestDuration;	/**< BertTestDuration */
    char *    bertTestStatus;	/**< BertTestStatus */
    UINT32    totalTime;	/**< TotalTime */
    UINT32    elapsedTime;	/**< ElapsedTime */
    UINT32    bitsTestedCntHigh;	/**< BitsTestedCntHigh */
    UINT32    bitsTestedCntLow;	/**< BitsTestedCntLow */
    UINT32    errBitsCntHigh;	/**< ErrBitsCntHigh */
    UINT32    errBitsCntLow;	/**< ErrBitsCntLow */
} WanBertTestObject;

/*! \brief _WanBertTestObject is used internally to represent WanBertTestObject */
typedef WanBertTestObject _WanBertTestObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.
 *
 * MDMOID_WAN_DSL_INTF_STATS 79
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WanDslIntfStatsObject;

/*! \brief _WanDslIntfStatsObject is used internally to represent WanDslIntfStatsObject */
typedef WanDslIntfStatsObject _WanDslIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Total.
 *
 * MDMOID_WAN_DSL_INTF_STATS_TOTAL 80
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsCorrectable;	/**< X_BROADCOM_COM_RxRsCorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsCorrectable_2;	/**< X_BROADCOM_COM_RxRsCorrectable_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsCorrectable;	/**< X_BROADCOM_COM_TxRsCorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsCorrectable_2;	/**< X_BROADCOM_COM_TxRsCorrectable_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsUncorrectable;	/**< X_BROADCOM_COM_TxRsUncorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsUncorrectable_2;	/**< X_BROADCOM_COM_TxRsUncorrectable_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsUncorrectable;	/**< X_BROADCOM_COM_RxRsUncorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsUncorrectable_2;	/**< X_BROADCOM_COM_RxRsUncorrectable_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsWords;	/**< X_BROADCOM_COM_TxRsWords */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsWords_2;	/**< X_BROADCOM_COM_TxRsWords_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsWords;	/**< X_BROADCOM_COM_RxRsWords */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsWords_2;	/**< X_BROADCOM_COM_RxRsWords_2 */
#endif
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ReceiveBlocks_2;	/**< X_BROADCOM_COM_ReceiveBlocks_2 */
#endif
    UINT32    transmitBlocks;	/**< TransmitBlocks */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TransmitBlocks_2;	/**< X_BROADCOM_COM_TransmitBlocks_2 */
#endif
    UINT32    cellDelin;	/**< CellDelin */
    UINT32    linkRetrain;	/**< LinkRetrain */
    UINT32    initErrors;	/**< InitErrors */
    UINT32    initTimeouts;	/**< InitTimeouts */
    UINT32    lossOfFraming;	/**< LossOfFraming */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    FECErrors;	/**< FECErrors */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_FECErrors_2;	/**< X_BROADCOM_COM_FECErrors_2 */
#endif
    UINT32    ATUCFECErrors;	/**< ATUCFECErrors */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ATUCFECErrors_2;	/**< X_BROADCOM_COM_ATUCFECErrors_2 */
#endif
    UINT32    HECErrors;	/**< HECErrors */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_HECErrors_2;	/**< X_BROADCOM_COM_HECErrors_2 */
#endif
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ATUCHECErrors_2;	/**< X_BROADCOM_COM_ATUCHECErrors_2 */
#endif
    UINT32    CRCErrors;	/**< CRCErrors */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_CRCErrors_2;	/**< X_BROADCOM_COM_CRCErrors_2 */
#endif
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ATUCCRCErrors_2;	/**< X_BROADCOM_COM_ATUCCRCErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamUas;	/**< X_BROADCOM_COM_UpstreamUas */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamUas;	/**< X_BROADCOM_COM_DownstreamUas */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamEs;	/**< X_BROADCOM_COM_UpstreamEs */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamSes;	/**< X_BROADCOM_COM_UpstreamSes */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamBitErrors;	/**< X_BROADCOM_COM_UpstreamBitErrors */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamBitErrors_2;	/**< X_BROADCOM_COM_UpstreamBitErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamBitErrors;	/**< X_BROADCOM_COM_DownstreamBitErrors */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamBitErrors_2;	/**< X_BROADCOM_COM_DownstreamBitErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamDataCells;	/**< X_BROADCOM_COM_UpstreamDataCells */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamDataCells_2;	/**< X_BROADCOM_COM_UpstreamDataCells_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamDataCells;	/**< X_BROADCOM_COM_DownstreamDataCells */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamDataCells_2;	/**< X_BROADCOM_COM_DownstreamDataCells_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamTotalCells;	/**< X_BROADCOM_COM_UpstreamTotalCells */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamTotalCells_2;	/**< X_BROADCOM_COM_UpstreamTotalCells_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamTotalCells;	/**< X_BROADCOM_COM_DownstreamTotalCells */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamTotalCells_2;	/**< X_BROADCOM_COM_DownstreamTotalCells_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamLCD;	/**< X_BROADCOM_COM_UpstreamLCD */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamLCD_2;	/**< X_BROADCOM_COM_UpstreamLCD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamLCD;	/**< X_BROADCOM_COM_DownstreamLCD */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamLCD_2;	/**< X_BROADCOM_COM_DownstreamLCD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamOCD;	/**< X_BROADCOM_COM_UpstreamOCD */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_UpstreamOCD_2;	/**< X_BROADCOM_COM_UpstreamOCD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamOCD;	/**< X_BROADCOM_COM_DownstreamOCD */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_DownstreamOCD_2;	/**< X_BROADCOM_COM_DownstreamOCD_2 */
#endif
} WanDslIntfStatsTotalObject;

/*! \brief _WanDslIntfStatsTotalObject is used internally to represent WanDslIntfStatsTotalObject */
typedef WanDslIntfStatsTotalObject _WanDslIntfStatsTotalObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.Showtime.
 *
 * MDMOID_WAN_DSL_INTF_STATS_SHOWTIME 81
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsUncorrectable;	/**< X_BROADCOM_COM_RxRsUncorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsUncorrectable;	/**< X_BROADCOM_COM_TxRsUncorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsCorrectable;	/**< X_BROADCOM_COM_RxRsCorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsCorrectable;	/**< X_BROADCOM_COM_TxRsCorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_RxRsWords;	/**< X_BROADCOM_COM_RxRsWords */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_TxRsWords;	/**< X_BROADCOM_COM_TxRsWords */
#endif
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
    UINT32    transmitBlocks;	/**< TransmitBlocks */
    UINT32    cellDelin;	/**< CellDelin */
    UINT32    linkRetrain;	/**< LinkRetrain */
    UINT32    initErrors;	/**< InitErrors */
    UINT32    initTimeouts;	/**< InitTimeouts */
    UINT32    lossOfFraming;	/**< LossOfFraming */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    FECErrors;	/**< FECErrors */
    UINT32    ATUCFECErrors;	/**< ATUCFECErrors */
    UINT32    HECErrors;	/**< HECErrors */
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
    UINT32    CRCErrors;	/**< CRCErrors */
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
} WanDslIntfStatsShowtimeObject;

/*! \brief _WanDslIntfStatsShowtimeObject is used internally to represent WanDslIntfStatsShowtimeObject */
typedef WanDslIntfStatsShowtimeObject _WanDslIntfStatsShowtimeObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.CurrentDay.
 *
 * MDMOID_WAN_DSL_INTF_STATS_CURRENT_DAY 83
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
    UINT32    transmitBlocks;	/**< TransmitBlocks */
    UINT32    cellDelin;	/**< CellDelin */
    UINT32    linkRetrain;	/**< LinkRetrain */
    UINT32    initErrors;	/**< InitErrors */
    UINT32    initTimeouts;	/**< InitTimeouts */
    UINT32    lossOfFraming;	/**< LossOfFraming */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    FECErrors;	/**< FECErrors */
    UINT32    ATUCFECErrors;	/**< ATUCFECErrors */
    UINT32    HECErrors;	/**< HECErrors */
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
    UINT32    CRCErrors;	/**< CRCErrors */
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
} WanDslIntfStatsCurrentDayObject;

/*! \brief _WanDslIntfStatsCurrentDayObject is used internally to represent WanDslIntfStatsCurrentDayObject */
typedef WanDslIntfStatsCurrentDayObject _WanDslIntfStatsCurrentDayObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.Stats.QuarterHour.
 *
 * MDMOID_WAN_DSL_INTF_STATS_QUARTER_HOUR 84
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    receiveBlocks;	/**< ReceiveBlocks */
    UINT32    transmitBlocks;	/**< TransmitBlocks */
    UINT32    cellDelin;	/**< CellDelin */
    UINT32    linkRetrain;	/**< LinkRetrain */
    UINT32    initErrors;	/**< InitErrors */
    UINT32    initTimeouts;	/**< InitTimeouts */
    UINT32    lossOfFraming;	/**< LossOfFraming */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    FECErrors;	/**< FECErrors */
    UINT32    ATUCFECErrors;	/**< ATUCFECErrors */
    UINT32    HECErrors;	/**< HECErrors */
    UINT32    ATUCHECErrors;	/**< ATUCHECErrors */
    UINT32    CRCErrors;	/**< CRCErrors */
    UINT32    ATUCCRCErrors;	/**< ATUCCRCErrors */
} WanDslIntfStatsQuarterHourObject;

/*! \brief _WanDslIntfStatsQuarterHourObject is used internally to represent WanDslIntfStatsQuarterHourObject */
typedef WanDslIntfStatsQuarterHourObject _WanDslIntfStatsQuarterHourObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLInterfaceConfig.TestParams.
 *
 * MDMOID_WAN_DSL_TEST_PARAMS 85
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    HLOGGds;	/**< HLOGGds */
    UINT32    HLOGGus;	/**< HLOGGus */
    char *    HLOGpsds;	/**< HLOGpsds */
    char *    HLOGpsus;	/**< HLOGpsus */
    UINT32    HLOGMTds;	/**< HLOGMTds */
    UINT32    HLOGMTus;	/**< HLOGMTus */
    UINT32    QLNGds;	/**< QLNGds */
    UINT32    QLNGus;	/**< QLNGus */
    char *    QLNpsds;	/**< QLNpsds */
    char *    QLNpsus;	/**< QLNpsus */
    UINT32    QLNMTds;	/**< QLNMTds */
    UINT32    QLNMTus;	/**< QLNMTus */
    UINT32    SNRGds;	/**< SNRGds */
    UINT32    SNRGus;	/**< SNRGus */
    char *    SNRpsds;	/**< SNRpsds */
    char *    SNRpsus;	/**< SNRpsus */
    UINT32    SNRMTds;	/**< SNRMTds */
    UINT32    SNRMTus;	/**< SNRMTus */
    char *    LATNds;	/**< LATNds */
    char *    LATNus;	/**< LATNus */
    char *    SATNds;	/**< SATNds */
    char *    SATNus;	/**< SATNus */
} WanDslTestParamsObject;

/*! \brief _WanDslTestParamsObject is used internally to represent WanDslTestParamsObject */
typedef WanDslTestParamsObject _WanDslTestParamsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.
 *
 * MDMOID_WAN_ETH_INTF 86
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    char *    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
#ifdef DMP_QOS_1
    SINT32    shapingRate;	/**< ShapingRate */
#endif
#ifdef DMP_QOS_1
    UINT32    shapingBurstSize;	/**< ShapingBurstSize */
#endif
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    char *    X_BROADCOM_COM_ConnectionMode;	/**< X_BROADCOM_COM_ConnectionMode */
    UBOOL8    X_BROADCOM_COM_PersistentDevice;	/**< X_BROADCOM_COM_PersistentDevice */
    UBOOL8    X_BROADCOM_COM_LimitedConnections;	/**< X_BROADCOM_COM_LimitedConnections */
#ifdef DMP_X_BROADCOM_COM_AUTODETECTION_1
    UINT32    X_BROADCOM_COM_MaxConnections;	/**< X_BROADCOM_COM_MaxConnections */
#endif
    UBOOL8    X_BROADCOM_COM_GMAC_Enabled;	/**< X_BROADCOM_COM_GMAC_Enabled */
    char *    X_BROADCOM_COM_WanLan_Attribute;	/**< X_BROADCOM_COM_WanLan_Attribute */
} WanEthIntfObject;

/*! \brief _WanEthIntfObject is used internally to represent WanEthIntfObject */
typedef WanEthIntfObject _WanEthIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.X_BROADCOM_COM_IPv6Address.{i}.
 *
 * MDMOID_I_PV6_ADDR 87
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    scope;	/**< Scope */
    char *    IPv6Address;	/**< IPv6Address */
} IPv6AddrObject;

/*! \brief _IPv6AddrObject is used internally to represent IPv6AddrObject */
typedef IPv6AddrObject _IPv6AddrObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANEthernetInterfaceConfig.Stats.
 *
 * MDMOID_WAN_ETH_INTF_STATS 88
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    X_BROADCOM_COM_MulticastPacketsSent;	/**< X_BROADCOM_COM_MulticastPacketsSent */
    UINT32    X_BROADCOM_COM_MulticastPacketsReceived;	/**< X_BROADCOM_COM_MulticastPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT32    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT32    X_BROADCOM_COM_UnicastPacketsSent;	/**< X_BROADCOM_COM_UnicastPacketsSent */
    UINT32    X_BROADCOM_COM_UnicastPacketsReceived;	/**< X_BROADCOM_COM_UnicastPacketsReceived */
    UINT32    X_BROADCOM_COM_BroadcastPacketsSent;	/**< X_BROADCOM_COM_BroadcastPacketsSent */
    UINT32    X_BROADCOM_COM_BroadcastPacketsReceived;	/**< X_BROADCOM_COM_BroadcastPacketsReceived */
} WanEthIntfStatsObject;

/*! \brief _WanEthIntfStatsObject is used internally to represent WanEthIntfStatsObject */
typedef WanEthIntfStatsObject _WanEthIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANWifiInterfaceConfig.
 *
 * MDMOID_WAN_WIFI_INTF 89
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    char *    ifName;	/**< IfName */
    char *    connectionMode;	/**< ConnectionMode */
    UBOOL8    persistentDevice;	/**< PersistentDevice */
    UBOOL8    limitedConnections;	/**< LimitedConnections */
#ifdef DMP_X_BROADCOM_COM_AUTODETECTION_1
    UINT32    maxConnections;	/**< MaxConnections */
#endif
} WanWifiIntfObject;

/*! \brief _WanWifiIntfObject is used internally to represent WanWifiIntfObject */
typedef WanWifiIntfObject _WanWifiIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANWifiInterfaceConfig.IPv6Address.{i}.
 *
 * MDMOID_WIFI_I_PV6_ADDR 90
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    scope;	/**< Scope */
    char *    IPv6Address;	/**< IPv6Address */
} WifiIPv6AddrObject;

/*! \brief _WifiIPv6AddrObject is used internally to represent WifiIPv6AddrObject */
typedef WifiIPv6AddrObject _WifiIPv6AddrObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANWifiInterfaceConfig.Stats.
 *
 * MDMOID_WAN_WIFI_INTF_STATS 91
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
} WanWifiIntfStatsObject;

/*! \brief _WanWifiIntfStatsObject is used internally to represent WanWifiIntfStatsObject */
typedef WanWifiIntfStatsObject _WanWifiIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANMocaInterfaceConfig.
 *
 * MDMOID_WAN_MOCA_INTF 92
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    ifName;	/**< IfName */
    char *    connectionMode;	/**< ConnectionMode */
    UINT32    loopbackConfiguration;	/**< LoopbackConfiguration */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    char *    mocaControl;	/**< MocaControl */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UBOOL8    pppoeFilter;	/**< PppoeFilter */
    UINT32    networkStatus;	/**< NetworkStatus */
    char *    password;	/**< Password */
    UBOOL8    privacy;	/**< Privacy */
    UINT32    minBandwidthAlarmThreshold;	/**< MinBandwidthAlarmThreshold */
    UINT32    frequencyMask;	/**< FrequencyMask */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    lastOperationalFrequency;	/**< LastOperationalFrequency */
    UINT32    ncMode;	/**< NcMode */
    UBOOL8    autoNwSearch;	/**< AutoNwSearch */
    UBOOL8    txPwrControl;	/**< TxPwrControl */
    UINT32    continuousPowerMode;	/**< ContinuousPowerMode */
    UINT32    mcastMode;	/**< McastMode */
    UBOOL8    labMode;	/**< LabMode */
    UBOOL8    eclQTagMode;	/**< EclQTagMode */
    UINT32    maxTransmitTime;	/**< MaxTransmitTime */
    SINT32    maxTransmitPower;	/**< MaxTransmitPower */
    SINT32    snrMargin;	/**< SnrMargin */
    UINT32    outOfOrderLmo;	/**< OutOfOrderLmo */
    UBOOL8    lmoReportEnable;	/**< LmoReportEnable */
    UINT32    tabooMaskStart;	/**< TabooMaskStart */
    UINT32    tabooChannelMask;	/**< TabooChannelMask */
    UBOOL8    continuousIerrInsert;	/**< ContinuousIerrInsert */
    UBOOL8    continuousIeMapInsert;	/**< ContinuousIeMapInsert */
    UINT32    maxPktAggr;	/**< MaxPktAggr */
    UINT32    maxConstellationNode;	/**< MaxConstellationNode */
    UINT32    maxConstellation;	/**< MaxConstellation */
    UBOOL8    preferedNetworkController;	/**< PreferedNetworkController */
    UINT32    pmkExchangeInterval;	/**< PmkExchangeInterval */
    UINT32    tekExchangeInterval;	/**< TekExchangeInterval */
    UINT32    traceLevel;	/**< TraceLevel */
    UBOOL8    traceLevelRestoreDefault;	/**< TraceLevelRestoreDefault */
    UINT32    mrNonDefSeqNumber;	/**< MrNonDefSeqNumber */
    char *    initParmsString;	/**< InitParmsString */
    char *    configParmsString;	/**< ConfigParmsString */
    char *    traceParmsString;	/**< TraceParmsString */
    UBOOL8    persistentDevice;	/**< PersistentDevice */
    UBOOL8    limitedConnections;	/**< LimitedConnections */
#ifdef DMP_X_BROADCOM_COM_AUTODETECTION_1
    UINT32    maxConnections;	/**< MaxConnections */
#endif
} WanMocaIntfObject;

/*! \brief _WanMocaIntfObject is used internally to represent WanMocaIntfObject */
typedef WanMocaIntfObject _WanMocaIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANMocaInterfaceConfig.Status.
 *
 * MDMOID_WAN_MOCA_INTF_STATUS 93
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    vendorId;	/**< VendorId */
    UINT32    hwVersion;	/**< HwVersion */
    UINT32    softwareVersion;	/**< SoftwareVersion */
    UINT32    driverMajorVersion;	/**< DriverMajorVersion */
    UINT32    driverMinorVersion;	/**< DriverMinorVersion */
    UINT32    driverBuildVersion;	/**< DriverBuildVersion */
    UINT32    selfMoCAVersion;	/**< SelfMoCAVersion */
    UINT32    networkVersionNumber;	/**< NetworkVersionNumber */
    UINT32    qam256Support;	/**< Qam256Support */
    UINT32    operationalStatus;	/**< OperationalStatus */
    UINT32    linkStatus;	/**< LinkStatus */
    UINT32    connectedNodes;	/**< ConnectedNodes */
    UINT32    nodeId;	/**< NodeId */
    UINT32    networkControllerNodeId;	/**< NetworkControllerNodeId */
    UINT32    upTime;	/**< UpTime */
    UINT32    linkUpTime;	/**< LinkUpTime */
    UINT32    backupNetworkControllerNodeId;	/**< BackupNetworkControllerNodeId */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    bwStatus;	/**< BwStatus */
} WanMocaIntfStatusObject;

/*! \brief _WanMocaIntfStatusObject is used internally to represent WanMocaIntfStatusObject */
typedef WanMocaIntfStatusObject _WanMocaIntfStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANMocaInterfaceConfig.Stats.
 *
 * MDMOID_WAN_MOCA_INTF_STATS 94
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    inUcPkts;	/**< InUcPkts */
    UINT32    inDiscardPktsEcl;	/**< InDiscardPktsEcl */
    UINT32    inDiscardPktsMac;	/**< InDiscardPktsMac */
    UINT32    inUnKnownPkts;	/**< InUnKnownPkts */
    UINT32    inMcPkts;	/**< InMcPkts */
    UINT32    inBcPkts;	/**< InBcPkts */
    UINT32    inOctetsLow;	/**< InOctetsLow */
    UINT32    outUcPkts;	/**< OutUcPkts */
    UINT32    outDiscardPkts;	/**< OutDiscardPkts */
    UINT32    outBcPkts;	/**< OutBcPkts */
    UINT32    outOctetsLow;	/**< OutOctetsLow */
    UINT32    networkControllerHandOffs;	/**< NetworkControllerHandOffs */
    UINT32    networkControllerBackups;	/**< NetworkControllerBackups */
} WanMocaIntfStatsObject;

/*! \brief _WanMocaIntfStatsObject is used internally to represent WanMocaIntfStatsObject */
typedef WanMocaIntfStatsObject _WanMocaIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_EponInterfaceConfig.
 *
 * MDMOID_WAN_EPON_INTF 95
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    MACAddress;	/**< MACAddress */
    char *    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
    char *    ifName;	/**< IfName */
    char *    connectionMode;	/**< ConnectionMode */
    UBOOL8    persistentDevice;	/**< PersistentDevice */
    UBOOL8    limitedConnections;	/**< LimitedConnections */
#ifdef DMP_X_BROADCOM_COM_AUTODETECTION_1
    UINT32    maxConnections;	/**< MaxConnections */
#endif
} WanEponIntfObject;

/*! \brief _WanEponIntfObject is used internally to represent WanEponIntfObject */
typedef WanEponIntfObject _WanEponIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_EponInterfaceConfig.Stats.
 *
 * MDMOID_WAN_EPON_INTF_STATS 96
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
} WanEponIntfStatsObject;

/*! \brief _WanEponIntfStatsObject is used internally to represent WanEponIntfStatsObject */
typedef WanEponIntfStatsObject _WanEponIntfStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_L2tpAcIntfConfig.
 *
 * MDMOID_L2TP_AC_INTF_CONFIG 97
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    tunnelName;	/**< TunnelName */
    char *    lnsIpAddress;	/**< LnsIpAddress */
    char *    intfStatus;	/**< IntfStatus */
    UINT32    tunnelId;	/**< TunnelId */
} L2tpAcIntfConfigObject;

/*! \brief _L2tpAcIntfConfigObject is used internally to represent L2tpAcIntfConfigObject */
typedef L2tpAcIntfConfigObject _L2tpAcIntfConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANPonInterfaceConfig.
 *
 * MDMOID_WAN_PON_INTF 98
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    ponType;	/**< PonType */
} WanPonIntfObject;

/*! \brief _WanPonIntfObject is used internally to represent WanPonIntfObject */
typedef WanPonIntfObject _WanPonIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANPonInterfaceConfig.Stats.
 *
 * MDMOID_WAN_PON_INTF_STATUS 99
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    byteReceived;	/**< ByteReceived */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
} WanPonIntfStatusObject;

/*! \brief _WanPonIntfStatusObject is used internally to represent WanPonIntfStatusObject */
typedef WanPonIntfStatusObject _WanPonIntfStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANDSLDiagnostics.
 *
 * MDMOID_WAN_DSL_DIAG 102
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    loopDiagnosticsState;	/**< LoopDiagnosticsState */
    SINT32    ACTPSDds;	/**< ACTPSDds */
    SINT32    ACTPSDus;	/**< ACTPSDus */
    SINT32    ACTATPds;	/**< ACTATPds */
    SINT32    ACTATPus;	/**< ACTATPus */
    SINT32    HLINSCds;	/**< HLINSCds */
    char *    HLINpsds;	/**< HLINpsds */
    char *    QLNpsds;	/**< QLNpsds */
    char *    SNRpsds;	/**< SNRpsds */
    char *    BITSpsds;	/**< BITSpsds */
    char *    GAINSpsds;	/**< GAINSpsds */
    SINT32    HLINSCus;	/**< HLINSCus */
    SINT32    HLINGds;	/**< HLINGds */
    UINT32    HLINGus;	/**< HLINGus */
    char *    HLINpsus;	/**< HLINpsus */
    UINT32    HLOGGds;	/**< HLOGGds */
    UINT32    HLOGGus;	/**< HLOGGus */
    char *    HLOGpsds;	/**< HLOGpsds */
    char *    HLOGpsus;	/**< HLOGpsus */
    UINT32    HLOGMTds;	/**< HLOGMTds */
    UINT32    HLOGMTus;	/**< HLOGMTus */
    UINT32    QLNGds;	/**< QLNGds */
    UINT32    QLNGus;	/**< QLNGus */
    char *    QLNpsus;	/**< QLNpsus */
    UINT32    QLNMTds;	/**< QLNMTds */
    UINT32    QLNMTus;	/**< QLNMTus */
    UINT32    SNRGds;	/**< SNRGds */
    UINT32    SNRGus;	/**< SNRGus */
    char *    SNRpsus;	/**< SNRpsus */
    UINT32    SNRMTds;	/**< SNRMTds */
    UINT32    SNRMTus;	/**< SNRMTus */
    char *    LATNpbds;	/**< LATNpbds */
    char *    LATNpbus;	/**< LATNpbus */
    char *    SATNds;	/**< SATNds */
    char *    SATNus;	/**< SATNus */
} WanDslDiagObject;

/*! \brief _WanDslDiagObject is used internally to represent WanDslDiagObject */
typedef WanDslDiagObject _WanDslDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANDSLDiagnostics.
 *
 * MDMOID_WAN_DSL_PROPRIETARY_DIAG 103
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WanDslProprietaryDiagObject;

/*! \brief _WanDslProprietaryDiagObject is used internally to represent WanDslProprietaryDiagObject */
typedef WanDslProprietaryDiagObject _WanDslProprietaryDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANDSLDiagnostics.PeakLineNoise.
 *
 * MDMOID_WAN_DSL_DIAG_PLN 104
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticState;	/**< DiagnosticState */
    char *    PLNThldBB;	/**< PLNThldBB */
    char *    PLNThldPerTone;	/**< PLNThldPerTone */
    UINT32    PLNDurationNbBins;	/**< PLNDurationNbBins */
    char *    PLNDurationBins;	/**< PLNDurationBins */
    UINT32    PLNIntrArvNbBins;	/**< PLNIntrArvNbBins */
    char *    PLNIntrArvlBins;	/**< PLNIntrArvlBins */
    char *    PLNValueps;	/**< PLNValueps */
    char *    PLNThldCntps;	/**< PLNThldCntps */
    char *    PLNDurationHist;	/**< PLNDurationHist */
    char *    PLNIntrArvlHist;	/**< PLNIntrArvlHist */
    UINT32    PLNPerToneCounter;	/**< PLNPerToneCounter */
    UINT32    PLNBBCounter;	/**< PLNBBCounter */
} WanDslDiagPlnObject;

/*! \brief _WanDslDiagPlnObject is used internally to represent WanDslDiagPlnObject */
typedef WanDslDiagPlnObject _WanDslDiagPlnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANDSLDiagnostics.NonLinearity.
 *
 * MDMOID_WAN_DSL_DIAG_NON_LINEARITY 105
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    maxCriticalDistNoise;	/**< MaxCriticalDistNoise */
    UINT32    distAffectedBits;	/**< DistAffectedBits */
    char *    distNoisedB;	/**< DistNoisedB */
} WanDslDiagNonLinearityObject;

/*! \brief _WanDslDiagNonLinearityObject is used internally to represent WanDslDiagNonLinearityObject */
typedef WanDslDiagNonLinearityObject _WanDslDiagNonLinearityObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.X_BROADCOM_COM_WANCellularInterfaceConfig.
 *
 * MDMOID_WAN_CELLULAR_INTERFACE_CFG 106
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    cellularInterface;	/**< CellularInterface */
} WanCellularInterfaceCfgObject;

/*! \brief _WanCellularInterfaceCfgObject is used internally to represent WanCellularInterfaceCfgObject */
typedef WanCellularInterfaceCfgObject _WanCellularInterfaceCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.
 *
 * MDMOID_WAN_CONN_DEVICE 107
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    WANIPConnectionNumberOfEntries;	/**< WANIPConnectionNumberOfEntries */
    UINT32    WANPPPConnectionNumberOfEntries;	/**< WANPPPConnectionNumberOfEntries */
} WanConnDeviceObject;

/*! \brief _WanConnDeviceObject is used internally to represent WanConnDeviceObject */
typedef WanConnDeviceObject _WanConnDeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANATMF4EndToEndLoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F4_END_TO_END_LOOPBACK_DIAG 108
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF4EndToEndLoopbackDiagObject;

/*! \brief _WanAtmF4EndToEndLoopbackDiagObject is used internally to represent WanAtmF4EndToEndLoopbackDiagObject */
typedef WanAtmF4EndToEndLoopbackDiagObject _WanAtmF4EndToEndLoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANATMF4LoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F4_LOOPBACK_DIAG 109
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF4LoopbackDiagObject;

/*! \brief _WanAtmF4LoopbackDiagObject is used internally to represent WanAtmF4LoopbackDiagObject */
typedef WanAtmF4LoopbackDiagObject _WanAtmF4LoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANATMF5EndToEndLoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM_F5_END_TO_END_LOOPBACK_DIAG 110
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtmF5EndToEndLoopbackDiagObject;

/*! \brief _WanAtmF5EndToEndLoopbackDiagObject is used internally to represent WanAtmF5EndToEndLoopbackDiagObject */
typedef WanAtmF5EndToEndLoopbackDiagObject _WanAtmF5EndToEndLoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANGPONLinkConfig.
 *
 * MDMOID_WAN_GPON_LINK_CFG 111
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
    UINT32    portID;	/**< PortID */
    SINT32    direction;	/**< Direction */
    char *    connectionMode;	/**< ConnectionMode */
    char *    ifName;	/**< IfName */
    UBOOL8    phyDetected;	/**< PhyDetected */
} WanGponLinkCfgObject;

/*! \brief _WanGponLinkCfgObject is used internally to represent WanGponLinkCfgObject */
typedef WanGponLinkCfgObject _WanGponLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANEPONLinkConfig.
 *
 * MDMOID_WAN_EPON_LINK_CFG 112
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
    char *    connectionMode;	/**< ConnectionMode */
    char *    ifName;	/**< IfName */
    UBOOL8    phyDetected;	/**< PhyDetected */
} WanEponLinkCfgObject;

/*! \brief _WanEponLinkCfgObject is used internally to represent WanEponLinkCfgObject */
typedef WanEponLinkCfgObject _WanEponLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig.
 *
 * MDMOID_WAN_DSL_LINK_CFG 113
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
    char *    linkType;	/**< LinkType */
    UBOOL8    autoConfig;	/**< AutoConfig */
    char *    modulationType;	/**< ModulationType */
    char *    destinationAddress;	/**< DestinationAddress */
    char *    ATMEncapsulation;	/**< ATMEncapsulation */
    char *    ATMAAL;	/**< ATMAAL */
    UINT32    ATMTransmittedBlocks;	/**< ATMTransmittedBlocks */
    UINT32    ATMReceivedBlocks;	/**< ATMReceivedBlocks */
    char *    ATMQoS;	/**< ATMQoS */
    UINT32    ATMPeakCellRate;	/**< ATMPeakCellRate */
    UINT32    ATMMaximumBurstSize;	/**< ATMMaximumBurstSize */
    UINT32    ATMSustainableCellRate;	/**< ATMSustainableCellRate */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    SINT32    X_BROADCOM_COM_ATMMinimumCellRate;	/**< X_BROADCOM_COM_ATMMinimumCellRate */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UBOOL8    X_BROADCOM_COM_ATMEnbQos;	/**< X_BROADCOM_COM_ATMEnbQos */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_GrpScheduler;	/**< X_BROADCOM_COM_GrpScheduler */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_GrpWeight;	/**< X_BROADCOM_COM_GrpWeight */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_GrpPrecedence;	/**< X_BROADCOM_COM_GrpPrecedence */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_SchedulerAlgorithm;	/**< X_BROADCOM_COM_SchedulerAlgorithm */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_QueueWeight;	/**< X_BROADCOM_COM_QueueWeight */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_QueuePrecedence;	/**< X_BROADCOM_COM_QueuePrecedence */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_ATMStatus;	/**< X_BROADCOM_COM_ATMStatus */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_ATMInterfaceId;	/**< X_BROADCOM_COM_ATMInterfaceId */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_MacAddress;	/**< X_BROADCOM_COM_MacAddress */
#endif
    UINT32    AAL5CRCErrors;	/**< AAL5CRCErrors */
    UINT32    ATMCRCErrors;	/**< ATMCRCErrors */
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_ConnectionMode;	/**< X_BROADCOM_COM_ConnectionMode */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    char *    X_BROADCOM_COM_DropAlgorithm;	/**< X_BROADCOM_COM_DropAlgorithm */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_LowClassMinThreshold;	/**< X_BROADCOM_COM_LowClassMinThreshold */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_LowClassMaxThreshold;	/**< X_BROADCOM_COM_LowClassMaxThreshold */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_HighClassMinThreshold;	/**< X_BROADCOM_COM_HighClassMinThreshold */
#endif
#ifdef DMP_X_BROADCOM_COM_ADSLWAN_1
    UINT32    X_BROADCOM_COM_HighClassMaxThreshold;	/**< X_BROADCOM_COM_HighClassMaxThreshold */
#endif
} WanDslLinkCfgObject;

/*! \brief _WanDslLinkCfgObject is used internally to represent WanDslLinkCfgObject */
typedef WanDslLinkCfgObject _WanDslLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANDSLLinkConfig.X_BROADCOM_COM_ATM_PARMS.
 *
 * MDMOID_WAN_DSL_ATM_PARAMS 114
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    ATMFreeCellQSize;	/**< ATMFreeCellQSize */
    UINT32    ATMFreePacketQSize;	/**< ATMFreePacketQSize */
    UINT32    ATMFreePacketQBufferSize;	/**< ATMFreePacketQBufferSize */
    UINT32    ATMFreePacketQBufferOffset;	/**< ATMFreePacketQBufferOffset */
    UINT32    ATMReceiveCellQSize;	/**< ATMReceiveCellQSize */
    UINT32    ATMReceivePacketQSize;	/**< ATMReceivePacketQSize */
    UINT32    ATMTransmitFifoPriority;	/**< ATMTransmitFifoPriority */
    UINT32    ATMAal5CpcsMaxSduLength;	/**< ATMAal5CpcsMaxSduLength */
    UINT32    ATMAal2SscsMaxSsarSduLength;	/**< ATMAal2SscsMaxSsarSduLength */
} WanDslAtmParamsObject;

/*! \brief _WanDslAtmParamsObject is used internally to represent WanDslAtmParamsObject */
typedef WanDslAtmParamsObject _WanDslAtmParamsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANATMF5LoopbackDiagnostics.
 *
 * MDMOID_WAN_ATM5_LOOPBACK_DIAG 115
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} WanAtm5LoopbackDiagObject;

/*! \brief _WanAtm5LoopbackDiagObject is used internally to represent WanAtm5LoopbackDiagObject */
typedef WanAtm5LoopbackDiagObject _WanAtm5LoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPTMLinkConfig.
 *
 * MDMOID_WAN_PTM_LINK_CFG 116
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    linkStatus;	/**< LinkStatus */
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_PTMPortId;	/**< X_BROADCOM_COM_PTMPortId */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UBOOL8    X_BROADCOM_COM_PTMPriorityLow;	/**< X_BROADCOM_COM_PTMPriorityLow */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UBOOL8    X_BROADCOM_COM_PTMPriorityHigh;	/**< X_BROADCOM_COM_PTMPriorityHigh */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UBOOL8    X_BROADCOM_COM_PTMEnbQos;	/**< X_BROADCOM_COM_PTMEnbQos */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    char *    X_BROADCOM_COM_GrpScheduler;	/**< X_BROADCOM_COM_GrpScheduler */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_GrpWeight;	/**< X_BROADCOM_COM_GrpWeight */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_GrpPrecedence;	/**< X_BROADCOM_COM_GrpPrecedence */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    char *    X_BROADCOM_COM_SchedulerAlgorithm;	/**< X_BROADCOM_COM_SchedulerAlgorithm */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_QueueWeight;	/**< X_BROADCOM_COM_QueueWeight */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_QueuePrecedence;	/**< X_BROADCOM_COM_QueuePrecedence */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    char *    X_BROADCOM_COM_ConnectionMode;	/**< X_BROADCOM_COM_ConnectionMode */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    char *    X_BROADCOM_COM_DropAlgorithm;	/**< X_BROADCOM_COM_DropAlgorithm */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_LowClassMinThreshold;	/**< X_BROADCOM_COM_LowClassMinThreshold */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_LowClassMaxThreshold;	/**< X_BROADCOM_COM_LowClassMaxThreshold */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_HighClassMinThreshold;	/**< X_BROADCOM_COM_HighClassMinThreshold */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_HighClassMaxThreshold;	/**< X_BROADCOM_COM_HighClassMaxThreshold */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    SINT32    X_BROADCOM_COM_QueueMinimumRate;	/**< X_BROADCOM_COM_QueueMinimumRate */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    SINT32    X_BROADCOM_COM_QueueShapingRate;	/**< X_BROADCOM_COM_QueueShapingRate */
#endif
#ifdef DMP_X_BROADCOM_COM_PTMWAN_1
    UINT32    X_BROADCOM_COM_QueueShapingBurstSize;	/**< X_BROADCOM_COM_QueueShapingBurstSize */
#endif
} WanPtmLinkCfgObject;

/*! \brief _WanPtmLinkCfgObject is used internally to represent WanPtmLinkCfgObject */
typedef WanPtmLinkCfgObject _WanPtmLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANEthernetLinkConfig.
 *
 * MDMOID_WAN_ETH_LINK_CFG 117
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ethernetLinkStatus;	/**< EthernetLinkStatus */
} WanEthLinkCfgObject;

/*! \brief _WanEthLinkCfgObject is used internally to represent WanEthLinkCfgObject */
typedef WanEthLinkCfgObject _WanEthLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANWifiLinkConfig.
 *
 * MDMOID_WAN_WIFI_LINK_CFG 118
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlanLinkStatus;	/**< WlanLinkStatus */
} WanWifiLinkCfgObject;

/*! \brief _WanWifiLinkCfgObject is used internally to represent WanWifiLinkCfgObject */
typedef WanWifiLinkCfgObject _WanWifiLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_WANCellularLinkConfig.
 *
 * MDMOID_WAN_CELLULAR_LINK_CFG 119
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    cellularAPN;	/**< CellularAPN */
} WanCellularLinkCfgObject;

/*! \brief _WanCellularLinkCfgObject is used internally to represent WanCellularLinkCfgObject */
typedef WanCellularLinkCfgObject _WanCellularLinkCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.X_BROADCOM_COM_L2tpAcLinkConfig.
 *
 * MDMOID_L2TP_AC_LINK_CONFIG 120
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    sessionName;	/**< SessionName */
    char *    connectionMode;	/**< ConnectionMode */
    char *    linkStatus;	/**< LinkStatus */
    UINT32    sessionId;	/**< SessionId */
    char *    ifName;	/**< IfName */
} L2tpAcLinkConfigObject;

/*! \brief _L2tpAcLinkConfigObject is used internally to represent L2tpAcLinkConfigObject */
typedef L2tpAcLinkConfigObject _L2tpAcLinkConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.
 *
 * MDMOID_WAN_IP_CONN 122
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    connectionStatus;	/**< ConnectionStatus */
    char *    possibleConnectionTypes;	/**< PossibleConnectionTypes */
    char *    connectionType;	/**< ConnectionType */
    char *    name;	/**< Name */
    UINT32    uptime;	/**< Uptime */
    char *    lastConnectionError;	/**< LastConnectionError */
    UBOOL8    NATEnabled;	/**< NATEnabled */
    UBOOL8    X_BROADCOM_COM_FullconeNATEnabled;	/**< X_BROADCOM_COM_FullconeNATEnabled */
    char *    addressingType;	/**< AddressingType */
    char *    externalIPAddress;	/**< ExternalIPAddress */
    char *    subnetMask;	/**< SubnetMask */
    char *    defaultGateway;	/**< DefaultGateway */
    UBOOL8    X_BROADCOM_COM_FirewallEnabled;	/**< X_BROADCOM_COM_FirewallEnabled */
#ifdef DMP_X_BROADCOM_COM_IGMP_1
    UBOOL8    X_BROADCOM_COM_IGMPEnabled;	/**< X_BROADCOM_COM_IGMPEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IGMP_1
    UBOOL8    X_BROADCOM_COM_IGMP_SOURCEEnabled;	/**< X_BROADCOM_COM_IGMP_SOURCEEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_GPONWAN_1
    UBOOL8    X_BROADCOM_COM_NoMcastVlanFilter;	/**< X_BROADCOM_COM_NoMcastVlanFilter */
#endif
    UBOOL8    DNSEnabled;	/**< DNSEnabled */
    char *    DNSServers;	/**< DNSServers */
    UINT32    maxMTUSize;	/**< MaxMTUSize */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressOverride;	/**< MACAddressOverride */
    char *    routeProtocolRx;	/**< RouteProtocolRx */
    char *    X_BROADCOM_COM_RipOperationMode;	/**< X_BROADCOM_COM_RipOperationMode */
    char *    X_BROADCOM_COM_RipDebugMode;	/**< X_BROADCOM_COM_RipDebugMode */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    SINT32    X_BROADCOM_COM_ConnectionId;	/**< X_BROADCOM_COM_ConnectionId */
    UINT32    X_BROADCOM_COM_DhcpcPid;	/**< X_BROADCOM_COM_DhcpcPid */
    SINT32    X_BROADCOM_COM_VlanMux8021p;	/**< X_BROADCOM_COM_VlanMux8021p */
    SINT32    X_BROADCOM_COM_VlanMuxID;	/**< X_BROADCOM_COM_VlanMuxID */
    UINT32    X_BROADCOM_COM_VlanTpid;	/**< X_BROADCOM_COM_VlanTpid */
    UINT32    portMappingNumberOfEntries;	/**< PortMappingNumberOfEntries */
    char *    X_BROADCOM_COM_Op60VenderID;	/**< X_BROADCOM_COM_Op60VenderID */
    char *    X_BROADCOM_COM_Op61DUID;	/**< X_BROADCOM_COM_Op61DUID */
    char *    X_BROADCOM_COM_Op61IAID;	/**< X_BROADCOM_COM_Op61IAID */
    char *    X_BROADCOM_COM_Op77UserID;	/**< X_BROADCOM_COM_Op77UserID */
    UBOOL8    X_BROADCOM_COM_Op125Enabled;	/**< X_BROADCOM_COM_Op125Enabled */
    char *    X_BROADCOM_COM_Op50IpAddress;	/**< X_BROADCOM_COM_Op50IpAddress */
    UINT32    X_BROADCOM_COM_Op51LeasedTime;	/**< X_BROADCOM_COM_Op51LeasedTime */
    char *    X_BROADCOM_COM_Op54ServerIpAddress;	/**< X_BROADCOM_COM_Op54ServerIpAddress */
    UBOOL8    X_BROADCOM_COM_IPv6Enabled;	/**< X_BROADCOM_COM_IPv6Enabled */
    UBOOL8    X_BROADCOM_COM_IPv4Enabled;	/**< X_BROADCOM_COM_IPv4Enabled */
    UINT32    X_BROADCOM_COM_PCPMode;	/**< X_BROADCOM_COM_PCPMode */
    char *    X_BROADCOM_COM_PCPServer;	/**< X_BROADCOM_COM_PCPServer */
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_UnnumberedModel;	/**< X_BROADCOM_COM_UnnumberedModel */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6ConnStatus;	/**< X_BROADCOM_COM_IPv6ConnStatus */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6AddressingType;	/**< X_BROADCOM_COM_IPv6AddressingType */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_Dhcp6cForAddress;	/**< X_BROADCOM_COM_Dhcp6cForAddress */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_Dhcp6cForPrefixDelegation;	/**< X_BROADCOM_COM_Dhcp6cForPrefixDelegation */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_ExternalIPv6Address;	/**< X_BROADCOM_COM_ExternalIPv6Address */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_DefaultIPv6Gateway;	/**< X_BROADCOM_COM_DefaultIPv6Gateway */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_MFlag;	/**< X_BROADCOM_COM_MFlag */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_OFlag;	/**< X_BROADCOM_COM_OFlag */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6DNSServers;	/**< X_BROADCOM_COM_IPv6DNSServers */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6DomainName;	/**< X_BROADCOM_COM_IPv6DomainName */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6PrefixDelegationEnabled;	/**< X_BROADCOM_COM_IPv6PrefixDelegationEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6SitePrefix;	/**< X_BROADCOM_COM_IPv6SitePrefix */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    SINT32    X_BROADCOM_COM_IPv6SitePrefixPltime;	/**< X_BROADCOM_COM_IPv6SitePrefixPltime */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    SINT32    X_BROADCOM_COM_IPv6SitePrefixVltime;	/**< X_BROADCOM_COM_IPv6SitePrefixVltime */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_AFlag;	/**< X_BROADCOM_COM_AFlag */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_LFlag;	/**< X_BROADCOM_COM_LFlag */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UINT32    X_BROADCOM_COM_Dhcp6cPid;	/**< X_BROADCOM_COM_Dhcp6cPid */
#endif
#ifdef DMP_X_BROADCOM_COM_MLD_1
    UBOOL8    X_BROADCOM_COM_MLDEnabled;	/**< X_BROADCOM_COM_MLDEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_MLD_1
    UBOOL8    X_BROADCOM_COM_MLD_SOURCEEnabled;	/**< X_BROADCOM_COM_MLD_SOURCEEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_AUTODETECTION_1
    UBOOL8    X_BROADCOM_COM_LastConnected;	/**< X_BROADCOM_COM_LastConnected */
#endif
    char *    X_BROADCOM_COM_TransientLayer2LinkStatus;	/**< X_BROADCOM_COM_TransientLayer2LinkStatus */
    UINT32    X_BROADCOM_COM_ConnectionEstablishedTime;	/**< X_BROADCOM_COM_ConnectionEstablishedTime */
} WanIpConnObject;

/*! \brief _WanIpConnObject is used internally to represent WanIpConnObject */
typedef WanIpConnObject _WanIpConnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.PortMapping.{i}.
 *
 * MDMOID_WAN_IP_CONN_PORTMAPPING 123
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
    UINT32    X_BROADCOM_COM_ExpiryTime;	/**< X_BROADCOM_COM_ExpiryTime */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    X_BROADCOM_COM_ExternalPortEnd;	/**< X_BROADCOM_COM_ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    X_BROADCOM_COM_InternalPortEnd;	/**< X_BROADCOM_COM_InternalPortEnd */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
    char *    X_BROADCOM_COM_AppName;	/**< X_BROADCOM_COM_AppName */
} WanIpConnPortmappingObject;

/*! \brief _WanIpConnPortmappingObject is used internally to represent WanIpConnPortmappingObject */
typedef WanIpConnPortmappingObject _WanIpConnPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_BROADCOM_COM_PortTriggering.{i}.
 *
 * MDMOID_WAN_IP_CONN_PORT_TRIGGERING 124
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    char *    triggerProtocol;	/**< TriggerProtocol */
    char *    openProtocol;	/**< OpenProtocol */
    UINT32    triggerPortStart;	/**< TriggerPortStart */
    UINT32    triggerPortEnd;	/**< TriggerPortEnd */
    UINT32    openPortStart;	/**< OpenPortStart */
    UINT32    openPortEnd;	/**< OpenPortEnd */
} WanIpConnPortTriggeringObject;

/*! \brief _WanIpConnPortTriggeringObject is used internally to represent WanIpConnPortTriggeringObject */
typedef WanIpConnPortTriggeringObject _WanIpConnPortTriggeringObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_BROADCOM_COM_FirewallException.{i}.
 *
 * MDMOID_WAN_IP_CONN_FIREWALL_EXCEPTION 125
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} WanIpConnFirewallExceptionObject;

/*! \brief _WanIpConnFirewallExceptionObject is used internally to represent WanIpConnFirewallExceptionObject */
typedef WanIpConnFirewallExceptionObject _WanIpConnFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_BROADCOM_COM_MacFilterObj.
 *
 * MDMOID_MAC_FILTER 126
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    policy;	/**< Policy */
} MacFilterObject;

/*! \brief _MacFilterObject is used internally to represent MacFilterObject */
typedef MacFilterObject _MacFilterObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.X_BROADCOM_COM_MacFilterObj.X_BROADCOM_COM_MacFilterCfg.{i}.
 *
 * MDMOID_MAC_FILTER_CFG 127
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    protocol;	/**< Protocol */
    char *    direction;	/**< Direction */
    char *    sourceMAC;	/**< SourceMAC */
    char *    destinationMAC;	/**< DestinationMAC */
} MacFilterCfgObject;

/*! \brief _MacFilterCfgObject is used internally to represent MacFilterCfgObject */
typedef MacFilterCfgObject _MacFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANIPConnection.{i}.Stats.
 *
 * MDMOID_WAN_IP_CONN_STATS 128
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    ethernetBytesSent;	/**< EthernetBytesSent */
    UINT32    ethernetBytesReceived;	/**< EthernetBytesReceived */
    UINT32    ethernetPacketsSent;	/**< EthernetPacketsSent */
    UINT32    ethernetPacketsReceived;	/**< EthernetPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastPacketsSent;	/**< X_BROADCOM_COM_MulticastPacketsSent */
    UINT32    X_BROADCOM_COM_MulticastPacketsReceived;	/**< X_BROADCOM_COM_MulticastPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT32    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT32    X_BROADCOM_COM_UnicastPacketsSent;	/**< X_BROADCOM_COM_UnicastPacketsSent */
    UINT32    X_BROADCOM_COM_UnicastPacketsReceived;	/**< X_BROADCOM_COM_UnicastPacketsReceived */
    UINT32    X_BROADCOM_COM_BroadcastPacketsSent;	/**< X_BROADCOM_COM_BroadcastPacketsSent */
    UINT32    X_BROADCOM_COM_BroadcastPacketsReceived;	/**< X_BROADCOM_COM_BroadcastPacketsReceived */
} WanIpConnStatsObject;

/*! \brief _WanIpConnStatsObject is used internally to represent WanIpConnStatsObject */
typedef WanIpConnStatsObject _WanIpConnStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.
 *
 * MDMOID_WAN_PPP_CONN 129
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    connectionStatus;	/**< ConnectionStatus */
    char *    possibleConnectionTypes;	/**< PossibleConnectionTypes */
    char *    connectionType;	/**< ConnectionType */
    char *    name;	/**< Name */
    UINT32    uptime;	/**< Uptime */
    char *    lastConnectionError;	/**< LastConnectionError */
    UINT32    idleDisconnectTime;	/**< IdleDisconnectTime */
    UBOOL8    RSIPAvailable;	/**< RSIPAvailable */
    UBOOL8    NATEnabled;	/**< NATEnabled */
    UBOOL8    X_BROADCOM_COM_FullconeNATEnabled;	/**< X_BROADCOM_COM_FullconeNATEnabled */
    UBOOL8    X_BROADCOM_COM_FirewallEnabled;	/**< X_BROADCOM_COM_FirewallEnabled */
#ifdef DMP_X_BROADCOM_COM_IGMP_1
    UBOOL8    X_BROADCOM_COM_IGMPEnabled;	/**< X_BROADCOM_COM_IGMPEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IGMP_1
    UBOOL8    X_BROADCOM_COM_IGMP_SOURCEEnabled;	/**< X_BROADCOM_COM_IGMP_SOURCEEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_GPONWAN_1
    UBOOL8    X_BROADCOM_COM_NoMcastVlanFilter;	/**< X_BROADCOM_COM_NoMcastVlanFilter */
#endif
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    PPPEncryptionProtocol;	/**< PPPEncryptionProtocol */
    char *    PPPCompressionProtocol;	/**< PPPCompressionProtocol */
    char *    PPPAuthenticationProtocol;	/**< PPPAuthenticationProtocol */
    UINT32    X_BROADCOM_COM_ConnectionEstablishedTime;	/**< X_BROADCOM_COM_ConnectionEstablishedTime */
    UBOOL8    X_BROADCOM_COM_IPExtension;	/**< X_BROADCOM_COM_IPExtension */
    UBOOL8    X_BROADCOM_COM_UseStaticIPAddress;	/**< X_BROADCOM_COM_UseStaticIPAddress */
    char *    X_BROADCOM_COM_LocalIPAddress;	/**< X_BROADCOM_COM_LocalIPAddress */
    SINT32    X_BROADCOM_COM_ConnectionId;	/**< X_BROADCOM_COM_ConnectionId */
    UINT32    X_BROADCOM_COM_PppdPid;	/**< X_BROADCOM_COM_PppdPid */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
    char *    X_BROADCOM_COM_DefaultGateway;	/**< X_BROADCOM_COM_DefaultGateway */
    UBOOL8    X_BROADCOM_COM_Enable_Debug;	/**< X_BROADCOM_COM_Enable_Debug */
    UBOOL8    X_BROADCOM_COM_AddPppToBridge;	/**< X_BROADCOM_COM_AddPppToBridge */
    SINT32    X_BROADCOM_COM_VlanMux8021p;	/**< X_BROADCOM_COM_VlanMux8021p */
    SINT32    X_BROADCOM_COM_VlanMuxID;	/**< X_BROADCOM_COM_VlanMuxID */
    UINT32    X_BROADCOM_COM_VlanTpid;	/**< X_BROADCOM_COM_VlanTpid */
    char *    X_BROADCOM_COM_UserRequest;	/**< X_BROADCOM_COM_UserRequest */
    char *    externalIPAddress;	/**< ExternalIPAddress */
    char *    remoteIPAddress;	/**< RemoteIPAddress */
    UINT32    currentMRUSize;	/**< CurrentMRUSize */
    UBOOL8    DNSEnabled;	/**< DNSEnabled */
    UBOOL8    DNSOverrideAllowed;	/**< DNSOverrideAllowed */
    char *    DNSServers;	/**< DNSServers */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    MACAddressOverride;	/**< MACAddressOverride */
    char *    transportType;	/**< TransportType */
    char *    PPPoEServiceName;	/**< PPPoEServiceName */
    char *    connectionTrigger;	/**< ConnectionTrigger */
    char *    routeProtocolRx;	/**< RouteProtocolRx */
    UINT32    PPPLCPEcho;	/**< PPPLCPEcho */
    UINT32    PPPLCPEchoRetry;	/**< PPPLCPEchoRetry */
    UINT32    portMappingNumberOfEntries;	/**< PortMappingNumberOfEntries */
    UBOOL8    X_BROADCOM_COM_IPv6Enabled;	/**< X_BROADCOM_COM_IPv6Enabled */
    UBOOL8    X_BROADCOM_COM_IPv4Enabled;	/**< X_BROADCOM_COM_IPv4Enabled */
    UINT32    X_BROADCOM_COM_PCPMode;	/**< X_BROADCOM_COM_PCPMode */
    char *    X_BROADCOM_COM_PCPServer;	/**< X_BROADCOM_COM_PCPServer */
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_UnnumberedModel;	/**< X_BROADCOM_COM_UnnumberedModel */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6ConnStatus;	/**< X_BROADCOM_COM_IPv6ConnStatus */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6PppUp;	/**< X_BROADCOM_COM_IPv6PppUp */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6AddressingType;	/**< X_BROADCOM_COM_IPv6AddressingType */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_Dhcp6cForAddress;	/**< X_BROADCOM_COM_Dhcp6cForAddress */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_Dhcp6cForPrefixDelegation;	/**< X_BROADCOM_COM_Dhcp6cForPrefixDelegation */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_ExternalIPv6Address;	/**< X_BROADCOM_COM_ExternalIPv6Address */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_DefaultIPv6Gateway;	/**< X_BROADCOM_COM_DefaultIPv6Gateway */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_MFlag;	/**< X_BROADCOM_COM_MFlag */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_OFlag;	/**< X_BROADCOM_COM_OFlag */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6DNSServers;	/**< X_BROADCOM_COM_IPv6DNSServers */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6DomainName;	/**< X_BROADCOM_COM_IPv6DomainName */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_IPv6PrefixDelegationEnabled;	/**< X_BROADCOM_COM_IPv6PrefixDelegationEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    char *    X_BROADCOM_COM_IPv6SitePrefix;	/**< X_BROADCOM_COM_IPv6SitePrefix */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    SINT32    X_BROADCOM_COM_IPv6SitePrefixPltime;	/**< X_BROADCOM_COM_IPv6SitePrefixPltime */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    SINT32    X_BROADCOM_COM_IPv6SitePrefixVltime;	/**< X_BROADCOM_COM_IPv6SitePrefixVltime */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_AFlag;	/**< X_BROADCOM_COM_AFlag */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UBOOL8    X_BROADCOM_COM_LFlag;	/**< X_BROADCOM_COM_LFlag */
#endif
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UINT32    X_BROADCOM_COM_Dhcp6cPid;	/**< X_BROADCOM_COM_Dhcp6cPid */
#endif
#ifdef DMP_X_BROADCOM_COM_MLD_1
    UBOOL8    X_BROADCOM_COM_MLDEnabled;	/**< X_BROADCOM_COM_MLDEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_MLD_1
    UBOOL8    X_BROADCOM_COM_MLD_SOURCEEnabled;	/**< X_BROADCOM_COM_MLD_SOURCEEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_AUTODETECTION_1
    UBOOL8    X_BROADCOM_COM_LastConnected;	/**< X_BROADCOM_COM_LastConnected */
#endif
#ifdef DMP_X_BROADCOM_COM_AUTODETECTION_1
    UBOOL8    X_BROADCOM_COM_StopPppD;	/**< X_BROADCOM_COM_StopPppD */
#endif
    char *    X_BROADCOM_COM_TransientLayer2LinkStatus;	/**< X_BROADCOM_COM_TransientLayer2LinkStatus */
} WanPppConnObject;

/*! \brief _WanPppConnObject is used internally to represent WanPppConnObject */
typedef WanPppConnObject _WanPppConnObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.PortMapping.{i}.
 *
 * MDMOID_WAN_PPP_CONN_PORTMAPPING 130
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    portMappingEnabled;	/**< PortMappingEnabled */
    UINT32    portMappingLeaseDuration;	/**< PortMappingLeaseDuration */
    UINT32    X_BROADCOM_COM_ExpiryTime;	/**< X_BROADCOM_COM_ExpiryTime */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    X_BROADCOM_COM_ExternalPortEnd;	/**< X_BROADCOM_COM_ExternalPortEnd */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    X_BROADCOM_COM_InternalPortEnd;	/**< X_BROADCOM_COM_InternalPortEnd */
    char *    portMappingProtocol;	/**< PortMappingProtocol */
    char *    internalClient;	/**< InternalClient */
    char *    portMappingDescription;	/**< PortMappingDescription */
    char *    X_BROADCOM_COM_AppName;	/**< X_BROADCOM_COM_AppName */
} WanPppConnPortmappingObject;

/*! \brief _WanPppConnPortmappingObject is used internally to represent WanPppConnPortmappingObject */
typedef WanPppConnPortmappingObject _WanPppConnPortmappingObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.X_BROADCOM_COM_PortTriggering.{i}.
 *
 * MDMOID_WAN_PPP_CONN_PORT_TRIGGERING 131
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    char *    triggerProtocol;	/**< TriggerProtocol */
    char *    openProtocol;	/**< OpenProtocol */
    UINT32    triggerPortStart;	/**< TriggerPortStart */
    UINT32    triggerPortEnd;	/**< TriggerPortEnd */
    UINT32    openPortStart;	/**< OpenPortStart */
    UINT32    openPortEnd;	/**< OpenPortEnd */
} WanPppConnPortTriggeringObject;

/*! \brief _WanPppConnPortTriggeringObject is used internally to represent WanPppConnPortTriggeringObject */
typedef WanPppConnPortTriggeringObject _WanPppConnPortTriggeringObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.X_BROADCOM_COM_FirewallException.{i}.
 *
 * MDMOID_WAN_PPP_CONN_FIREWALL_EXCEPTION 132
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
} WanPppConnFirewallExceptionObject;

/*! \brief _WanPppConnFirewallExceptionObject is used internally to represent WanPppConnFirewallExceptionObject */
typedef WanPppConnFirewallExceptionObject _WanPppConnFirewallExceptionObject;



/*! \brief Obj struct for InternetGatewayDevice.WANDevice.{i}.WANConnectionDevice.{i}.WANPPPConnection.{i}.Stats.
 *
 * MDMOID_WAN_PPP_CONN_STATS 133
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_BROADCOM_COM_RxDrops;	/**< X_BROADCOM_COM_RxDrops */
    UINT32    X_BROADCOM_COM_TxDrops;	/**< X_BROADCOM_COM_TxDrops */
    UINT32    X_BROADCOM_COM_RxErrors;	/**< X_BROADCOM_COM_RxErrors */
    UINT32    X_BROADCOM_COM_TxErrors;	/**< X_BROADCOM_COM_TxErrors */
    UINT32    ethernetBytesSent;	/**< EthernetBytesSent */
    UINT32    ethernetBytesReceived;	/**< EthernetBytesReceived */
    UINT32    ethernetPacketsSent;	/**< EthernetPacketsSent */
    UINT32    ethernetPacketsReceived;	/**< EthernetPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastPacketsSent;	/**< X_BROADCOM_COM_MulticastPacketsSent */
    UINT32    X_BROADCOM_COM_MulticastPacketsReceived;	/**< X_BROADCOM_COM_MulticastPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT32    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT32    X_BROADCOM_COM_UnicastPacketsSent;	/**< X_BROADCOM_COM_UnicastPacketsSent */
    UINT32    X_BROADCOM_COM_UnicastPacketsReceived;	/**< X_BROADCOM_COM_UnicastPacketsReceived */
    UINT32    X_BROADCOM_COM_BroadcastPacketsSent;	/**< X_BROADCOM_COM_BroadcastPacketsSent */
    UINT32    X_BROADCOM_COM_BroadcastPacketsReceived;	/**< X_BROADCOM_COM_BroadcastPacketsReceived */
} WanPppConnStatsObject;

/*! \brief _WanPppConnStatsObject is used internally to represent WanPppConnStatsObject */
typedef WanPppConnStatsObject _WanPppConnStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer3Forwarding.
 *
 * MDMOID_L3_FORWARDING 134
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    defaultConnectionService;	/**< DefaultConnectionService */
    UINT32    forwardNumberOfEntries;	/**< ForwardNumberOfEntries */
    char *    X_BROADCOM_COM_DefaultConnectionServices;	/**< X_BROADCOM_COM_DefaultConnectionServices */
    char *    X_BROADCOM_COM_ActiveDefaultGateway;	/**< X_BROADCOM_COM_ActiveDefaultGateway */
} L3ForwardingObject;

/*! \brief _L3ForwardingObject is used internally to represent L3ForwardingObject */
typedef L3ForwardingObject _L3ForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.Layer3Forwarding.Forwarding.{i}.
 *
 * MDMOID_L3_FORWARDING_ENTRY 135
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    type;	/**< Type */
    char *    X_BROADCOM_COM_PolicyRoutingName;	/**< X_BROADCOM_COM_PolicyRoutingName */
    char *    destIPAddress;	/**< DestIPAddress */
    char *    destSubnetMask;	/**< DestSubnetMask */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceSubnetMask;	/**< SourceSubnetMask */
    char *    X_BROADCOM_COM_SourceIfName;	/**< X_BROADCOM_COM_SourceIfName */
#ifdef DMP_QOS_1
    SINT32    forwardingPolicy;	/**< ForwardingPolicy */
#endif
    char *    gatewayIPAddress;	/**< GatewayIPAddress */
    char *    interface;	/**< Interface */
    SINT32    forwardingMetric;	/**< ForwardingMetric */
    UINT32    MTU;	/**< MTU */
} L3ForwardingEntryObject;

/*! \brief _L3ForwardingEntryObject is used internally to represent L3ForwardingEntryObject */
typedef L3ForwardingEntryObject _L3ForwardingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPv6Layer3Forwarding.
 *
 * MDMOID_I_PV6_L3_FORWARDING 136
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    defaultConnectionService;	/**< DefaultConnectionService */
    UINT32    forwardNumberOfEntries;	/**< ForwardNumberOfEntries */
} IPv6L3ForwardingObject;

/*! \brief _IPv6L3ForwardingObject is used internally to represent IPv6L3ForwardingObject */
typedef IPv6L3ForwardingObject _IPv6L3ForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPv6Layer3Forwarding.IPv6Forwarding.{i}.
 *
 * MDMOID_I_PV6_L3_FORWARDING_ENTRY 137
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    type;	/**< Type */
    char *    policyRoutingName;	/**< PolicyRoutingName */
    char *    destIPv6Address;	/**< DestIPv6Address */
    char *    sourceIPv6Address;	/**< SourceIPv6Address */
    char *    sourceIfName;	/**< SourceIfName */
    SINT32    forwardingPolicy;	/**< ForwardingPolicy */
    char *    gatewayIPv6Address;	/**< GatewayIPv6Address */
    char *    interface;	/**< Interface */
    SINT32    forwardingMetric;	/**< ForwardingMetric */
    UINT32    MTU;	/**< MTU */
} IPv6L3ForwardingEntryObject;

/*! \brief _IPv6L3ForwardingEntryObject is used internally to represent IPv6L3ForwardingEntryObject */
typedef IPv6L3ForwardingEntryObject _IPv6L3ForwardingEntryObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.
 *
 * MDMOID_SERVICES 138
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} ServicesObject;

/*! \brief _ServicesObject is used internally to represent ServicesObject */
typedef ServicesObject _ServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.
 *
 * MDMOID_STORAGE_SERVICE 800
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    physicalMediumNumberOfEntries;	/**< PhysicalMediumNumberOfEntries */
    UINT32    logicalVolumeNumberOfEntries;	/**< LogicalVolumeNumberOfEntries */
    UINT32    userAccountNumberOfEntries;	/**< UserAccountNumberOfEntries */
} StorageServiceObject;

/*! \brief _StorageServiceObject is used internally to represent StorageServiceObject */
typedef StorageServiceObject _StorageServiceObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.UserAccount.{i}.
 *
 * MDMOID_USER_ACCOUNT 801
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    X_BROADCOM_volumeName;	/**< X_BROADCOM_volumeName */
} UserAccountObject;

/*! \brief _UserAccountObject is used internally to represent UserAccountObject */
typedef UserAccountObject _UserAccountObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.Capabilites.
 *
 * MDMOID_CAPABILITES 802
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    FTPCapable;	/**< FTPCapable */
    UBOOL8    SFTPCapable;	/**< SFTPCapable */
    UBOOL8    HTTPCapable;	/**< HTTPCapable */
    UBOOL8    HTTPSCapable;	/**< HTTPSCapable */
    UBOOL8    HTTPWritable;	/**< HTTPWritable */
    char *    supportedNetworkProtocols;	/**< SupportedNetworkProtocols */
    char *    supportedFileSystemTypes;	/**< SupportedFileSystemTypes */
    UBOOL8    volumeEncryptionCapable;	/**< VolumeEncryptionCapable */
} CapabilitesObject;

/*! \brief _CapabilitesObject is used internally to represent CapabilitesObject */
typedef CapabilitesObject _CapabilitesObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.NetInfo.
 *
 * MDMOID_NETWORK_INFO 803
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    hostName;	/**< HostName */
    char *    domainName;	/**< DomainName */
} NetworkInfoObject;

/*! \brief _NetworkInfoObject is used internally to represent NetworkInfoObject */
typedef NetworkInfoObject _NetworkInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.NetworkServer.
 *
 * MDMOID_NETWORK_SERVER 804
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    AFPEnable;	/**< AFPEnable */
    UBOOL8    NFSEnable;	/**< NFSEnable */
    UBOOL8    SMBEnable;	/**< SMBEnable */
    UBOOL8    networkProtocolAuthReq;	/**< NetworkProtocolAuthReq */
} NetworkServerObject;

/*! \brief _NetworkServerObject is used internally to represent NetworkServerObject */
typedef NetworkServerObject _NetworkServerObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.PhysicalMedium.{i}.
 *
 * MDMOID_PHYSICAL_MEDIUM 805
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    connectionType;	/**< ConnectionType */
    UBOOL8    removable;	/**< Removable */
    UINT32    capacity;	/**< Capacity */
    char *    status;	/**< Status */
} PhysicalMediumObject;

/*! \brief _PhysicalMediumObject is used internally to represent PhysicalMediumObject */
typedef PhysicalMediumObject _PhysicalMediumObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.LogicalVolume.{i}.
 *
 * MDMOID_LOGICAL_VOLUME 806
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    status;	/**< Status */
    UBOOL8    enable;	/**< Enable */
    char *    physicalReference;	/**< PhysicalReference */
    char *    fileSystem;	/**< FileSystem */
    UINT32    capacity;	/**< Capacity */
    UINT32    usedSpace;	/**< UsedSpace */
    UBOOL8    encrypted;	/**< Encrypted */
    UINT32    folderNumberOfEntries;	/**< FolderNumberOfEntries */
} LogicalVolumeObject;

/*! \brief _LogicalVolumeObject is used internally to represent LogicalVolumeObject */
typedef LogicalVolumeObject _LogicalVolumeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.StorageService.{i}.LogicalVolume.{i}.Folder.{i}.
 *
 * MDMOID_FOLDER 807
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    UBOOL8    enable;	/**< Enable */
    UINT32    userAccountAccess;	/**< UserAccountAccess */
} FolderObject;

/*! \brief _FolderObject is used internally to represent FolderObject */
typedef FolderObject _FolderObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.
 *
 * MDMOID_VOICE 500
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    voiceProfileNumberOfEntries;	/**< VoiceProfileNumberOfEntries */
    char *    X_BROADCOM_COM_BoundIfName;	/**< X_BROADCOM_COM_BoundIfName */
    char *    X_BROADCOM_COM_BoundIpAddr;	/**< X_BROADCOM_COM_BoundIpAddr */
    char *    X_BROADCOM_COM_IpAddressFamily;	/**< X_BROADCOM_COM_IpAddressFamily */
    char *    X_BROADCOM_COM_VoiceDnsServer;	/**< X_BROADCOM_COM_VoiceDnsServer */
    char *    X_BROADCOM_COM_LoggingLevel;	/**< X_BROADCOM_COM_LoggingLevel */
    char *    X_BROADCOM_COM_LoggingDestination;	/**< X_BROADCOM_COM_LoggingDestination */
    char *    X_BROADCOM_COM_ModuleLogLevels;	/**< X_BROADCOM_COM_ModuleLogLevels */
    char *    X_BROADCOM_COM_CCTKTraceLevel;	/**< X_BROADCOM_COM_CCTKTraceLevel */
    char *    X_BROADCOM_COM_CCTKTraceGroup;	/**< X_BROADCOM_COM_CCTKTraceGroup */
#ifdef DMP_X_BROADCOM_COM_DECTENDPOINT_1
    char *    X_BROADCOM_COM_DectEepromData;	/**< X_BROADCOM_COM_DectEepromData */
#endif
    char *    X_BROADCOM_COM_ManagementProtocol;	/**< X_BROADCOM_COM_ManagementProtocol */
} VoiceObject;

/*! \brief _VoiceObject is used internally to represent VoiceObject */
typedef VoiceObject _VoiceObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.
 *
 * MDMOID_VOICE_CALL_LIST 501
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceCallListObject;

/*! \brief _VoiceCallListObject is used internally to represent VoiceCallListObject */
typedef VoiceCallListObject _VoiceCallListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.NewFlag.
 *
 * MDMOID_VOICE_CALL_NEW_FLAG 502
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    element;	/**< Element */
} VoiceCallNewFlagObject;

/*! \brief _VoiceCallNewFlagObject is used internally to represent VoiceCallNewFlagObject */
typedef VoiceCallNewFlagObject _VoiceCallNewFlagObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.NumberOfMissedCalls.
 *
 * MDMOID_VOICE_CALL_NUMBER_OF_MISSED_CALLS 503
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
} VoiceCallNumberOfMissedCallsObject;

/*! \brief _VoiceCallNumberOfMissedCallsObject is used internally to represent VoiceCallNumberOfMissedCallsObject */
typedef VoiceCallNumberOfMissedCallsObject _VoiceCallNumberOfMissedCallsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.Number.
 *
 * MDMOID_VOICE_CALL_NUMBER 504
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
    UBOOL8    internal;	/**< Internal */
    UBOOL8    own;	/**< Own */
} VoiceCallNumberObject;

/*! \brief _VoiceCallNumberObject is used internally to represent VoiceCallNumberObject */
typedef VoiceCallNumberObject _VoiceCallNumberObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.Name.
 *
 * MDMOID_VOICE_CALL_NAME 505
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceCallNameObject;

/*! \brief _VoiceCallNameObject is used internally to represent VoiceCallNameObject */
typedef VoiceCallNameObject _VoiceCallNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.DateTime.
 *
 * MDMOID_VOICE_CALL_DATE_TIME 506
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    DATETIME  element;	/**< Element */
} VoiceCallDateTimeObject;

/*! \brief _VoiceCallDateTimeObject is used internally to represent VoiceCallDateTimeObject */
typedef VoiceCallDateTimeObject _VoiceCallDateTimeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.LineName.
 *
 * MDMOID_VOICE_CALL_LINE_NAME 507
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceCallLineNameObject;

/*! \brief _VoiceCallLineNameObject is used internally to represent VoiceCallLineNameObject */
typedef VoiceCallLineNameObject _VoiceCallLineNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.LineId.
 *
 * MDMOID_VOICE_CALL_LINE_ID 508
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
    UINT32    subType;	/**< SubType */
} VoiceCallLineIdObject;

/*! \brief _VoiceCallLineIdObject is used internally to represent VoiceCallLineIdObject */
typedef VoiceCallLineIdObject _VoiceCallLineIdObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Call.{i}.CallType.
 *
 * MDMOID_VOICE_CALL_TYPE 509
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
} VoiceCallTypeObject;

/*! \brief _VoiceCallTypeObject is used internally to represent VoiceCallTypeObject */
typedef VoiceCallTypeObject _VoiceCallTypeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Contact.{i}.
 *
 * MDMOID_VOICE_CONTACT_LIST 510
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceContactListObject;

/*! \brief _VoiceContactListObject is used internally to represent VoiceContactListObject */
typedef VoiceContactListObject _VoiceContactListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Contact.{i}.Name.
 *
 * MDMOID_VOICE_CONTACT_NAME 511
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceContactNameObject;

/*! \brief _VoiceContactNameObject is used internally to represent VoiceContactNameObject */
typedef VoiceContactNameObject _VoiceContactNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Contact.{i}.FirstName.
 *
 * MDMOID_VOICE_CONTACT_FIRST_NAME 512
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceContactFirstNameObject;

/*! \brief _VoiceContactFirstNameObject is used internally to represent VoiceContactFirstNameObject */
typedef VoiceContactFirstNameObject _VoiceContactFirstNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Contact.{i}.ContactNumber.{i}.
 *
 * MDMOID_VOICE_CONTACT_NUMBER 513
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    editable;	/**< Editable */
    char *    number;	/**< Number */
    UBOOL8    own;	/**< Own */
    UINT32    numberType;	/**< NumberType */
} VoiceContactNumberObject;

/*! \brief _VoiceContactNumberObject is used internally to represent VoiceContactNumberObject */
typedef VoiceContactNumberObject _VoiceContactNumberObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Contact.{i}.Melody.
 *
 * MDMOID_VOICE_CONTACT_MELODY 514
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
} VoiceContactMelodyObject;

/*! \brief _VoiceContactMelodyObject is used internally to represent VoiceContactMelodyObject */
typedef VoiceContactMelodyObject _VoiceContactMelodyObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Contact.{i}.LineId.
 *
 * MDMOID_VOICE_CONTACT_LINE_ID 515
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
    UINT32    lineIdSubType;	/**< LineIdSubType */
} VoiceContactLineIdObject;

/*! \brief _VoiceContactLineIdObject is used internally to represent VoiceContactLineIdObject */
typedef VoiceContactLineIdObject _VoiceContactLineIdObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_SupportList.{i}.
 *
 * MDMOID_VOICE_DECT_SUPPORT_LIST 516
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
    UBOOL8    supported;	/**< Supported */
} VoiceDectSupportListObject;

/*! \brief _VoiceDectSupportListObject is used internally to represent VoiceDectSupportListObject */
typedef VoiceDectSupportListObject _VoiceDectSupportListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.
 *
 * MDMOID_VOICE_CAP 517
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    maxProfileCount;	/**< MaxProfileCount */
    UINT32    maxLineCount;	/**< MaxLineCount */
    UINT32    maxSessionsPerLine;	/**< MaxSessionsPerLine */
    UINT32    maxSessionCount;	/**< MaxSessionCount */
    char *    signalingProtocols;	/**< SignalingProtocols */
    char *    regions;	/**< Regions */
    UBOOL8    RTCP;	/**< RTCP */
    UBOOL8    SRTP;	/**< SRTP */
    UBOOL8    RTPRedundancy;	/**< RTPRedundancy */
    UBOOL8    DSCPCoupled;	/**< DSCPCoupled */
    UBOOL8    ethernetTaggingCoupled;	/**< EthernetTaggingCoupled */
    UBOOL8    PSTNSoftSwitchOver;	/**< PSTNSoftSwitchOver */
    UBOOL8    faxT38;	/**< FaxT38 */
    UBOOL8    faxPassThrough;	/**< FaxPassThrough */
    UBOOL8    modemPassThrough;	/**< ModemPassThrough */
    UBOOL8    toneGeneration;	/**< ToneGeneration */
    UBOOL8    ringGeneration;	/**< RingGeneration */
    UBOOL8    digitMap;	/**< DigitMap */
    UBOOL8    numberingPlan;	/**< NumberingPlan */
    UBOOL8    buttonMap;	/**< ButtonMap */
    UBOOL8    voicePortTests;	/**< VoicePortTests */
} VoiceCapObject;

/*! \brief _VoiceCapObject is used internally to represent VoiceCapObject */
typedef VoiceCapObject _VoiceCapObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.SIP.
 *
 * MDMOID_VOICE_CAP_SIP 518
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    role;	/**< Role */
    char *    extensions;	/**< Extensions */
    char *    transports;	/**< Transports */
    char *    URISchemes;	/**< URISchemes */
    UBOOL8    eventSubscription;	/**< EventSubscription */
    UBOOL8    responseMap;	/**< ResponseMap */
    char *    TLSKeyExchangeProtocols;	/**< TLSKeyExchangeProtocols */
} VoiceCapSipObject;

/*! \brief _VoiceCapSipObject is used internally to represent VoiceCapSipObject */
typedef VoiceCapSipObject _VoiceCapSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.MGCP.
 *
 * MDMOID_VOICE_CAP_MGCP 519
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    extensions;	/**< Extensions */
} VoiceCapMgcpObject;

/*! \brief _VoiceCapMgcpObject is used internally to represent VoiceCapMgcpObject */
typedef VoiceCapMgcpObject _VoiceCapMgcpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.Capabilities.Codecs.{i}.
 *
 * MDMOID_VOICE_CAP_CODECS 521
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    char *    codec;	/**< Codec */
    UINT32    bitRate;	/**< BitRate */
    char *    packetizationPeriod;	/**< PacketizationPeriod */
    UBOOL8    silenceSuppression;	/**< SilenceSuppression */
} VoiceCapCodecsObject;

/*! \brief _VoiceCapCodecsObject is used internally to represent VoiceCapCodecsObject */
typedef VoiceCapCodecsObject _VoiceCapCodecsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.
 *
 * MDMOID_VOICE_PROF 522
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    enable;	/**< Enable */
    UBOOL8    reset;	/**< Reset */
    UINT32    numberOfLines;	/**< NumberOfLines */
    char *    name;	/**< Name */
    char *    signalingProtocol;	/**< SignalingProtocol */
    UINT32    maxSessions;	/**< MaxSessions */
    char *    DTMFMethod;	/**< DTMFMethod */
    char *    DTMFMethodG711;	/**< DTMFMethodG711 */
    char *    X_BROADCOM_COM_HookFlashMethod;	/**< X_BROADCOM_COM_HookFlashMethod */
    char *    region;	/**< Region */
    char *    digitMap;	/**< DigitMap */
    UBOOL8    digitMapEnable;	/**< DigitMapEnable */
    UBOOL8    STUNEnable;	/**< STUNEnable */
    char *    STUNServer;	/**< STUNServer */
    UINT32    X_BROADCOM_COM_STUNServerPort;	/**< X_BROADCOM_COM_STUNServerPort */
    char *    X_BROADCOM_COM_LogServer;	/**< X_BROADCOM_COM_LogServer */
    UINT32    X_BROADCOM_COM_LogServerPort;	/**< X_BROADCOM_COM_LogServerPort */
    UINT32    X_BROADCOM_COM_SPNum;	/**< X_BROADCOM_COM_SPNum */
    UBOOL8    X_BROADCOM_COM_V18_Support;	/**< X_BROADCOM_COM_V18_Support */
    UINT32    X_BROADCOM_COM_CriticalDigitTimer;	/**< X_BROADCOM_COM_CriticalDigitTimer */
    UINT32    X_BROADCOM_COM_PartialDigitTimer;	/**< X_BROADCOM_COM_PartialDigitTimer */
#ifdef DMP_SIPENDPOINT_1
    char *    X_BROADCOM_COM_CCTK_DigitMap;	/**< X_BROADCOM_COM_CCTK_DigitMap */
#endif
} VoiceProfObject;

/*! \brief _VoiceProfObject is used internally to represent VoiceProfObject */
typedef VoiceProfObject _VoiceProfObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.ServiceProviderInfo.
 *
 * MDMOID_VOICE_PROF_PROVIDER 523
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
} VoiceProfProviderObject;

/*! \brief _VoiceProfProviderObject is used internally to represent VoiceProfProviderObject */
typedef VoiceProfProviderObject _VoiceProfProviderObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.SIP.
 *
 * MDMOID_VOICE_PROF_SIP 524
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    proxyServer;	/**< ProxyServer */
    UINT32    proxyServerPort;	/**< ProxyServerPort */
    char *    proxyServerTransport;	/**< ProxyServerTransport */
    char *    registrarServer;	/**< RegistrarServer */
    UINT32    registrarServerPort;	/**< RegistrarServerPort */
    char *    registrarServerTransport;	/**< RegistrarServerTransport */
    UBOOL8    X_BROADCOM_COM_ToTagMatching;	/**< X_BROADCOM_COM_ToTagMatching */
    char *    X_BROADCOM_COM_MusicServer;	/**< X_BROADCOM_COM_MusicServer */
    UINT32    X_BROADCOM_COM_MusicServerPort;	/**< X_BROADCOM_COM_MusicServerPort */
    char *    X_BROADCOM_COM_ConferencingURI;	/**< X_BROADCOM_COM_ConferencingURI */
    char *    X_BROADCOM_COM_ConferencingOption;	/**< X_BROADCOM_COM_ConferencingOption */
    UBOOL8    X_BROADCOM_COM_SipFailoverEnable;	/**< X_BROADCOM_COM_SipFailoverEnable */
    char *    X_BROADCOM_COM_SecondaryOutboundProxyAddress;	/**< X_BROADCOM_COM_SecondaryOutboundProxyAddress */
    UINT32    X_BROADCOM_COM_SecondaryOutboundProxyPort;	/**< X_BROADCOM_COM_SecondaryOutboundProxyPort */
    char *    X_BROADCOM_COM_BackToPrimMode;	/**< X_BROADCOM_COM_BackToPrimMode */
    char *    userAgentDomain;	/**< UserAgentDomain */
    UINT32    userAgentPort;	/**< UserAgentPort */
    char *    userAgentTransport;	/**< UserAgentTransport */
    char *    outboundProxy;	/**< OutboundProxy */
    UINT32    outboundProxyPort;	/**< OutboundProxyPort */
    char *    organization;	/**< Organization */
    UINT32    registrationPeriod;	/**< RegistrationPeriod */
    UINT32    timerB;	/**< TimerB */
    UINT32    timerF;	/**< TimerF */
    UINT32    registerExpires;	/**< RegisterExpires */
    UINT32    registerRetryInterval;	/**< RegisterRetryInterval */
    UINT32    DSCPMark;	/**< DSCPMark */
    SINT32    VLANIDMark;	/**< VLANIDMark */
    SINT32    ethernetPriorityMark;	/**< EthernetPriorityMark */
} VoiceProfSipObject;

/*! \brief _VoiceProfSipObject is used internally to represent VoiceProfSipObject */
typedef VoiceProfSipObject _VoiceProfSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.SIP.EventSubscribe.{i}.
 *
 * MDMOID_VOICE_PROF_SIP_SUBSCRIBE 525
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    event;	/**< Event */
    char *    notifier;	/**< Notifier */
    UINT32    notifierPort;	/**< NotifierPort */
    char *    notifierTransport;	/**< NotifierTransport */
} VoiceProfSipSubscribeObject;

/*! \brief _VoiceProfSipSubscribeObject is used internally to represent VoiceProfSipSubscribeObject */
typedef VoiceProfSipSubscribeObject _VoiceProfSipSubscribeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.MGCP.
 *
 * MDMOID_VOICE_PROF_MGCP 527
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    callAgent1;	/**< CallAgent1 */
    char *    user;	/**< User */
} VoiceProfMgcpObject;

/*! \brief _VoiceProfMgcpObject is used internally to represent VoiceProfMgcpObject */
typedef VoiceProfMgcpObject _VoiceProfMgcpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.RTP.
 *
 * MDMOID_VOICE_PROF_RTP 529
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    localPortMin;	/**< LocalPortMin */
    UINT32    localPortMax;	/**< LocalPortMax */
    UINT32    DSCPMark;	/**< DSCPMark */
    UINT32    telephoneEventPayloadType;	/**< TelephoneEventPayloadType */
} VoiceProfRtpObject;

/*! \brief _VoiceProfRtpObject is used internally to represent VoiceProfRtpObject */
typedef VoiceProfRtpObject _VoiceProfRtpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.RTP.SRTP.
 *
 * MDMOID_VOICE_PROF_RTP_SRTP 531
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    X_BROADCOM_COM_SrtpUsageOption;	/**< X_BROADCOM_COM_SrtpUsageOption */
} VoiceProfRtpSrtpObject;

/*! \brief _VoiceProfRtpSrtpObject is used internally to represent VoiceProfRtpSrtpObject */
typedef VoiceProfRtpSrtpObject _VoiceProfRtpSrtpObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.RTP.Redundancy.
 *
 * MDMOID_VOICE_PROF_RTP_REDUNDANCY 532
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    payloadType;	/**< PayloadType */
    UINT32    blockPayloadType;	/**< BlockPayloadType */
    SINT32    voiceRedundancy;	/**< VoiceRedundancy */
} VoiceProfRtpRedundancyObject;

/*! \brief _VoiceProfRtpRedundancyObject is used internally to represent VoiceProfRtpRedundancyObject */
typedef VoiceProfRtpRedundancyObject _VoiceProfRtpRedundancyObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.FaxT38.
 *
 * MDMOID_VOICE_PROF_FAX_T38 541
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    bitRate;	/**< BitRate */
    UINT32    highSpeedPacketRate;	/**< HighSpeedPacketRate */
} VoiceProfFaxT38Object;

/*! \brief _VoiceProfFaxT38Object is used internally to represent VoiceProfFaxT38Object */
typedef VoiceProfFaxT38Object _VoiceProfFaxT38Object;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.
 *
 * MDMOID_VOICE_LINE 542
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    enable;	/**< Enable */
    char *    directoryNumber;	/**< DirectoryNumber */
    char *    status;	/**< Status */
    char *    callState;	/**< CallState */
#ifdef DMP_TAENDPOINT_1
    char *    phyReferenceList;	/**< PhyReferenceList */
#endif
    char *    X_BROADCOM_COM_NonFxsPhyReferenceList;	/**< X_BROADCOM_COM_NonFxsPhyReferenceList */
    UINT32    X_BROADCOM_COM_CMAcntNum;	/**< X_BROADCOM_COM_CMAcntNum */
    char *    X_BROADCOM_COM_AssociatedNonFxsPhyIntfType;	/**< X_BROADCOM_COM_AssociatedNonFxsPhyIntfType */
} VoiceLineObject;

/*! \brief _VoiceLineObject is used internally to represent VoiceLineObject */
typedef VoiceLineObject _VoiceLineObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.SIP.
 *
 * MDMOID_VOICE_LINE_SIP 543
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    authUserName;	/**< AuthUserName */
    char *    authPassword;	/**< AuthPassword */
    char *    URI;	/**< URI */
} VoiceLineSipObject;

/*! \brief _VoiceLineSipObject is used internally to represent VoiceLineSipObject */
typedef VoiceLineSipObject _VoiceLineSipObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.CallingFeatures.
 *
 * MDMOID_VOICE_LINE_CALLING_FEATURES 551
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    callerIDEnable;	/**< CallerIDEnable */
    char *    callerIDName;	/**< CallerIDName */
    UBOOL8    callWaitingEnable;	/**< CallWaitingEnable */
    UBOOL8    X_BROADCOM_COM_CallWaitingStart;	/**< X_BROADCOM_COM_CallWaitingStart */
    char *    callWaitingStatus;	/**< CallWaitingStatus */
    UINT32    maxSessions;	/**< MaxSessions */
    UBOOL8    callForwardUnconditionalEnable;	/**< CallForwardUnconditionalEnable */
    UBOOL8    X_BROADCOM_COM_CallForwardUnconditionalStart;	/**< X_BROADCOM_COM_CallForwardUnconditionalStart */
    char *    callForwardUnconditionalNumber;	/**< CallForwardUnconditionalNumber */
    UBOOL8    callForwardOnBusyEnable;	/**< CallForwardOnBusyEnable */
    UBOOL8    X_BROADCOM_COM_CallForwardOnBusyStart;	/**< X_BROADCOM_COM_CallForwardOnBusyStart */
    char *    callForwardOnBusyNumber;	/**< CallForwardOnBusyNumber */
    UBOOL8    callForwardOnNoAnswerEnable;	/**< CallForwardOnNoAnswerEnable */
    UBOOL8    X_BROADCOM_COM_CallForwardOnNoAnswerStart;	/**< X_BROADCOM_COM_CallForwardOnNoAnswerStart */
    char *    callForwardOnNoAnswerNumber;	/**< CallForwardOnNoAnswerNumber */
    UBOOL8    callTransferEnable;	/**< CallTransferEnable */
    UBOOL8    MWIEnable;	/**< MWIEnable */
    UBOOL8    anonymousCallBlockEnable;	/**< AnonymousCallBlockEnable */
    UBOOL8    X_BROADCOM_COM_AnonymousCallBlockStart;	/**< X_BROADCOM_COM_AnonymousCallBlockStart */
    UBOOL8    anonymousCallEnable;	/**< AnonymousCallEnable */
    UBOOL8    X_BROADCOM_COM_AnonymousCallStart;	/**< X_BROADCOM_COM_AnonymousCallStart */
    UBOOL8    doNotDisturbEnable;	/**< DoNotDisturbEnable */
    UBOOL8    X_BROADCOM_COM_DoNotDisturbStart;	/**< X_BROADCOM_COM_DoNotDisturbStart */
    UBOOL8    callReturnEnable;	/**< CallReturnEnable */
    UBOOL8    repeatDialEnable;	/**< RepeatDialEnable */
    UBOOL8    X_BROADCOM_COM_CAllCompletionOnBusyEnable;	/**< X_BROADCOM_COM_CAllCompletionOnBusyEnable */
    UBOOL8    X_BROADCOM_COM_SpeedDialEnable;	/**< X_BROADCOM_COM_SpeedDialEnable */
    UBOOL8    X_BROADCOM_COM_WarmLineEnable;	/**< X_BROADCOM_COM_WarmLineEnable */
    UBOOL8    X_BROADCOM_COM_WarmLineStart;	/**< X_BROADCOM_COM_WarmLineStart */
    char *    X_BROADCOM_COM_WarmLineNumber;	/**< X_BROADCOM_COM_WarmLineNumber */
    UBOOL8    X_BROADCOM_COM_CallBarringEnable;	/**< X_BROADCOM_COM_CallBarringEnable */
    char *    X_BROADCOM_COM_CallBarringMode;	/**< X_BROADCOM_COM_CallBarringMode */
    char *    X_BROADCOM_COM_CallBarringUserPin;	/**< X_BROADCOM_COM_CallBarringUserPin */
    char *    X_BROADCOM_COM_CallBarringDigitMap;	/**< X_BROADCOM_COM_CallBarringDigitMap */
    UBOOL8    X_BROADCOM_COM_NetworkPrivacyEnable;	/**< X_BROADCOM_COM_NetworkPrivacyEnable */
    UBOOL8    X_BROADCOM_COM_NetworkPrivacyStart;	/**< X_BROADCOM_COM_NetworkPrivacyStart */
    UBOOL8    X_BROADCOM_COM_VMWIEnable;	/**< X_BROADCOM_COM_VMWIEnable */
    UBOOL8    X_BROADCOM_COM_EnumEnable;	/**< X_BROADCOM_COM_EnumEnable */
    UBOOL8    X_BROADCOM_COM_EnumStart;	/**< X_BROADCOM_COM_EnumStart */
} VoiceLineCallingFeaturesObject;

/*! \brief _VoiceLineCallingFeaturesObject is used internally to represent VoiceLineCallingFeaturesObject */
typedef VoiceLineCallingFeaturesObject _VoiceLineCallingFeaturesObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.VoiceProcessing.
 *
 * MDMOID_VOICE_LINE_PROCESSING 552
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    transmitGain;	/**< TransmitGain */
    SINT32    receiveGain;	/**< ReceiveGain */
    UBOOL8    echoCancellationEnable;	/**< EchoCancellationEnable */
} VoiceLineProcessingObject;

/*! \brief _VoiceLineProcessingObject is used internally to represent VoiceLineProcessingObject */
typedef VoiceLineProcessingObject _VoiceLineProcessingObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Codec.
 *
 * MDMOID_VOICE_LINE_CODEC 553
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceLineCodecObject;

/*! \brief _VoiceLineCodecObject is used internally to represent VoiceLineCodecObject */
typedef VoiceLineCodecObject _VoiceLineCodecObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Codec.List.{i}.
 *
 * MDMOID_VOICE_LINE_CODEC_LIST 554
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    char *    codec;	/**< Codec */
    UINT32    bitRate;	/**< BitRate */
    char *    packetizationPeriod;	/**< PacketizationPeriod */
    UBOOL8    silenceSuppression;	/**< SilenceSuppression */
    UBOOL8    enable;	/**< Enable */
    UINT32    priority;	/**< Priority */
} VoiceLineCodecListObject;

/*! \brief _VoiceLineCodecListObject is used internally to represent VoiceLineCodecListObject */
typedef VoiceLineCodecListObject _VoiceLineCodecListObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.Stats.
 *
 * MDMOID_VOICE_LINE_STATS 556
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    resetStatistics;	/**< ResetStatistics */
    UINT32    packetsSent;	/**< PacketsSent */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    bytesSent;	/**< BytesSent */
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    packetsLost;	/**< PacketsLost */
    UINT32    incomingCallsReceived;	/**< IncomingCallsReceived */
    UINT32    incomingCallsAnswered;	/**< IncomingCallsAnswered */
    UINT32    incomingCallsConnected;	/**< IncomingCallsConnected */
    UINT32    incomingCallsFailed;	/**< IncomingCallsFailed */
    UINT32    outgoingCallsAttempted;	/**< OutgoingCallsAttempted */
    UINT32    outgoingCallsAnswered;	/**< OutgoingCallsAnswered */
    UINT32    outgoingCallsConnected;	/**< OutgoingCallsConnected */
    UINT32    outgoingCallsFailed;	/**< OutgoingCallsFailed */
    UINT32    receivePacketLossRate;	/**< ReceivePacketLossRate */
    UINT32    farEndPacketLossRate;	/**< FarEndPacketLossRate */
    UINT32    receiveInterarrivalJitter;	/**< ReceiveInterarrivalJitter */
    UINT32    farEndInterarrivalJitter;	/**< FarEndInterarrivalJitter */
    UINT32    roundTripDelay;	/**< RoundTripDelay */
    UINT32    averageReceiveInterarrivalJitter;	/**< AverageReceiveInterarrivalJitter */
    UINT32    averageFarEndInterarrivalJitter;	/**< AverageFarEndInterarrivalJitter */
    UINT32    averageRoundTripDelay;	/**< AverageRoundTripDelay */
} VoiceLineStatsObject;

/*! \brief _VoiceLineStatsObject is used internally to represent VoiceLineStatsObject */
typedef VoiceLineStatsObject _VoiceLineStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.
 *
 * MDMOID_VOICE_LINE_SETTING 557
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceLineSettingObject;

/*! \brief _VoiceLineSettingObject is used internally to represent VoiceLineSettingObject */
typedef VoiceLineSettingObject _VoiceLineSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.LineName.
 *
 * MDMOID_VOICE_LINE_NAME 558
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceLineNameObject;

/*! \brief _VoiceLineNameObject is used internally to represent VoiceLineNameObject */
typedef VoiceLineNameObject _VoiceLineNameObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.LineId.
 *
 * MDMOID_VOICE_LINE_DECT_LINE_ID 559
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
} VoiceLineDectLineIdObject;

/*! \brief _VoiceLineDectLineIdObject is used internally to represent VoiceLineDectLineIdObject */
typedef VoiceLineDectLineIdObject _VoiceLineDectLineIdObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.AttachedHandset.
 *
 * MDMOID_VOICE_LINE_ATTACHED_HANDSET 560
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
    UINT32    totalNumber;	/**< TotalNumber */
} VoiceLineAttachedHandsetObject;

/*! \brief _VoiceLineAttachedHandsetObject is used internally to represent VoiceLineAttachedHandsetObject */
typedef VoiceLineAttachedHandsetObject _VoiceLineAttachedHandsetObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.Melody.
 *
 * MDMOID_VOICE_LINE_MELODY 561
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
} VoiceLineMelodyObject;

/*! \brief _VoiceLineMelodyObject is used internally to represent VoiceLineMelodyObject */
typedef VoiceLineMelodyObject _VoiceLineMelodyObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.DialingPrefix.
 *
 * MDMOID_VOICE_LINE_DIALING_PREFIX 562
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
    UBOOL8    internal;	/**< Internal */
    UBOOL8    own;	/**< Own */
} VoiceLineDialingPrefixObject;

/*! \brief _VoiceLineDialingPrefixObject is used internally to represent VoiceLineDialingPrefixObject */
typedef VoiceLineDialingPrefixObject _VoiceLineDialingPrefixObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.Volumn.
 *
 * MDMOID_VOICE_LINE_VOLUMN 563
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
} VoiceLineVolumnObject;

/*! \brief _VoiceLineVolumnObject is used internally to represent VoiceLineVolumnObject */
typedef VoiceLineVolumnObject _VoiceLineVolumnObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.BlockedNumber.
 *
 * MDMOID_VOICE_LINE_BLOCKED_NUMBER 564
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
    UBOOL8    internal;	/**< Internal */
    UBOOL8    own;	/**< Own */
} VoiceLineBlockedNumberObject;

/*! \brief _VoiceLineBlockedNumberObject is used internally to represent VoiceLineBlockedNumberObject */
typedef VoiceLineBlockedNumberObject _VoiceLineBlockedNumberObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.MultiCallMode.
 *
 * MDMOID_VOICE_LINE_MULTI_CALL_MODE 565
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    element;	/**< Element */
} VoiceLineMultiCallModeObject;

/*! \brief _VoiceLineMultiCallModeObject is used internally to represent VoiceLineMultiCallModeObject */
typedef VoiceLineMultiCallModeObject _VoiceLineMultiCallModeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.IntrusionCall.
 *
 * MDMOID_VOICE_LINE_INTRUSION_CALL 566
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    element;	/**< Element */
} VoiceLineIntrusionCallObject;

/*! \brief _VoiceLineIntrusionCallObject is used internally to represent VoiceLineIntrusionCallObject */
typedef VoiceLineIntrusionCallObject _VoiceLineIntrusionCallObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.VoiceProfile.{i}.Line.{i}.X_BROADCOM_COM_DectLineSetting.CLIR.
 *
 * MDMOID_CLI_R 567
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceLineCLIRObject;

/*! \brief _VoiceLineCLIRObject is used internally to represent VoiceLineCLIRObject */
typedef VoiceLineCLIRObject _VoiceLineCLIRObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.PhyInterface.{i}.
 *
 * MDMOID_VOICE_PHY_INTF 568
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    phyPort;	/**< PhyPort */
    UINT32    interfaceID;	/**< InterfaceID */
    char *    description;	/**< Description */
} VoicePhyIntfObject;

/*! \brief _VoicePhyIntfObject is used internally to represent VoicePhyIntfObject */
typedef VoicePhyIntfObject _VoicePhyIntfObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.PhyInterface.{i}.Tests.
 *
 * MDMOID_VOICE_PHY_INTF_TESTS 569
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    testState;	/**< TestState */
    char *    testSelector;	/**< TestSelector */
    UBOOL8    phoneConnectivity;	/**< PhoneConnectivity */
} VoicePhyIntfTestsObject;

/*! \brief _VoicePhyIntfTestsObject is used internally to represent VoicePhyIntfTestsObject */
typedef VoicePhyIntfTestsObject _VoicePhyIntfTestsObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_PSTN.{i}.
 *
 * MDMOID_VOICE_PSTN 570
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    pstnPhyPort;	/**< PstnPhyPort */
    UINT32    pstnInterfaceID;	/**< PstnInterfaceID */
    char *    outgoingCallDialPlan;	/**< OutgoingCallDialPlan */
    char *    incomingCallRoutingMode;	/**< IncomingCallRoutingMode */
    char *    incomingCallRoutingDest;	/**< IncomingCallRoutingDest */
} VoicePstnObject;

/*! \brief _VoicePstnObject is used internally to represent VoicePstnObject */
typedef VoicePstnObject _VoicePstnObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Ntr.
 *
 * MDMOID_VOICE_NTR 571
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UBOOL8    autoModeEnable;	/**< AutoModeEnable */
    char *    manualOffset;	/**< ManualOffset */
    char *    manualPpm;	/**< ManualPpm */
    SINT32    manualSteps;	/**< ManualSteps */
    UBOOL8    debugEnable;	/**< DebugEnable */
    char *    pcmMipsTallyCurrent;	/**< PcmMipsTallyCurrent */
    char *    pcmMipsTallyPrevious;	/**< PcmMipsTallyPrevious */
    char *    pcmNtrTallyCurrent;	/**< PcmNtrTallyCurrent */
    char *    pcmNtrTallyPrevious;	/**< PcmNtrTallyPrevious */
    char *    dslMipsTallyCurrent;	/**< DslMipsTallyCurrent */
    char *    dslMipsTallyPrevious;	/**< DslMipsTallyPrevious */
    char *    dslNtrTallyCurrent;	/**< DslNtrTallyCurrent */
    char *    dslNtrTallyPrevious;	/**< DslNtrTallyPrevious */
    char *    sampleRate;	/**< SampleRate */
    char *    pllBandwidth;	/**< PllBandwidth */
    char *    dampingFactor;	/**< DampingFactor */
} VoiceNtrObject;

/*! \brief _VoiceNtrObject is used internally to represent VoiceNtrObject */
typedef VoiceNtrObject _VoiceNtrObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.X_BROADCOM_COM_Ntr.History.{i}.
 *
 * MDMOID_VOICE_NTR_HISTORY 572
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    autoSteps;	/**< AutoSteps */
    char *    autoOffset;	/**< AutoOffset */
    char *    autoPpm;	/**< AutoPpm */
    SINT32    autoPhaseError;	/**< AutoPhaseError */
} VoiceNtrHistoryObject;

/*! \brief _VoiceNtrHistoryObject is used internally to represent VoiceNtrHistoryObject */
typedef VoiceNtrHistoryObject _VoiceNtrHistoryObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.
 *
 * MDMOID_VOICE_DECT_SYSTEM_SETTING 573
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    X_BROADCOM_COM_LinkDate;	/**< X_BROADCOM_COM_LinkDate */
    UINT32    X_BROADCOM_COM_Type;	/**< X_BROADCOM_COM_Type */
    char *    X_BROADCOM_COM_DectId;	/**< X_BROADCOM_COM_DectId */
    UINT32    X_BROADCOM_COM_MANIC;	/**< X_BROADCOM_COM_MANIC */
    UINT32    X_BROADCOM_COM_MODIC;	/**< X_BROADCOM_COM_MODIC */
    UINT32    numberOfHandsets;	/**< NumberOfHandsets */
    UINT32    X_BROADCOM_COM_MaxNumberOfHandsets;	/**< X_BROADCOM_COM_MaxNumberOfHandsets */
    UBOOL8    waitingSubscription;	/**< WaitingSubscription */
    UBOOL8    X_BROADCOM_COM_ServiceEnabled;	/**< X_BROADCOM_COM_ServiceEnabled */
    char *    X_BROADCOM_COM_AccessCode;	/**< X_BROADCOM_COM_AccessCode */
} VoiceDectSystemSettingObject;

/*! \brief _VoiceDectSystemSettingObject is used internally to represent VoiceDectSystemSettingObject */
typedef VoiceDectSystemSettingObject _VoiceDectSystemSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.Handset.{i}.
 *
 * MDMOID_DECT_HANDSET 574
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    IPEI;	/**< IPEI */
    DATETIME  subscriptionTime;	/**< SubscriptionTime */
    UINT32    X_BROADCOM_COM_MANIC;	/**< X_BROADCOM_COM_MANIC */
    UINT32    X_BROADCOM_COM_MODIC;	/**< X_BROADCOM_COM_MODIC */
    char *    X_BROADCOM_COM_IPUI;	/**< X_BROADCOM_COM_IPUI */
    UINT32    X_BROADCOM_COM_ID;	/**< X_BROADCOM_COM_ID */
    char *    X_BROADCOM_COM_Name;	/**< X_BROADCOM_COM_Name */
    char *    X_BROADCOM_COM_Call_Interception;	/**< X_BROADCOM_COM_Call_Interception */
    UBOOL8    X_BROADCOM_COM_Delete;	/**< X_BROADCOM_COM_Delete */
} VoiceDECTHandsetObject;

/*! \brief _VoiceDECTHandsetObject is used internally to represent VoiceDECTHandsetObject */
typedef VoiceDECTHandsetObject _VoiceDECTHandsetObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.PINCode.
 *
 * MDMOID_VOICE_DECT_PIN_CODE 575
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceDectPinCodeObject;

/*! \brief _VoiceDectPinCodeObject is used internally to represent VoiceDectPinCodeObject */
typedef VoiceDectPinCodeObject _VoiceDectPinCodeObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.ClockMaster.
 *
 * MDMOID_VOICE_DECT_CLOCK_MASTER 576
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    element;	/**< Element */
} VoiceDectClockMasterObject;

/*! \brief _VoiceDectClockMasterObject is used internally to represent VoiceDectClockMasterObject */
typedef VoiceDectClockMasterObject _VoiceDectClockMasterObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.ResetBase.
 *
 * MDMOID_VOICE_DECT_RESET_BASE 577
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    element;	/**< Element */
} VoiceDectResetBaseObject;

/*! \brief _VoiceDectResetBaseObject is used internally to represent VoiceDectResetBaseObject */
typedef VoiceDectResetBaseObject _VoiceDectResetBaseObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.FirmwareVersion.
 *
 * MDMOID_VOICE_DECT_FIRMWARE_VERSION 578
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceDectFirmwareVersionObject;

/*! \brief _VoiceDectFirmwareVersionObject is used internally to represent VoiceDectFirmwareVersionObject */
typedef VoiceDectFirmwareVersionObject _VoiceDectFirmwareVersionObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.HardwareVersion.
 *
 * MDMOID_VOICE_DECT_HARDWARE_VERSION 579
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceDectHardwareVersionObject;

/*! \brief _VoiceDectHardwareVersionObject is used internally to represent VoiceDectHardwareVersionObject */
typedef VoiceDectHardwareVersionObject _VoiceDectHardwareVersionObject;



/*! \brief Obj struct for InternetGatewayDevice.Services.VoiceService.{i}.DECTInterface.EEPROMVersion.
 *
 * MDMOID_EEPROM_VERSION 580
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    element;	/**< Element */
} VoiceDectEEPROMVersionObject;

/*! \brief _VoiceDectEEPROMVersionObject is used internally to represent VoiceDectEEPROMVersionObject */
typedef VoiceDectEEPROMVersionObject _VoiceDectEEPROMVersionObject;



/*! \brief Obj struct for InternetGatewayDevice.XMPP.
 *
 * MDMOID_DEV2_XMPP 1900
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    connectionNumberOfEntries;	/**< ConnectionNumberOfEntries */
} Dev2XmppObject;

/*! \brief _Dev2XmppObject is used internally to represent Dev2XmppObject */
typedef Dev2XmppObject _Dev2XmppObject;



/*! \brief Obj struct for InternetGatewayDevice.XMPP.Connection.{i}.
 *
 * MDMOID_DEV2_XMPP_CONN 1901
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    domain;	/**< Domain */
    char *    resource;	/**< Resource */
    char *    jabberID;	/**< JabberID */
    char *    status;	/**< Status */
    DATETIME  lastChangeDate;	/**< LastChangeDate */
#ifdef DMP_DEVICE2_XMPPADVANCED_1
    char *    serverConnectAlgorithm;	/**< ServerConnectAlgorithm */
#endif
#ifdef DMP_DEVICE2_XMPPADVANCED_1
    UBOOL8    useTLS;	/**< UseTLS */
#endif
#ifdef DMP_DEVICE2_XMPPADVANCED_1
    UBOOL8    TLSEstablished;	/**< TLSEstablished */
#endif
#ifdef DMP_DEVICE2_XMPPADVANCED_1
    UINT32    serverNumberOfEntries;	/**< ServerNumberOfEntries */
#endif
} Dev2XmppConnObject;

/*! \brief _Dev2XmppConnObject is used internally to represent Dev2XmppConnObject */
typedef Dev2XmppConnObject _Dev2XmppConnObject;



/*! \brief Obj struct for InternetGatewayDevice.XMPP.Connection.{i}.Server.{i}.
 *
 * MDMOID_DEV2_XMPP_CONN_SERVER 1902
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    UINT32    priority;	/**< Priority */
    SINT32    weight;	/**< Weight */
    char *    serverAddress;	/**< ServerAddress */
    UINT32    port;	/**< Port */
} Dev2XmppConnServerObject;

/*! \brief _Dev2XmppConnServerObject is used internally to represent Dev2XmppConnServerObject */
typedef Dev2XmppConnServerObject _Dev2XmppConnServerObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.
 *
 * MDMOID_SW_MODULES 1700
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    execEnvNumberOfEntries;	/**< ExecEnvNumberOfEntries */
    UINT32    deploymentUnitNumberOfEntries;	/**< DeploymentUnitNumberOfEntries */
    UINT32    executionUnitNumberOfEntries;	/**< ExecutionUnitNumberOfEntries */
} SwModulesObject;

/*! \brief _SwModulesObject is used internally to represent SwModulesObject */
typedef SwModulesObject _SwModulesObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.ExecEnv.{i}.
 *
 * MDMOID_EXEC_ENV 1701
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    UBOOL8    reset;	/**< Reset */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    char *    type;	/**< Type */
    UINT32    initialRunLevel;	/**< InitialRunLevel */
    SINT32    requestedRunLevel;	/**< RequestedRunLevel */
    SINT32    currentRunLevel;	/**< CurrentRunLevel */
    SINT32    initialExecutionUnitRunLevel;	/**< InitialExecutionUnitRunLevel */
    char *    vendor;	/**< Vendor */
    char *    version;	/**< Version */
    char *    parentExecEnv;	/**< ParentExecEnv */
    SINT32    allocatedDiskSpace;	/**< AllocatedDiskSpace */
    SINT32    availableDiskSpace;	/**< AvailableDiskSpace */
    SINT32    allocatedMemory;	/**< AllocatedMemory */
    SINT32    availableMemory;	/**< AvailableMemory */
    SINT32    X_BROADCOM_COM_MngrEid;	/**< X_BROADCOM_COM_MngrEid */
} ExecEnvObject;

/*! \brief _ExecEnvObject is used internally to represent ExecEnvObject */
typedef ExecEnvObject _ExecEnvObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.DeploymentUnit.{i}.
 *
 * MDMOID_DU 1702
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    UUID;	/**< UUID */
    char *    DUID;	/**< DUID */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    char *    status;	/**< Status */
    UBOOL8    resolved;	/**< Resolved */
    char *    URL;	/**< URL */
    char *    description;	/**< Description */
    char *    vendor;	/**< Vendor */
    char *    version;	/**< Version */
    char *    executionUnitList;	/**< ExecutionUnitList */
    char *    executionEnvref;	/**< ExecutionEnvref */
    DATETIME  X_BROADCOM_COM_startTime;	/**< X_BROADCOM_COM_startTime */
    DATETIME  X_BROADCOM_COM_completeTime;	/**< X_BROADCOM_COM_completeTime */
    SINT32    X_BROADCOM_COM_bundleId;	/**< X_BROADCOM_COM_bundleId */
} DUObject;

/*! \brief _DUObject is used internally to represent DUObject */
typedef DUObject _DUObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.ExecutionUnit.{i}.
 *
 * MDMOID_EU 1703
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    EUID;	/**< EUID */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    char *    execEnvLabel;	/**< ExecEnvLabel */
    char *    status;	/**< Status */
    char *    requestedState;	/**< RequestedState */
    char *    executionFaultCode;	/**< ExecutionFaultCode */
    char *    executionFaultMessage;	/**< ExecutionFaultMessage */
    UBOOL8    autoStart;	/**< AutoStart */
    UINT32    runLevel;	/**< RunLevel */
    char *    vendor;	/**< Vendor */
    char *    version;	/**< Version */
    char *    description;	/**< Description */
    SINT32    diskSpaceInUse;	/**< DiskSpaceInUse */
    SINT32    memoryInUse;	/**< MemoryInUse */
    char *    executionEnvRef;	/**< ExecutionEnvRef */
    SINT32    X_BROADCOM_COM_bundleId;	/**< X_BROADCOM_COM_bundleId */
} EUObject;

/*! \brief _EUObject is used internally to represent EUObject */
typedef EUObject _EUObject;



/*! \brief Obj struct for InternetGatewayDevice.SoftwareModules.ExecutionUnit.{i}.Extensions.
 *
 * MDMOID_EXTENSIONS 1704
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} ExtensionsObject;

/*! \brief _ExtensionsObject is used internally to represent ExtensionsObject */
typedef ExtensionsObject _ExtensionsObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SnmpCfg.
 *
 * MDMOID_SNMP_CFG 3181
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    ROCommunity;	/**< ROCommunity */
    char *    RWCommunity;	/**< RWCommunity */
    char *    sysName;	/**< SysName */
    char *    sysLocation;	/**< SysLocation */
    char *    sysContact;	/**< SysContact */
    char *    trapIPAddress;	/**< TrapIPAddress */
} SnmpCfgObject;

/*! \brief _SnmpCfgObject is used internally to represent SnmpCfgObject */
typedef SnmpCfgObject _SnmpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SecDmzHostCfg.
 *
 * MDMOID_SEC_DMZ_HOST_CFG 3000
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
} SecDmzHostCfgObject;

/*! \brief _SecDmzHostCfgObject is used internally to represent SecDmzHostCfgObject */
typedef SecDmzHostCfgObject _SecDmzHostCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_AccessTimeRestriction.{i}.
 *
 * MDMOID_ACCESS_TIME_RESTRICTION 3001
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    username;	/**< Username */
    char *    startTime;	/**< StartTime */
    char *    endTime;	/**< EndTime */
    char *    days;	/**< Days */
    char *    MACAddress;	/**< MACAddress */
} AccessTimeRestrictionObject;

/*! \brief _AccessTimeRestrictionObject is used internally to represent AccessTimeRestrictionObject */
typedef AccessTimeRestrictionObject _AccessTimeRestrictionObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_UrlFilterCfg.
 *
 * MDMOID_URL_FILTER_CFG 3002
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    excludeMode;	/**< ExcludeMode */
} UrlFilterCfgObject;

/*! \brief _UrlFilterCfgObject is used internally to represent UrlFilterCfgObject */
typedef UrlFilterCfgObject _UrlFilterCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_UrlFilterCfg.X_BROADCOM_COM_UrlFilterListCfgObj.{i}.
 *
 * MDMOID_URL_FILTER_LIST 3003
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    urlAddress;	/**< UrlAddress */
    UINT32    portNumber;	/**< PortNumber */
} UrlFilterListObject;

/*! \brief _UrlFilterListObject is used internally to represent UrlFilterListObject */
typedef UrlFilterListObject _UrlFilterListObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_DDnsCfg.{i}.
 *
 * MDMOID_D_DNS_CFG 3004
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    fullyQualifiedDomainName;	/**< FullyQualifiedDomainName */
    char *    userName;	/**< UserName */
    char *    password;	/**< Password */
    char *    ifName;	/**< IfName */
    char *    providerName;	/**< ProviderName */
} DDnsCfgObject;

/*! \brief _DDnsCfgObject is used internally to represent DDnsCfgObject */
typedef DDnsCfgObject _DDnsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPPCfg.
 *
 * MDMOID_IPP_CFG 3005
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    make;	/**< Make */
    char *    device;	/**< Device */
    char *    name;	/**< Name */
} IppCfgObject;

/*! \brief _IppCfgObject is used internally to represent IppCfgObject */
typedef IppCfgObject _IppCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_DLNA.
 *
 * MDMOID_DLNA 3190
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} DlnaObject;

/*! \brief _DlnaObject is used internally to represent DlnaObject */
typedef DlnaObject _DlnaObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_DLNA.DmsCfg.
 *
 * MDMOID_DMS_CFG 3191
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    mediaPath;	/**< MediaPath */
    UINT32    brKey;	/**< BrKey */
} DmsCfgObject;

/*! \brief _DmsCfgObject is used internally to represent DmsCfgObject */
typedef DmsCfgObject _DmsCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_DebugPortMirroringCfg.{i}.
 *
 * MDMOID_WAN_DEBUG_PORT_MIRRORING_CFG 3006
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    monitorInterface;	/**< MonitorInterface */
    char *    mirrorInterface;	/**< MirrorInterface */
    UBOOL8    direction;	/**< Direction */
    UBOOL8    status;	/**< Status */
#ifdef DMP_X_ITU_ORG_GPON_1
    HEXBINARY  gemPortMaskArray;	/**< GemPortMaskArray */
#endif
} WanDebugPortMirroringCfgObject;

/*! \brief _WanDebugPortMirroringCfgObject is used internally to represent WanDebugPortMirroringCfgObject */
typedef WanDebugPortMirroringCfgObject _WanDebugPortMirroringCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPSecCfg.{i}.
 *
 * MDMOID_IP_SEC_CFG 3210
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    entryID;	/**< EntryID */
    UBOOL8    enable;	/**< Enable */
    char *    connName;	/**< ConnName */
    char *    tunMode;	/**< TunMode */
    char *    ipVer;	/**< IpVer */
    char *    localGwIf;	/**< LocalGwIf */
    char *    remoteGWAddress;	/**< RemoteGWAddress */
    char *    localRangeLo;	/**< LocalRangeLo */
    char *    localRangeHi;	/**< LocalRangeHi */
    char *    localIPMode;	/**< LocalIPMode */
    char *    localIPAddress;	/**< LocalIPAddress */
    char *    localMask;	/**< LocalMask */
    char *    remoteRangeLo;	/**< RemoteRangeLo */
    char *    remoteRangeHi;	/**< RemoteRangeHi */
    char *    remoteIPMode;	/**< RemoteIPMode */
    char *    remoteIPAddress;	/**< RemoteIPAddress */
    char *    remoteMask;	/**< RemoteMask */
    char *    keyExM;	/**< KeyExM */
    char *    authM;	/**< AuthM */
    char *    PSK;	/**< PSK */
    char *    certificateName;	/**< CertificateName */
    char *    perfectFSEn;	/**< PerfectFSEn */
    char *    manualEncryptionAlgo;	/**< ManualEncryptionAlgo */
    char *    manualEncryptionKey;	/**< ManualEncryptionKey */
    char *    manualAuthAlgo;	/**< ManualAuthAlgo */
    char *    manualAthKey;	/**< ManualAthKey */
    char *    SPI;	/**< SPI */
    char *    ph1Mode;	/**< Ph1Mode */
    char *    ph1EncryptionAlo;	/**< Ph1EncryptionAlo */
    char *    ph1IntegrityAlgo;	/**< Ph1IntegrityAlgo */
    char *    ph1DHGroup;	/**< Ph1DHGroup */
    UINT32    ph1KeyTime;	/**< Ph1KeyTime */
    char *    ph2Mode;	/**< Ph2Mode */
    char *    ph2EncryptionAlo;	/**< Ph2EncryptionAlo */
    char *    ph2IntegrityAlgo;	/**< Ph2IntegrityAlgo */
    char *    ph2DHGroup;	/**< Ph2DHGroup */
    UINT32    ph2KeyTime;	/**< Ph2KeyTime */
} IPSecCfgObject;

/*! \brief _IPSecCfgObject is used internally to represent IPSecCfgObject */
typedef IPSecCfgObject _IPSecCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_CertificateCfg.{i}.
 *
 * MDMOID_CERTIFICATE_CFG 3200
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    subject;	/**< Subject */
    char *    type;	/**< Type */
    char *    password;	/**< Password */
    char *    content;	/**< Content */
    char *    privKey;	/**< PrivKey */
    char *    reqPub;	/**< ReqPub */
    UINT32    refCount;	/**< RefCount */
} CertificateCfgObject;

/*! \brief _CertificateCfgObject is used internally to represent CertificateCfgObject */
typedef CertificateCfgObject _CertificateCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_WapiCertificate.
 *
 * MDMOID_WAPI_CERTIFICATE 3201
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} WapiCertificateObject;

/*! \brief _WapiCertificateObject is used internally to represent WapiCertificateObject */
typedef WapiCertificateObject _WapiCertificateObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_WapiCertificate.WapiAsCertificate.
 *
 * MDMOID_WAPI_AS_CERTIFICATE 3202
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    certificateFlag;	/**< CertificateFlag */
    SINT32    certificateLength;	/**< CertificateLength */
    char *    certificateContent;	/**< CertificateContent */
    UINT32    privateKeyFlag;	/**< PrivateKeyFlag */
    SINT32    privateKeyLength;	/**< PrivateKeyLength */
    char *    privateKeyContent;	/**< PrivateKeyContent */
} WapiAsCertificateObject;

/*! \brief _WapiAsCertificateObject is used internally to represent WapiAsCertificateObject */
typedef WapiAsCertificateObject _WapiAsCertificateObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_WapiCertificate.WapiIssuedCertificate.
 *
 * MDMOID_WAPI_ISSUED_CERTIFICATE 3203
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    asEnabled;	/**< AsEnabled */
    UINT32    lastUpdated;	/**< LastUpdated */
    char *    issuedList;	/**< IssuedList */
    char *    revokedList;	/**< RevokedList */
} WapiIssuedCertificateObject;

/*! \brief _WapiIssuedCertificateObject is used internally to represent WapiIssuedCertificateObject */
typedef WapiIssuedCertificateObject _WapiIssuedCertificateObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_NetworkConfig.
 *
 * MDMOID_NETWORK_CONFIG 3007
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    DNSIfName;	/**< DNSIfName */
    char *    DNSServers;	/**< DNSServers */
    char *    activeDNSServers;	/**< ActiveDNSServers */
    UBOOL8    enableAdvancedDMZ;	/**< EnableAdvancedDMZ */
} NetworkConfigObject;

/*! \brief _NetworkConfigObject is used internally to represent NetworkConfigObject */
typedef NetworkConfigObject _NetworkConfigObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_InterfaceControl.
 *
 * MDMOID_INTERFACE_CONTROL 3008
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ifName;	/**< IfName */
    UBOOL8    moveToWANSide;	/**< MoveToWANSide */
    UBOOL8    moveToLANSide;	/**< MoveToLANSide */
} InterfaceControlObject;

/*! \brief _InterfaceControlObject is used internally to represent InterfaceControlObject */
typedef InterfaceControlObject _InterfaceControlObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetOam.
 *
 * MDMOID_ETHERNET_OAM 3009
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} EthernetOamObject;

/*! \brief _EthernetOamObject is used internally to represent EthernetOamObject */
typedef EthernetOamObject _EthernetOamObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetOam.Ieee8023ahCfg.
 *
 * MDMOID_IEEE8023AH_CFG 3010
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enabled;	/**< Enabled */
    char *    ifName;	/**< IfName */
    UINT32    oamId;	/**< OamId */
    UBOOL8    autoEventEnabled;	/**< AutoEventEnabled */
    UBOOL8    variableRetrievalEnabled;	/**< VariableRetrievalEnabled */
    UBOOL8    linkEventsEnabled;	/**< LinkEventsEnabled */
    UBOOL8    remoteLoopbackEnabled;	/**< RemoteLoopbackEnabled */
    UBOOL8    activeModeEnabled;	/**< ActiveModeEnabled */
    UINT32    tmsctl3ahPid;	/**< Tmsctl3ahPid */
} Ieee8023ahCfgObject;

/*! \brief _Ieee8023ahCfgObject is used internally to represent Ieee8023ahCfgObject */
typedef Ieee8023ahCfgObject _Ieee8023ahCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetOam.Ieee8021agCfg.
 *
 * MDMOID_IEEE8021AG_CFG 3011
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enabled;	/**< Enabled */
    UBOOL8    Y1731Enabled;	/**< Y1731Enabled */
    char *    mdId;	/**< MdId */
    UINT32    mdLevel;	/**< MdLevel */
    char *    maId;	/**< MaId */
    UINT32    ccmInterval;	/**< CcmInterval */
    UINT32    tmsctl1agPid;	/**< Tmsctl1agPid */
} Ieee8021agCfgObject;

/*! \brief _Ieee8021agCfgObject is used internally to represent Ieee8021agCfgObject */
typedef Ieee8021agCfgObject _Ieee8021agCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetOam.Ieee8021agCfg.LocalMep.{i}.
 *
 * MDMOID_LOCAL_MEP 3012
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    ifName;	/**< IfName */
    SINT32    mepId;	/**< MepId */
    SINT32    vlanId;	/**< VlanId */
    UBOOL8    ccmEnabled;	/**< CcmEnabled */
} LocalMepObject;

/*! \brief _LocalMepObject is used internally to represent LocalMepObject */
typedef LocalMepObject _LocalMepObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetOam.Ieee8021agCfg.RemoteMep.{i}.
 *
 * MDMOID_REMOTE_MEP 3013
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    mepId;	/**< MepId */
} RemoteMepObject;

/*! \brief _RemoteMepObject is used internally to represent RemoteMepObject */
typedef RemoteMepObject _RemoteMepObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetOam.Ieee8021agCfg.LoopbackDiagnostics.
 *
 * MDMOID_EOAM1AG_LOOPBACK_DIAG 3014
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    SINT32    localMepId;	/**< LocalMepId */
    char *    targetMacAddress;	/**< TargetMacAddress */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
} Eoam1agLoopbackDiagObject;

/*! \brief _Eoam1agLoopbackDiagObject is used internally to represent Eoam1agLoopbackDiagObject */
typedef Eoam1agLoopbackDiagObject _Eoam1agLoopbackDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_EthernetOam.Ieee8021agCfg.LinktraceDiagnostics.
 *
 * MDMOID_EOAM1AG_LINKTRACE_DIAG 3015
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    SINT32    localMepId;	/**< LocalMepId */
    char *    targetMacAddress;	/**< TargetMacAddress */
    SINT32    maxHopCount;	/**< MaxHopCount */
    char *    mepList;	/**< MepList */
} Eoam1agLinktraceDiagObject;

/*! \brief _Eoam1agLinktraceDiagObject is used internally to represent Eoam1agLinktraceDiagObject */
typedef Eoam1agLinktraceDiagObject _Eoam1agLinktraceDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_McastCfg.
 *
 * MDMOID_MCAST_CFG 3282
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    SINT32    mcastPrecedence;	/**< McastPrecedence */
    char *    mcastMaxGroupsPortList;	/**< McastMaxGroupsPortList */
    SINT32    mcastStrictWan;	/**< McastStrictWan */
#ifdef DMP_X_BROADCOM_COM_DCSP_MCAST_REMARK_1
    UBOOL8    mcastDscpRemarkEnable;	/**< McastDscpRemarkEnable */
#endif
#ifdef DMP_X_BROADCOM_COM_DCSP_MCAST_REMARK_1
    SINT32    mcastDscpRemarkVal;	/**< McastDscpRemarkVal */
#endif
    UBOOL8    mcastHostControl;	/**< McastHostControl */
    char *    mcastIgmpSnoopExceptions;	/**< McastIgmpSnoopExceptions */
    char *    mcastMldSnoopExceptions;	/**< McastMldSnoopExceptions */
} McastCfgObject;

/*! \brief _McastCfgObject is used internally to represent McastCfgObject */
typedef McastCfgObject _McastCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IGMPCfg.
 *
 * MDMOID_IGMP_CFG 3283
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    igmpVer;	/**< IgmpVer */
    UINT32    igmpQI;	/**< IgmpQI */
    UINT32    igmpQRI;	/**< IgmpQRI */
    UINT32    igmpLMQI;	/**< IgmpLMQI */
    UINT32    igmpRV;	/**< IgmpRV */
    UINT32    igmpMaxGroups;	/**< IgmpMaxGroups */
    UINT32    igmpMaxSources;	/**< IgmpMaxSources */
    UINT32    igmpMaxMembers;	/**< IgmpMaxMembers */
    UBOOL8    igmpFastLeaveEnable;	/**< IgmpFastLeaveEnable */
    UBOOL8    igmpLan2LanMulticastEnable;	/**< IgmpLan2LanMulticastEnable */
    UBOOL8    igmpJoinImmediate;	/**< IgmpJoinImmediate */
    char *    igmpBridgeIfNames;	/**< IgmpBridgeIfNames */
    char *    igmpMcastIfNames;	/**< IgmpMcastIfNames */
    char *    igmpProxyIfNames;	/**< IgmpProxyIfNames */
} IgmpCfgObject;

/*! \brief _IgmpCfgObject is used internally to represent IgmpCfgObject */
typedef IgmpCfgObject _IgmpCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_MLDCfg.
 *
 * MDMOID_MLD_CFG 3284
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    mldVer;	/**< MldVer */
    UINT32    mldQI;	/**< MldQI */
    UINT32    mldQRI;	/**< MldQRI */
    UINT32    mldLMQI;	/**< MldLMQI */
    UINT32    mldRV;	/**< MldRV */
    UINT32    mldMaxGroups;	/**< MldMaxGroups */
    UINT32    mldMaxSources;	/**< MldMaxSources */
    UINT32    mldMaxMembers;	/**< MldMaxMembers */
    UBOOL8    mldFastLeaveEnable;	/**< MldFastLeaveEnable */
    UBOOL8    mldLan2LanMulticastEnable;	/**< MldLan2LanMulticastEnable */
    char *    mldBridgeIfNames;	/**< MldBridgeIfNames */
    char *    mldProxyIfNames;	/**< MldProxyIfNames */
    char *    mldMcastIfNames;	/**< MldMcastIfNames */
} MldCfgObject;

/*! \brief _MldCfgObject is used internally to represent MldCfgObject */
typedef MldCfgObject _MldCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPTunnel.{i}.
 *
 * MDMOID_IP_TUNNEL 3016
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    activated;	/**< Activated */
    char *    tunnelName;	/**< TunnelName */
    SINT32    tunnelCounter;	/**< TunnelCounter */
    char *    mode;	/**< Mode */
    char *    associatedWanIfName;	/**< AssociatedWanIfName */
    char *    associatedLanIfName;	/**< AssociatedLanIfName */
} IPTunnelObject;

/*! \brief _IPTunnelObject is used internally to represent IPTunnelObject */
typedef IPTunnelObject _IPTunnelObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPTunnel.{i}.V4inV6Tunnel.{i}.
 *
 * MDMOID_IPV4IN_IPV6_TUNNEL 3017
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    connStatus;	/**< ConnStatus */
    char *    mechanism;	/**< Mechanism */
    UBOOL8    dynamic;	/**< Dynamic */
    char *    remoteIpv6Address;	/**< RemoteIpv6Address */
    char *    currentAftrName;	/**< CurrentAftrName */
} Ipv4inIpv6TunnelObject;

/*! \brief _Ipv4inIpv6TunnelObject is used internally to represent Ipv4inIpv6TunnelObject */
typedef Ipv4inIpv6TunnelObject _Ipv4inIpv6TunnelObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_IPTunnel.{i}.V6inV4Tunnel.{i}.
 *
 * MDMOID_IPV6IN_IPV4_TUNNEL 3018
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    connStatus;	/**< ConnStatus */
    char *    mechanism;	/**< Mechanism */
    UBOOL8    dynamic;	/**< Dynamic */
    SINT32    ipv4MaskLen;	/**< Ipv4MaskLen */
    char *    prefix;	/**< Prefix */
    char *    borderRelayAddress;	/**< BorderRelayAddress */
} Ipv6inIpv4TunnelObject;

/*! \brief _Ipv6inIpv4TunnelObject is used internally to represent Ipv6inIpv4TunnelObject */
typedef Ipv6inIpv4TunnelObject _Ipv6inIpv4TunnelObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_WlanNvram.
 *
 * MDMOID_WLAN_NVRAM 3019
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    wlanNvram;	/**< WlanNvram */
} WlanNvramObject;

/*! \brief _WlanNvramObject is used internally to represent WlanNvramObject */
typedef WlanNvramObject _WlanNvramObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_OpenVSwitchCfg.
 *
 * MDMOID_OPENVSWITCH_CFG 3810
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    OFControllerIPAddress;	/**< OFControllerIPAddress */
    UINT32    OFControllerPortNumber;	/**< OFControllerPortNumber */
    char *    ifNameList;	/**< IfNameList */
} OpenvswitchCfgObject;

/*! \brief _OpenvswitchCfgObject is used internally to represent OpenvswitchCfgObject */
typedef OpenvswitchCfgObject _OpenvswitchCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.Capabilities.
 *
 * MDMOID_CAPABILITIES 900
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} CapabilitiesObject;

/*! \brief _CapabilitiesObject is used internally to represent CapabilitiesObject */
typedef CapabilitiesObject _CapabilitiesObject;



/*! \brief Obj struct for InternetGatewayDevice.Capabilities.PerformanceDiagnostic.
 *
 * MDMOID_PERFORMANCE_DIAG 901
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_DOWNLOAD_1
    char *    downloadTransports;	/**< DownloadTransports */
#endif
#ifdef DMP_UPLOAD_1
    char *    uploadTransports;	/**< UploadTransports */
#endif
} PerformanceDiagObject;

/*! \brief _PerformanceDiagObject is used internally to represent PerformanceDiagObject */
typedef PerformanceDiagObject _PerformanceDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.DownloadDiagnostics.
 *
 * MDMOID_DL_DIAG 902
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    downloadURL;	/**< DownloadURL */
    UINT32    DSCP;	/**< DSCP */
    UINT32    ethernetPriority;	/**< EthernetPriority */
    DATETIME  ROMTime;	/**< ROMTime */
    DATETIME  BOMTime;	/**< BOMTime */
    DATETIME  EOMTime;	/**< EOMTime */
    UINT32    testBytesReceived;	/**< TestBytesReceived */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
#ifdef DMP_DOWNLOADTCP_1
    DATETIME  TCPOpenRequestTime;	/**< TCPOpenRequestTime */
#endif
#ifdef DMP_DOWNLOADTCP_1
    DATETIME  TCPOpenResponseTime;	/**< TCPOpenResponseTime */
#endif
} DlDiagObject;

/*! \brief _DlDiagObject is used internally to represent DlDiagObject */
typedef DlDiagObject _DlDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.UploadDiagnostics.
 *
 * MDMOID_UL_DIAG 903
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    uploadURL;	/**< UploadURL */
    UINT32    DSCP;	/**< DSCP */
    UINT32    testFileLength;	/**< TestFileLength */
    UINT32    ethernetPriority;	/**< EthernetPriority */
    DATETIME  ROMTime;	/**< ROMTime */
    DATETIME  BOMTime;	/**< BOMTime */
    DATETIME  EOMTime;	/**< EOMTime */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
#ifdef DMP_UPLOADTCP_1
    DATETIME  TCPOpenRequestTime;	/**< TCPOpenRequestTime */
#endif
#ifdef DMP_UPLOADTCP_1
    DATETIME  TCPOpenResponseTime;	/**< TCPOpenResponseTime */
#endif
} UlDiagObject;

/*! \brief _UlDiagObject is used internally to represent UlDiagObject */
typedef UlDiagObject _UlDiagObject;



/*! \brief Obj struct for InternetGatewayDevice.UDPEchoConfig.
 *
 * MDMOID_UDP_ECHO_CFG 904
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    interface;	/**< Interface */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    UINT32    UDPPort;	/**< UDPPort */
#ifdef DMP_UDPECHOPLUS_1
    UBOOL8    echoPlusEnabled;	/**< EchoPlusEnabled */
#endif
    UBOOL8    echoPlusSupported;	/**< EchoPlusSupported */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    packetsResponded;	/**< PacketsResponded */
#ifdef DMP_X_BROADCOM_COM_BASELINE_1
    UINT32    X_BROADCOM_COM_PacketsRespondedFail;	/**< X_BROADCOM_COM_PacketsRespondedFail */
#endif
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    bytesResponded;	/**< BytesResponded */
    DATETIME  timeFirstPacketReceived;	/**< TimeFirstPacketReceived */
    DATETIME  timeLastPacketReceived;	/**< TimeLastPacketReceived */
} UDPEchoCfgObject;

/*! \brief _UDPEchoCfgObject is used internally to represent UDPEchoCfgObject */
typedef UDPEchoCfgObject _UDPEchoCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.PeriodicStatistics.
 *
 * MDMOID_PERIODIC_STAT 920
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    minSampleInterval;	/**< MinSampleInterval */
    UINT32    maxReportSamples;	/**< MaxReportSamples */
    UINT32    sampleSetNumberOfEntries;	/**< SampleSetNumberOfEntries */
} PeriodicStatObject;

/*! \brief _PeriodicStatObject is used internally to represent PeriodicStatObject */
typedef PeriodicStatObject _PeriodicStatObject;



/*! \brief Obj struct for InternetGatewayDevice.PeriodicStatistics.SampleSet.{i}.
 *
 * MDMOID_SAMPLE_SET 921
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_PERIODICSTATSADV_1
    UBOOL8    enable;	/**< Enable */
#endif
#ifdef DMP_PERIODICSTATSADV_1
    char *    status;	/**< Status */
#endif
    char *    name;	/**< Name */
    UINT32    sampleInterval;	/**< SampleInterval */
    UINT32    reportSamples;	/**< ReportSamples */
#ifdef DMP_PERIODICSTATSADV_1
    UINT32    fetchSamples;	/**< FetchSamples */
#endif
#ifdef DMP_PERIODICSTATSADV_1
    UBOOL8    forceSample;	/**< ForceSample */
#endif
    DATETIME  reportStartTime;	/**< ReportStartTime */
    DATETIME  reportEndTime;	/**< ReportEndTime */
    char *    sampleSeconds;	/**< SampleSeconds */
    UINT32    parameterNumberOfEntries;	/**< ParameterNumberOfEntries */
} SampleSetObject;

/*! \brief _SampleSetObject is used internally to represent SampleSetObject */
typedef SampleSetObject _SampleSetObject;



/*! \brief Obj struct for InternetGatewayDevice.PeriodicStatistics.SampleSet.{i}.Parameter.{i}.
 *
 * MDMOID_SAMPLE_PARAMETER 922
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
#ifdef DMP_PERIODICSTATSADV_1
    UBOOL8    enable;	/**< Enable */
#endif
    char *    reference;	/**< Reference */
#ifdef DMP_PERIODICSTATSADV_1
    char *    sampleMode;	/**< SampleMode */
#endif
#ifdef DMP_PERIODICSTATSADV_1
    SINT32    lowThreshold;	/**< LowThreshold */
#endif
#ifdef DMP_PERIODICSTATSADV_1
    SINT32    highThreshold;	/**< HighThreshold */
#endif
    char *    sampleSeconds;	/**< SampleSeconds */
    char *    suspectData;	/**< SuspectData */
    char *    values;	/**< Values */
#ifdef DMP_PERIODICSTATSADV_1
    UINT32    failures;	/**< Failures */
#endif
} SampleParameterObject;

/*! \brief _SampleParameterObject is used internally to represent SampleParameterObject */
typedef SampleParameterObject _SampleParameterObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_XPON.
 *
 * MDMOID_XPON 2010
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    authenticationId;	/**< AuthenticationId */
    char *    authenticationPassword;	/**< AuthenticationPassword */
    UINT32    oamSelection;	/**< OamSelection */
    UINT32    imageCrc;	/**< ImageCrc */
    UINT32    imageCrcBeforeCommit;	/**< ImageCrcBeforeCommit */
    HEXBINARY  date;	/**< Date */
    UINT32    maxLinkNum;	/**< MaxLinkNum */
    char *    dpoeFileName;	/**< DpoeFileName */
    HEXBINARY  dpoeMfgTime;	/**< DpoeMfgTime */
    UINT32    eponSchMode;	/**< EponSchMode */
    UINT32    eponIdleTimeOffset;	/**< EponIdleTimeOffset */
    char *    extendedId;	/**< ExtendedId */
    UBOOL8    eponTxLaserPowerOff;	/**< EponTxLaserPowerOff */
    UINT32    maxRuleClauseNum;	/**< MaxRuleClauseNum */
    UINT32    maxRuleResultNum;	/**< MaxRuleResultNum */
    UINT32    maxRulesNum;	/**< MaxRulesNum */
    UBOOL8    failSafe;	/**< FailSafe */
    UINT32    cucCfgCnt;	/**< CucCfgCnt */
    UINT32    linkNum;	/**< LinkNum */
    UINT32    portNum;	/**< PortNum */
} XponObject;

/*! \brief _XponObject is used internally to represent XponObject */
typedef XponObject _XponObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_XPON.UpLink.{i}.
 *
 * MDMOID_UP_LINK 2011
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    queueNum;	/**< QueueNum */
} UpLinkObject;

/*! \brief _UpLinkObject is used internally to represent UpLinkObject */
typedef UpLinkObject _UpLinkObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_XPON.DownPort.{i}.
 *
 * MDMOID_DOWN_PORT 2012
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    queueNum;	/**< QueueNum */
} DownPortObject;

/*! \brief _DownPortObject is used internally to represent DownPortObject */
typedef DownPortObject _DownPortObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_XPON.ClockTransport.
 *
 * MDMOID_CLOCK_TRANSPORT 2013
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    pulseOutEnabled;	/**< PulseOutEnabled */
    UINT32    todOutMode;	/**< TodOutMode */
    SINT32    fiberRtt;	/**< FiberRtt */
    SINT32    timeAdjust;	/**< TimeAdjust */
    UINT32    period;	/**< halfPeriod */
} ClockTransportObject;

/*! \brief _ClockTransportObject is used internally to represent ClockTransportObject */
typedef ClockTransportObject _ClockTransportObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_XPON.RuleClauses.{i}.
 *
 * MDMOID_DEV2_RULE_CLAUSES 2014
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    port;	/**< Port */
    UINT32    ruleIndex;	/**< RuleIndex */
    UINT32    priority;	/**< Priority */
    UINT32    length;	/**< Length */
    char *    fieldCode;	/**< FieldCode */
    UINT32    instance;	/**< Instance */
    UINT32    msbMask;	/**< MsbMask */
    UINT32    lsbMask;	/**< LsbMask */
    char *    op;	/**< Op */
    UINT32    matchValLen;	/**< MatchValLen */
    HEXBINARY  matchVal;	/**< MatchVal */
} Dev2RuleClausesObject;

/*! \brief _Dev2RuleClausesObject is used internally to represent Dev2RuleClausesObject */
typedef Dev2RuleClausesObject _Dev2RuleClausesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_XPON.RuleResults.{i}.
 *
 * MDMOID_DEV2_RULE_RESULTS 2015
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    ruleIndex;	/**< RuleIndex */
    UINT32    length;	/**< Length */
    char *    resultCode;	/**< ResultCode */
    char *    destObjType;	/**< DestObjType */
    UINT32    destInst;	/**< DestInst */
    UINT32    destQueue;	/**< DestQueue */
    char *    fieldCode;	/**< FieldCode */
    UINT32    instance;	/**< Instance */
    HEXBINARY  resultVal;	/**< ResultVal */
} Dev2RuleResultsObject;

/*! \brief _Dev2RuleResultsObject is used internally to represent Dev2RuleResultsObject */
typedef Dev2RuleResultsObject _Dev2RuleResultsObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.
 *
 * MDMOID_ITU_T_ORG 2100
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} ItuTOrgObject;

/*! \brief _ItuTOrgObject is used internally to represent ItuTOrgObject */
typedef ItuTOrgObject _ItuTOrgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.
 *
 * MDMOID_G_984_4 2101
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} G_984_4Object;

/*! \brief _G_984_4Object is used internally to represent G_984_4Object */
typedef G_984_4Object _G_984_4Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MiscellaneousServices.
 *
 * MDMOID_MISCELLANEOUS_SERVICES 2102
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} MiscellaneousServicesObject;

/*! \brief _MiscellaneousServicesObject is used internally to represent MiscellaneousServicesObject */
typedef MiscellaneousServicesObject _MiscellaneousServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MiscellaneousServices.EnhancedSecurityControl.
 *
 * MDMOID_ESC 2103
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  OLTCryptoCapabilities;	/**< OLTCryptoCapabilities */
    HEXBINARY  OLTRandomChallengeTable;	/**< OLTRandomChallengeTable */
    HEXBINARY  OLTChallengeStatus;	/**< OLTChallengeStatus */
    HEXBINARY  ONUSelectedCryptoCapabilities;	/**< ONUSelectedCryptoCapabilities */
    HEXBINARY  ONURandomChallengeTable;	/**< ONURandomChallengeTable */
    HEXBINARY  ONUAuthenticationResultTable;	/**< ONUAuthenticationResultTable */
    HEXBINARY  OLTAuthenticationResultTable;	/**< OLTAuthenticationResultTable */
    HEXBINARY  OLTResultStatus;	/**< OLTResultStatus */
    HEXBINARY  ONUAuthenticationStatus;	/**< ONUAuthenticationStatus */
    HEXBINARY  masterSessionKeyName;	/**< MasterSessionKeyName */
    HEXBINARY  broadcastKeyTable;	/**< BroadcastKeyTable */
    UINT32    effectiveKeyLength;	/**< EffectiveKeyLength */
} ESCObject;

/*! \brief _ESCObject is used internally to represent ESCObject */
typedef ESCObject _ESCObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MiscellaneousServices.EnhancedSecurityControl.BroadcastKeyTable.{i}.
 *
 * MDMOID_BROADCAST_KEY_TABLE 2104
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  broadcastKey;	/**< BroadcastKey */
} BroadcastKeyTableObject;

/*! \brief _BroadcastKeyTableObject is used internally to represent BroadcastKeyTableObject */
typedef BroadcastKeyTableObject _BroadcastKeyTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.
 *
 * MDMOID_EQUIPMENT_MANAGEMENT 2105
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} EquipmentManagementObject;

/*! \brief _EquipmentManagementObject is used internally to represent EquipmentManagementObject */
typedef EquipmentManagementObject _EquipmentManagementObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.OntG.
 *
 * MDMOID_ONT_G 2106
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  vendorId;	/**< VendorId */
    HEXBINARY  version;	/**< Version */
    HEXBINARY  serialNumber;	/**< SerialNumber */
    UINT32    trafficManagementOption;	/**< TrafficManagementOption */
    UINT32    deprecated;	/**< Deprecated */
    UBOOL8    batteryBackup;	/**< BatteryBackup */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    onuSurvivalTime;	/**< OnuSurvivalTime */
    HEXBINARY  logicalOnuId;	/**< LogicalOnuId */
    HEXBINARY  logicalPassword;	/**< LogicalPassword */
    UINT32    credentialsStatus;	/**< CredentialsStatus */
    UINT32    extendedTCLayerOptions;	/**< ExtendedTCLayerOptions */
} OntGObject;

/*! \brief _OntGObject is used internally to represent OntGObject */
typedef OntGObject _OntGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.Ont2G.
 *
 * MDMOID_ONT2_G 2107
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  equipmentId;	/**< EquipmentId */
    UINT32    omccVersion;	/**< OmccVersion */
    UINT32    vendorProductCode;	/**< VendorProductCode */
    UINT32    securityCapability;	/**< SecurityCapability */
    UINT32    securityMode;	/**< SecurityMode */
    UINT32    totalPriorityQueueNumber;	/**< TotalPriorityQueueNumber */
    UINT32    totalTrafficSchedulerNumber;	/**< TotalTrafficSchedulerNumber */
    UINT32    deprecated;	/**< Deprecated */
    UINT32    totalGemPortIdNumber;	/**< TotalGemPortIdNumber */
    UINT32    sysUpTime;	/**< SysUpTime */
    UINT32    connectivityCapability;	/**< ConnectivityCapability */
    UINT32    currentConnectivityMode;	/**< CurrentConnectivityMode */
    UINT32    qosConfigFlexibiltiy;	/**< QosConfigFlexibiltiy */
} Ont2GObject;

/*! \brief _Ont2GObject is used internally to represent Ont2GObject */
typedef Ont2GObject _Ont2GObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.OntData.
 *
 * MDMOID_ONT_DATA 2108
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    mibDataSync;	/**< MibDataSync */
} OntDataObject;

/*! \brief _OntDataObject is used internally to represent OntDataObject */
typedef OntDataObject _OntDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.SoftwareImage.{i}.
 *
 * MDMOID_SOFTWARE_IMAGE 2109
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  version;	/**< Version */
    UBOOL8    isCommitted;	/**< IsCommitted */
    UBOOL8    isActive;	/**< IsActive */
    UBOOL8    isValid;	/**< IsValid */
} SoftwareImageObject;

/*! \brief _SoftwareImageObject is used internally to represent SoftwareImageObject */
typedef SoftwareImageObject _SoftwareImageObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.CardHolder.{i}.
 *
 * MDMOID_CARD_HOLDER 2110
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    actualPlugInUnitType;	/**< ActualPlugInUnitType */
    UINT32    expectedPlugInUnitType;	/**< ExpectedPlugInUnitType */
    UINT32    expectedPortCount;	/**< ExpectedPortCount */
    HEXBINARY  expectedEquipmentId;	/**< ExpectedEquipmentId */
    HEXBINARY  actualEquipmentId;	/**< ActualEquipmentId */
    UINT32    protectionProfilePointer;	/**< ProtectionProfilePointer */
    UINT32    invokeProtectionSwitch;	/**< InvokeProtectionSwitch */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
} CardHolderObject;

/*! \brief _CardHolderObject is used internally to represent CardHolderObject */
typedef CardHolderObject _CardHolderObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.CircuitPack.{i}.
 *
 * MDMOID_CIRCUIT_PACK 2111
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    type;	/**< Type */
    UINT32    numberOfPorts;	/**< NumberOfPorts */
    HEXBINARY  serialNumber;	/**< SerialNumber */
    HEXBINARY  version;	/**< Version */
    HEXBINARY  vendorId;	/**< VendorId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    bridgedIpInd;	/**< BridgedIpInd */
    HEXBINARY  equipmentId;	/**< EquipmentId */
    UINT32    cardConfiguration;	/**< CardConfiguration */
    UINT32    totalTcontBufferNumber;	/**< TotalTcontBufferNumber */
    UINT32    totalPriorityQueueNumber;	/**< TotalPriorityQueueNumber */
    UINT32    totalTrafficSchedulerNumber;	/**< TotalTrafficSchedulerNumber */
    UINT32    powerShedOverride;	/**< PowerShedOverride */
} CircuitPackObject;

/*! \brief _CircuitPackObject is used internally to represent CircuitPackObject */
typedef CircuitPackObject _CircuitPackObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.PowerShedding.
 *
 * MDMOID_POWER_SHEDDING 2112
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    restorePowerTimerResetInterval;	/**< RestorePowerTimerResetInterval */
    UINT32    dataClassSheddingInterval;	/**< DataClassSheddingInterval */
    UINT32    voiceClassSheddingInterval;	/**< VoiceClassSheddingInterval */
    UINT32    videoOverlayClassSheddingInterval;	/**< VideoOverlayClassSheddingInterval */
    UINT32    videoReturnClassSheddingInterval;	/**< VideoReturnClassSheddingInterval */
    UINT32    dslClassSheddingInterval;	/**< DslClassSheddingInterval */
    UINT32    atmClassSheddingInterval;	/**< AtmClassSheddingInterval */
    UINT32    cesClassSheddingInterval;	/**< CesClassSheddingInterval */
    UINT32    frameClassSheddingInterval;	/**< FrameClassSheddingInterval */
    UINT32    sonetClassSheddingInterval;	/**< SonetClassSheddingInterval */
    UINT32    sheddingStatus;	/**< SheddingStatus */
} PowerSheddingObject;

/*! \brief _PowerSheddingObject is used internally to represent PowerSheddingObject */
typedef PowerSheddingObject _PowerSheddingObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EquipmentManagement.PortMappingPackageG.{i}.
 *
 * MDMOID_PORT_MAPPING_PACKAGE_G 2113
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    maxPorts;	/**< MaxPorts */
    HEXBINARY  portList1;	/**< PortList1 */
    HEXBINARY  portList2;	/**< PortList2 */
    HEXBINARY  portList3;	/**< PortList3 */
    HEXBINARY  portList4;	/**< PortList4 */
    HEXBINARY  portList5;	/**< PortList5 */
    HEXBINARY  portList6;	/**< PortList6 */
    HEXBINARY  portList7;	/**< PortList7 */
    HEXBINARY  portList8;	/**< PortList8 */
} PortMappingPackageGObject;

/*! \brief _PortMappingPackageGObject is used internally to represent PortMappingPackageGObject */
typedef PortMappingPackageGObject _PortMappingPackageGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.
 *
 * MDMOID_ANI_MANAGEMENT 2114
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} AniManagementObject;

/*! \brief _AniManagementObject is used internally to represent AniManagementObject */
typedef AniManagementObject _AniManagementObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.AniG.{i}.
 *
 * MDMOID_ANI_G 2115
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UBOOL8    srIndication;	/**< SrIndication */
    UINT32    totalTcontNumber;	/**< TotalTcontNumber */
    UINT32    gemBlockLength;	/**< GemBlockLength */
    UINT32    piggybackDbaReporting;	/**< PiggybackDbaReporting */
    UINT32    wholeOnuDbaReporting;	/**< WholeOnuDbaReporting */
    UINT32    sfThreshold;	/**< SfThreshold */
    UINT32    sdThreshold;	/**< SdThreshold */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    SINT32    opticalSignalLevel;	/**< OpticalSignalLevel */
    UINT32    lowerOptivalThreshold;	/**< LowerOptivalThreshold */
    UINT32    upperOptivalThreshold;	/**< UpperOptivalThreshold */
    UINT32    ontResponseTime;	/**< OntResponseTime */
    SINT32    transmitOpticalLevel;	/**< TransmitOpticalLevel */
    UINT32    lowerTransmitPowerThreshold;	/**< LowerTransmitPowerThreshold */
    UINT32    upperTransmitPowerThreshold;	/**< UpperTransmitPowerThreshold */
} AniGObject;

/*! \brief _AniGObject is used internally to represent AniGObject */
typedef AniGObject _AniGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.TCont.{i}.
 *
 * MDMOID_T_CONT 2116
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    allocId;	/**< AllocId */
    UINT32    deprecated;	/**< Deprecated */
    UINT32    policy;	/**< Policy */
} TContObject;

/*! \brief _TContObject is used internally to represent TContObject */
typedef TContObject _TContObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GemPortNetworkCtp.{i}.
 *
 * MDMOID_GEM_PORT_NETWORK_CTP 2117
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    portIdValue;	/**< PortIdValue */
    UINT32    TContPointer;	/**< TContPointer */
    UINT32    direction;	/**< Direction */
    UINT32    upstreamTrafficManagementPointer;	/**< UpstreamTrafficManagementPointer */
    UINT32    upstreamTrafficDescriptorProfilePointer;	/**< UpstreamTrafficDescriptorProfilePointer */
    UINT32    uniCounter;	/**< UniCounter */
    UINT32    downstreamPriorityQueuePointer;	/**< DownstreamPriorityQueuePointer */
    UINT32    encryptionState;	/**< EncryptionState */
    UINT32    downstreamTrafficDescriptorProfilePointer;	/**< DownstreamTrafficDescriptorProfilePointer */
    UINT32    encryptionKeyRing;	/**< EncryptionKeyRing */
} GemPortNetworkCtpObject;

/*! \brief _GemPortNetworkCtpObject is used internally to represent GemPortNetworkCtpObject */
typedef GemPortNetworkCtpObject _GemPortNetworkCtpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GemInterworkingTp.{i}.
 *
 * MDMOID_GEM_INTERWORKING_TP 2118
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    gemPortNetworkCtpConnPointer;	/**< GemPortNetworkCtpConnPointer */
    UINT32    interworkingOption;	/**< InterworkingOption */
    UINT32    serviceProfilePointer;	/**< ServiceProfilePointer */
    UINT32    interworkingTermPointPointer;	/**< InterworkingTermPointPointer */
    UINT32    pptpCounter;	/**< PptpCounter */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    galProfilePointer;	/**< GalProfilePointer */
    UINT32    galLoopbackConfiguration;	/**< GalLoopbackConfiguration */
} GemInterworkingTpObject;

/*! \brief _GemInterworkingTpObject is used internally to represent GemInterworkingTpObject */
typedef GemInterworkingTpObject _GemInterworkingTpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.MulticastGemInterworkingTp.{i}.
 *
 * MDMOID_MULTICAST_GEM_INTERWORKING_TP 2119
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    gemPortNetworkCtpConnPointer;	/**< GemPortNetworkCtpConnPointer */
    UINT32    interworkingOption;	/**< InterworkingOption */
    UINT32    serviceProfilePointer;	/**< ServiceProfilePointer */
    UINT32    interworkingTermPointPointer;	/**< InterworkingTermPointPointer */
    UINT32    pptpCounter;	/**< PptpCounter */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    galProfilePointer;	/**< GalProfilePointer */
    UINT32    galLoopbackConfiguration;	/**< GalLoopbackConfiguration */
    HEXBINARY  multicastAddressField;	/**< MulticastAddressField */
} MulticastGemInterworkingTpObject;

/*! \brief _MulticastGemInterworkingTpObject is used internally to represent MulticastGemInterworkingTpObject */
typedef MulticastGemInterworkingTpObject _MulticastGemInterworkingTpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.MulticastGemInterworkingTp.{i}.MulticastAddressTable.{i}.
 *
 * MDMOID_GEM_INTERWORKING_TP_MULTICAST_ADDRESS_TABLE 2120
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  multicastAddressEntry;	/**< MulticastAddressEntry */
} GemInterworkingTpMulticastAddressTableObject;

/*! \brief _GemInterworkingTpMulticastAddressTableObject is used internally to represent GemInterworkingTpMulticastAddressTableObject */
typedef GemInterworkingTpMulticastAddressTableObject _GemInterworkingTpMulticastAddressTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GemPortPmHistoryData.{i}.
 *
 * MDMOID_GEM_PORT_PM_HISTORY_DATA 2121
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    transmittedGEMFrames;	/**< TransmittedGEMFrames */
    UINT32    receivedGEMFrames;	/**< ReceivedGEMFrames */
    UINT64    receivedPayloadBytes;	/**< ReceivedPayloadBytes */
    UINT64    transmittedPayloadBytes;	/**< TransmittedPayloadBytes */
    UINT32    encryptionKeyErrors;	/**< EncryptionKeyErrors */
} GemPortPmHistoryDataObject;

/*! \brief _GemPortPmHistoryDataObject is used internally to represent GemPortPmHistoryDataObject */
typedef GemPortPmHistoryDataObject _GemPortPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GalEthernetProfile.{i}.
 *
 * MDMOID_GAL_ETHERNET_PROFILE 2122
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    maximumGemPayloadSize;	/**< MaximumGemPayloadSize */
} GalEthernetProfileObject;

/*! \brief _GalEthernetProfileObject is used internally to represent GalEthernetProfileObject */
typedef GalEthernetProfileObject _GalEthernetProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.GalEthernetPmHistoryData.{i}.
 *
 * MDMOID_GAL_ETHERNET_PM_HISTORY_DATA 2123
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    discardedFrames;	/**< DiscardedFrames */
} GalEthernetPmHistoryDataObject;

/*! \brief _GalEthernetPmHistoryDataObject is used internally to represent GalEthernetPmHistoryDataObject */
typedef GalEthernetPmHistoryDataObject _GalEthernetPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.AniManagement.FecPmHistoryData.{i}.
 *
 * MDMOID_FEC_PM_HISTORY_DATA 2124
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    correctedBytes;	/**< CorrectedBytes */
    UINT32    correctedCodeWords;	/**< CorrectedCodeWords */
    UINT32    uncorrectedCodeWords;	/**< UncorrectedCodeWords */
    UINT32    totalCodeWords;	/**< TotalCodeWords */
    UINT32    fecSeconds;	/**< FecSeconds */
} FecPmHistoryDataObject;

/*! \brief _FecPmHistoryDataObject is used internally to represent FecPmHistoryDataObject */
typedef FecPmHistoryDataObject _FecPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.
 *
 * MDMOID_LAYER2_DATA_SERVICES 2125
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Layer2DataServicesObject;

/*! \brief _Layer2DataServicesObject is used internally to represent Layer2DataServicesObject */
typedef Layer2DataServicesObject _Layer2DataServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgeServiceProfile.{i}.
 *
 * MDMOID_MAC_BRIDGE_SERVICE_PROFILE 2126
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UBOOL8    spanningTree;	/**< SpanningTree */
    UBOOL8    learning;	/**< Learning */
    UBOOL8    portBridging;	/**< PortBridging */
    UINT32    priority;	/**< Priority */
    UINT32    maxAge;	/**< MaxAge */
    UINT32    helloTime;	/**< HelloTime */
    UINT32    forwardDelay;	/**< ForwardDelay */
    UBOOL8    unknownMacAddressDiscard;	/**< UnknownMacAddressDiscard */
    UINT32    macLearningDepth;	/**< MacLearningDepth */
    UINT32    dynamicFilteringAgeingTime;	/**< DynamicFilteringAgeingTime */
} MacBridgeServiceProfileObject;

/*! \brief _MacBridgeServiceProfileObject is used internally to represent MacBridgeServiceProfileObject */
typedef MacBridgeServiceProfileObject _MacBridgeServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.X_BROADCOM_COM_MacBridgeServiceProfile.{i}.
 *
 * MDMOID_BC_MAC_BRIDGE_SERVICE_PROFILE 2127
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    char *    bridgeName;	/**< BridgeName */
} BCM_MacBridgeServiceProfileObject;

/*! \brief _BCM_MacBridgeServiceProfileObject is used internally to represent BCM_MacBridgeServiceProfileObject */
typedef BCM_MacBridgeServiceProfileObject _BCM_MacBridgeServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgeConfigData.{i}.
 *
 * MDMOID_MAC_BRIDGE_CONFIG_DATA 2128
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  macAddress;	/**< MacAddress */
    UINT32    priority;	/**< Priority */
    HEXBINARY  designatedRoot;	/**< DesignatedRoot */
    UINT32    rootPathCost;	/**< RootPathCost */
    UINT32    portCount;	/**< PortCount */
    UINT32    rootPortNum;	/**< RootPortNum */
    UINT32    helloTime;	/**< HelloTime */
    UINT32    forwardDelay;	/**< ForwardDelay */
} MacBridgeConfigDataObject;

/*! \brief _MacBridgeConfigDataObject is used internally to represent MacBridgeConfigDataObject */
typedef MacBridgeConfigDataObject _MacBridgeConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePmHistoryData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PM_HISTORY_DATA 2129
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    learningEntryDiscardCounter;	/**< LearningEntryDiscardCounter */
} MacBridgePmHistoryDataObject;

/*! \brief _MacBridgePmHistoryDataObject is used internally to represent MacBridgePmHistoryDataObject */
typedef MacBridgePmHistoryDataObject _MacBridgePmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortConfigData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_CONFIG_DATA 2130
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    bridgeId;	/**< BridgeId */
    UINT32    portNum;	/**< PortNum */
    UINT32    tpType;	/**< TpType */
    UINT32    tpPointer;	/**< TpPointer */
    UINT32    priority;	/**< Priority */
    UINT32    pathCost;	/**< PathCost */
    UBOOL8    spanningTree;	/**< SpanningTree */
    UINT32    deprecated1;	/**< Deprecated1 */
    UINT32    deprecated2;	/**< Deprecated2 */
    HEXBINARY  macAddress;	/**< MacAddress */
    UINT32    outTdPointer;	/**< OutTdPointer */
    UINT32    inTdPointer;	/**< InTdPointer */
    UINT32    macLearningDepth;	/**< MacLearningDepth */
} MacBridgePortConfigDataObject;

/*! \brief _MacBridgePortConfigDataObject is used internally to represent MacBridgePortConfigDataObject */
typedef MacBridgePortConfigDataObject _MacBridgePortConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortDesignationData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_DESIGNATION_DATA 2131
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  designatedBridgeRootCostPort;	/**< DesignatedBridgeRootCostPort */
    UINT32    portState;	/**< PortState */
} MacBridgePortDesignationDataObject;

/*! \brief _MacBridgePortDesignationDataObject is used internally to represent MacBridgePortDesignationDataObject */
typedef MacBridgePortDesignationDataObject _MacBridgePortDesignationDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortFilterTableData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_FILTER_TABLE_DATA 2132
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  macFilterTable;	/**< MacFilterTable */
} MacBridgePortFilterTableDataObject;

/*! \brief _MacBridgePortFilterTableDataObject is used internally to represent MacBridgePortFilterTableDataObject */
typedef MacBridgePortFilterTableDataObject _MacBridgePortFilterTableDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortFilterTableData.{i}.MacFilterTable.{i}.
 *
 * MDMOID_MAC_FILTER_TABLE 2133
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  macFilterEntry;	/**< MacFilterEntry */
} MacFilterTableObject;

/*! \brief _MacFilterTableObject is used internally to represent MacFilterTableObject */
typedef MacFilterTableObject _MacFilterTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortFilterPreAssignTable.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_FILTER_PRE_ASSIGN_TABLE 2134
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    ipv4MulticastFilter;	/**< Ipv4MulticastFilter */
    UINT32    ipv6MulticastFilter;	/**< Ipv6MulticastFilter */
    UINT32    ipv4BroadcastFilter;	/**< Ipv4BroadcastFilter */
    UINT32    rarpFilter;	/**< RarpFilter */
    UINT32    ipxFilter;	/**< IpxFilter */
    UINT32    netBeuiFilter;	/**< NetBeuiFilter */
    UINT32    appleTalkFilter;	/**< AppleTalkFilter */
    UINT32    bridgeFilter;	/**< BridgeFilter */
    UINT32    arpFilter;	/**< ArpFilter */
    UINT32    pppoeFilter;	/**< PppoeFilter */
} MacBridgePortFilterPreAssignTableObject;

/*! \brief _MacBridgePortFilterPreAssignTableObject is used internally to represent MacBridgePortFilterPreAssignTableObject */
typedef MacBridgePortFilterPreAssignTableObject _MacBridgePortFilterPreAssignTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortBridgeTableData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_BRIDGE_TABLE_DATA 2135
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  bridgeTable;	/**< BridgeTable */
} MacBridgePortBridgeTableDataObject;

/*! \brief _MacBridgePortBridgeTableDataObject is used internally to represent MacBridgePortBridgeTableDataObject */
typedef MacBridgePortBridgeTableDataObject _MacBridgePortBridgeTableDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortBridgeTableData.{i}.BridgeTable.{i}.
 *
 * MDMOID_BRIDGE_TABLE 2136
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  bridgeEntry;	/**< BridgeEntry */
} BridgeTableObject;

/*! \brief _BridgeTableObject is used internally to represent BridgeTableObject */
typedef BridgeTableObject _BridgeTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MacBridgePortPmHistoryData.{i}.
 *
 * MDMOID_MAC_BRIDGE_PORT_PM_HISTORY_DATA 2137
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    forwardFrameCounter;	/**< ForwardFrameCounter */
    UINT32    delayDiscardCounter;	/**< DelayDiscardCounter */
    UINT32    mtuDiscardCounter;	/**< MtuDiscardCounter */
    UINT32    receiveFrameCounter;	/**< ReceiveFrameCounter */
    UINT32    receiveDiscardCounter;	/**< ReceiveDiscardCounter */
} MacBridgePortPmHistoryDataObject;

/*! \brief _MacBridgePortPmHistoryDataObject is used internally to represent MacBridgePortPmHistoryDataObject */
typedef MacBridgePortPmHistoryDataObject _MacBridgePortPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MapperServiceProfile.{i}.
 *
 * MDMOID_MAPPER_SERVICE_PROFILE 2138
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    tpPointer;	/**< TpPointer */
    UINT32    interworkTpPointerPriority0;	/**< InterworkTpPointerPriority0 */
    UINT32    interworkTpPointerPriority1;	/**< InterworkTpPointerPriority1 */
    UINT32    interworkTpPointerPriority2;	/**< InterworkTpPointerPriority2 */
    UINT32    interworkTpPointerPriority3;	/**< InterworkTpPointerPriority3 */
    UINT32    interworkTpPointerPriority4;	/**< InterworkTpPointerPriority4 */
    UINT32    interworkTpPointerPriority5;	/**< InterworkTpPointerPriority5 */
    UINT32    interworkTpPointerPriority6;	/**< InterworkTpPointerPriority6 */
    UINT32    interworkTpPointerPriority7;	/**< InterworkTpPointerPriority7 */
    UINT32    unmarkedFrameOption;	/**< UnmarkedFrameOption */
    HEXBINARY  dscpToPBitMapping;	/**< DscpToPBitMapping */
    UINT32    defaultPBitMarking;	/**< DefaultPBitMarking */
    UINT32    tpType;	/**< TpType */
} MapperServiceProfileObject;

/*! \brief _MapperServiceProfileObject is used internally to represent MapperServiceProfileObject */
typedef MapperServiceProfileObject _MapperServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.X_BROADCOM_COM_MapperServiceProfile.{i}.
 *
 * MDMOID_BC_MAPPER_SERVICE_PROFILE 2139
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    char *    bridgeName;	/**< BridgeName */
} BCM_MapperServiceProfileObject;

/*! \brief _BCM_MapperServiceProfileObject is used internally to represent BCM_MapperServiceProfileObject */
typedef BCM_MapperServiceProfileObject _BCM_MapperServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.VlanTaggingFilterData.{i}.
 *
 * MDMOID_VLAN_TAGGING_FILTER_DATA 2140
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  vlanFilterList;	/**< VlanFilterList */
    UINT32    forwardOperation;	/**< ForwardOperation */
    UINT32    numberOfEntries;	/**< NumberOfEntries */
} VlanTaggingFilterDataObject;

/*! \brief _VlanTaggingFilterDataObject is used internally to represent VlanTaggingFilterDataObject */
typedef VlanTaggingFilterDataObject _VlanTaggingFilterDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.VlanTaggingOperationConfigurationData.{i}.
 *
 * MDMOID_VLAN_TAGGING_OPERATION_CONFIGURATION_DATA 2141
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    upstreamVlanTaggingOperationMode;	/**< UpstreamVlanTaggingOperationMode */
    UINT32    upstreamVlanTagTciValue;	/**< UpstreamVlanTagTciValue */
    UINT32    downstreamVlanTaggingOperationMode;	/**< DownstreamVlanTaggingOperationMode */
    UINT32    associationType;	/**< AssociationType */
    UINT32    associatedManagedEntityPointer;	/**< AssociatedManagedEntityPointer */
} VlanTaggingOperationConfigurationDataObject;

/*! \brief _VlanTaggingOperationConfigurationDataObject is used internally to represent VlanTaggingOperationConfigurationDataObject */
typedef VlanTaggingOperationConfigurationDataObject _VlanTaggingOperationConfigurationDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.ExtendedVlanTaggingOperationConfigurationData.{i}.
 *
 * MDMOID_EXTENDED_VLAN_TAGGING_OPERATION_CONFIGURATION_DATA 2142
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    associationType;	/**< AssociationType */
    UINT32    receivedFrameVlanTaggingOperationTableMaxSize;	/**< ReceivedFrameVlanTaggingOperationTableMaxSize */
    UINT32    inputTpid;	/**< InputTpid */
    UINT32    outputTpid;	/**< OutputTpid */
    UINT32    downstreamMode;	/**< DownstreamMode */
    HEXBINARY  receivedFrameVlanTaggingOperationTable;	/**< ReceivedFrameVlanTaggingOperationTable */
    UINT32    associatedManagedEntityPointer;	/**< AssociatedManagedEntityPointer */
    HEXBINARY  dscpToPBitMapping;	/**< DscpToPBitMapping */
} ExtendedVlanTaggingOperationConfigurationDataObject;

/*! \brief _ExtendedVlanTaggingOperationConfigurationDataObject is used internally to represent ExtendedVlanTaggingOperationConfigurationDataObject */
typedef ExtendedVlanTaggingOperationConfigurationDataObject _ExtendedVlanTaggingOperationConfigurationDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.ExtendedVlanTaggingOperationConfigurationData.{i}.ReceivedFrameVlanTaggingOperationTable.{i}.
 *
 * MDMOID_RECEIVED_FRAME_VLAN_TAGGING_OPERATION_TABLE 2143
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  taggingRule;	/**< TaggingRule */
} ReceivedFrameVlanTaggingOperationTableObject;

/*! \brief _ReceivedFrameVlanTaggingOperationTableObject is used internally to represent ReceivedFrameVlanTaggingOperationTableObject */
typedef ReceivedFrameVlanTaggingOperationTableObject _ReceivedFrameVlanTaggingOperationTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastOperationsProfile.{i}.
 *
 * MDMOID_MULTICAST_OPERATIONS_PROFILE 2144
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    igmpVersion;	/**< IgmpVersion */
    UINT32    igmpFunction;	/**< IgmpFunction */
    UINT32    immediateLeave;	/**< ImmediateLeave */
    UINT32    upstreamIgmpTci;	/**< UpstreamIgmpTci */
    UINT32    upstreamIgmpTagControl;	/**< UpstreamIgmpTagControl */
    UINT32    upstreamIgmpRate;	/**< UpstreamIgmpRate */
    HEXBINARY  dynamicAccessControlListTable;	/**< DynamicAccessControlListTable */
    HEXBINARY  staticAccessControlListTable;	/**< StaticAccessControlListTable */
    HEXBINARY  lostGroupsListTable;	/**< LostGroupsListTable */
    UINT32    robustness;	/**< Robustness */
    UINT32    querierIpAddress;	/**< QuerierIpAddress */
    UINT32    queryInterval;	/**< QueryInterval */
    UINT32    queryMaxResponseTime;	/**< QueryMaxResponseTime */
    UINT32    lastMemberQueryInterval;	/**< LastMemberQueryInterval */
    UINT32    unauthorizedJoinRequestBehaviour;	/**< UnauthorizedJoinRequestBehaviour */
    HEXBINARY  downstreamIgmpTci;	/**< DownstreamIgmpTci */
} MulticastOperationsProfileObject;

/*! \brief _MulticastOperationsProfileObject is used internally to represent MulticastOperationsProfileObject */
typedef MulticastOperationsProfileObject _MulticastOperationsProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastOperationsProfile.{i}.DynamicAccessControlListTable.{i}.
 *
 * MDMOID_DYNAMIC_ACCESS_CONTROL_LIST_TABLE 2145
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  dynamicAccessControlEntry;	/**< DynamicAccessControlEntry */
} DynamicAccessControlListTableObject;

/*! \brief _DynamicAccessControlListTableObject is used internally to represent DynamicAccessControlListTableObject */
typedef DynamicAccessControlListTableObject _DynamicAccessControlListTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastOperationsProfile.{i}.StaticAccessControlListTable.{i}.
 *
 * MDMOID_STATIC_ACCESS_CONTROL_LIST_TABLE 2146
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  staticAccessControlEntry;	/**< StaticAccessControlEntry */
} StaticAccessControlListTableObject;

/*! \brief _StaticAccessControlListTableObject is used internally to represent StaticAccessControlListTableObject */
typedef StaticAccessControlListTableObject _StaticAccessControlListTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastOperationsProfile.{i}.LostGroupsListTable.{i}.
 *
 * MDMOID_LOST_GROUPS_LIST_TABLE 2147
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  lostGroupsListEntry;	/**< LostGroupsListEntry */
} LostGroupsListTableObject;

/*! \brief _LostGroupsListTableObject is used internally to represent LostGroupsListTableObject */
typedef LostGroupsListTableObject _LostGroupsListTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastSubscriberConfigInfo.{i}.
 *
 * MDMOID_MULTICAST_SUBSCRIBER_CONFIG_INFO 2148
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    meType;	/**< MeType */
    UINT32    multicastOperationsProfilePointer;	/**< MulticastOperationsProfilePointer */
    UINT32    maxSimultaneousGroups;	/**< MaxSimultaneousGroups */
    UINT32    maxMulticastBandwidth;	/**< MaxMulticastBandwidth */
    UINT32    bandwidthEnforcement;	/**< BandwidthEnforcement */
} MulticastSubscriberConfigInfoObject;

/*! \brief _MulticastSubscriberConfigInfoObject is used internally to represent MulticastSubscriberConfigInfoObject */
typedef MulticastSubscriberConfigInfoObject _MulticastSubscriberConfigInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastSubscriberMonitor.{i}.
 *
 * MDMOID_MULTICAST_SUBSCRIBER_MONITOR 2149
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    meType;	/**< MeType */
    UINT32    currentMulticastBandwidth;	/**< CurrentMulticastBandwidth */
    UINT32    joinMessagesCounter;	/**< JoinMessagesCounter */
    UINT32    bandwidthExceededCounter;	/**< BandwidthExceededCounter */
    HEXBINARY  activeGroupsListTable;	/**< ActiveGroupsListTable */
} MulticastSubscriberMonitorObject;

/*! \brief _MulticastSubscriberMonitorObject is used internally to represent MulticastSubscriberMonitorObject */
typedef MulticastSubscriberMonitorObject _MulticastSubscriberMonitorObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.MulticastSubscriberMonitor.{i}.ActiveGroupsListTable.{i}.
 *
 * MDMOID_ACTIVE_GROUPS_LIST_TABLE 2150
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  activeGroupsListEntry;	/**< ActiveGroupsListEntry */
} ActiveGroupsListTableObject;

/*! \brief _ActiveGroupsListTableObject is used internally to represent ActiveGroupsListTableObject */
typedef ActiveGroupsListTableObject _ActiveGroupsListTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.X_BROADCOM_COM_MulticastSubscriberMonitor.{i}.
 *
 * MDMOID_BC_MULTICAST_SUBSCRIBER_MONITOR 2151
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    objectId;	/**< ObjectId */
    UINT32    currentMulticastBandwidth;	/**< CurrentMulticastBandwidth */
    UINT32    joinMessagesCounter;	/**< JoinMessagesCounter */
    UINT32    bandwidthExceededCounter;	/**< BandwidthExceededCounter */
    UINT32    numberOfSubscribers;	/**< NumberOfSubscribers */
    UINT32    version;	/**< igmpVersion */
} BCM_MulticastSubscriberMonitorObject;

/*! \brief _BCM_MulticastSubscriberMonitorObject is used internally to represent BCM_MulticastSubscriberMonitorObject */
typedef BCM_MulticastSubscriberMonitorObject _BCM_MulticastSubscriberMonitorObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.X_BROADCOM_COM_MulticastSubscriberMonitor.{i}.MulticastSubscriber.{i}.
 *
 * MDMOID_MULTICAST_SUBSCRIBER 2152
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    tci;	/**< Tci */
    UINT32    sourceIpAddress;	/**< SourceIpAddress */
    UINT32    groupIpAddress;	/**< GroupIpAddress */
    UINT32    clientIpAddress;	/**< ClientIpAddress */
    UINT32    joinedTime;	/**< JoinedTime */
} MulticastSubscriberObject;

/*! \brief _MulticastSubscriberObject is used internally to represent MulticastSubscriberObject */
typedef MulticastSubscriberObject _MulticastSubscriberObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.UpstreamEthernetFramePmHistoryData.{i}.
 *
 * MDMOID_UPSTREAM_ETHERNET_FRAME_PM_HISTORY_DATA 2153
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    dropEvents;	/**< DropEvents */
    UINT32    octets;	/**< Octets */
    UINT32    packets;	/**< Packets */
    UINT32    broadcastPackets;	/**< BroadcastPackets */
    UINT32    multicastPackets;	/**< MulticastPackets */
    UINT32    crcErroredPackets;	/**< CrcErroredPackets */
    UINT32    undersizePackets;	/**< UndersizePackets */
    UINT32    oversizePackets;	/**< OversizePackets */
    UINT32    packets64Octets;	/**< Packets64Octets */
    UINT32    packets127Octets;	/**< Packets127Octets */
    UINT32    packets255Octets;	/**< Packets255Octets */
    UINT32    packets511Octets;	/**< Packets511Octets */
    UINT32    packets1023Octets;	/**< Packets1023Octets */
    UINT32    packets1518Octets;	/**< Packets1518Octets */
} UpstreamEthernetFramePmHistoryDataObject;

/*! \brief _UpstreamEthernetFramePmHistoryDataObject is used internally to represent UpstreamEthernetFramePmHistoryDataObject */
typedef UpstreamEthernetFramePmHistoryDataObject _UpstreamEthernetFramePmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.DownstreamEthernetFramePmHistoryData.{i}.
 *
 * MDMOID_DOWNSTREAM_ETHERNET_FRAME_PM_HISTORY_DATA 2154
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    dropEvents;	/**< DropEvents */
    UINT32    octets;	/**< Octets */
    UINT32    packets;	/**< Packets */
    UINT32    broadcastPackets;	/**< BroadcastPackets */
    UINT32    multicastPackets;	/**< MulticastPackets */
    UINT32    crcErroredPackets;	/**< CrcErroredPackets */
    UINT32    undersizePackets;	/**< UndersizePackets */
    UINT32    oversizePackets;	/**< OversizePackets */
    UINT32    packets64Octets;	/**< Packets64Octets */
    UINT32    packets127Octets;	/**< Packets127Octets */
    UINT32    packets255Octets;	/**< Packets255Octets */
    UINT32    packets511Octets;	/**< Packets511Octets */
    UINT32    packets1023Octets;	/**< Packets1023Octets */
    UINT32    packets1518Octets;	/**< Packets1518Octets */
} DownstreamEthernetFramePmHistoryDataObject;

/*! \brief _DownstreamEthernetFramePmHistoryDataObject is used internally to represent DownstreamEthernetFramePmHistoryDataObject */
typedef DownstreamEthernetFramePmHistoryDataObject _DownstreamEthernetFramePmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer2DataServices.EthernetFrameExtendedPM.{i}.
 *
 * MDMOID_ETHERNET_FRAME_EXTENDED_P_M 2155
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    HEXBINARY  controlBlock;	/**< ControlBlock */
    UINT32    dropEvents;	/**< DropEvents */
    UINT32    octets;	/**< Octets */
    UINT32    frames;	/**< Frames */
    UINT32    broadcastFrames;	/**< BroadcastFrames */
    UINT32    multicastFrames;	/**< MulticastFrames */
    UINT32    crcErroredFrames;	/**< CrcErroredFrames */
    UINT32    undersizeFrames;	/**< UndersizeFrames */
    UINT32    oversizeFrames;	/**< OversizeFrames */
    UINT32    frames64Octets;	/**< Frames64Octets */
    UINT32    frames127Octets;	/**< Frames127Octets */
    UINT32    frames255Octets;	/**< Frames255Octets */
    UINT32    frames511Octets;	/**< Frames511Octets */
    UINT32    frames1023Octets;	/**< Frames1023Octets */
    UINT32    frames1518Octets;	/**< Frames1518Octets */
} EthernetFrameExtendedPMObject;

/*! \brief _EthernetFrameExtendedPMObject is used internally to represent EthernetFrameExtendedPMObject */
typedef EthernetFrameExtendedPMObject _EthernetFrameExtendedPMObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.
 *
 * MDMOID_LAYER3_DATA_SERVICES 2156
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Layer3DataServicesObject;

/*! \brief _Layer3DataServicesObject is used internally to represent Layer3DataServicesObject */
typedef Layer3DataServicesObject _Layer3DataServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.IpHostConfigData.{i}.
 *
 * MDMOID_IP_HOST_CONFIG_DATA 2157
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    ipOptions;	/**< IpOptions */
    HEXBINARY  macAddress;	/**< MacAddress */
    HEXBINARY  ontId;	/**< OntId */
    UINT32    ipAddress;	/**< IpAddress */
    UINT32    mask;	/**< Mask */
    UINT32    gateway;	/**< Gateway */
    UINT32    primaryDns;	/**< PrimaryDns */
    UINT32    secondaryDns;	/**< SecondaryDns */
    UINT32    currentAddress;	/**< CurrentAddress */
    UINT32    currentMask;	/**< CurrentMask */
    UINT32    currentGateway;	/**< CurrentGateway */
    UINT32    currentPrimaryDns;	/**< CurrentPrimaryDns */
    UINT32    currentSecondaryDns;	/**< CurrentSecondaryDns */
    HEXBINARY  domainName;	/**< DomainName */
    HEXBINARY  hostName;	/**< HostName */
} IpHostConfigDataObject;

/*! \brief _IpHostConfigDataObject is used internally to represent IpHostConfigDataObject */
typedef IpHostConfigDataObject _IpHostConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.X_BROADCOM_COM_IpHostConfigData.{i}.
 *
 * MDMOID_BC_IP_HOST_CONFIG_DATA 2158
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    connectionStatus;	/**< ConnectionStatus */
    UINT32    dhcpcPid;	/**< DhcpcPid */
    char *    interfaceName;	/**< InterfaceName */
} BCM_IpHostConfigDataObject;

/*! \brief _BCM_IpHostConfigDataObject is used internally to represent BCM_IpHostConfigDataObject */
typedef BCM_IpHostConfigDataObject _BCM_IpHostConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.IpHostPmHistoryData.{i}.
 *
 * MDMOID_IP_HOST_PM_HISTORY_DATA 2159
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    icmpErrors;	/**< IcmpErrors */
    UINT32    dnsErrors;	/**< DnsErrors */
} IpHostPmHistoryDataObject;

/*! \brief _IpHostPmHistoryDataObject is used internally to represent IpHostPmHistoryDataObject */
typedef IpHostPmHistoryDataObject _IpHostPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.
 *
 * MDMOID_IPV6_HOST_CONFIG_DATA 2160
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    ipOptions;	/**< IpOptions */
    HEXBINARY  macAddress;	/**< MacAddress */
    HEXBINARY  onuId;	/**< OnuId */
    HEXBINARY  ipv6LinkLocalAddress;	/**< Ipv6LinkLocalAddress */
    HEXBINARY  ipv6Address;	/**< Ipv6Address */
    HEXBINARY  defaultRouter;	/**< DefaultRouter */
    HEXBINARY  primaryDns;	/**< PrimaryDns */
    HEXBINARY  secondaryDns;	/**< SecondaryDns */
    HEXBINARY  currentAddressTable;	/**< CurrentAddressTable */
    HEXBINARY  currentDefaultRouterTable;	/**< CurrentDefaultRouterTable */
    HEXBINARY  currentDnsTable;	/**< CurrentDnsTable */
    HEXBINARY  duid;	/**< Duid */
    HEXBINARY  onlinkPrefix;	/**< OnlinkPrefix */
    HEXBINARY  currentOnlinkPrefixTable;	/**< CurrentOnlinkPrefixTable */
} Ipv6HostConfigDataObject;

/*! \brief _Ipv6HostConfigDataObject is used internally to represent Ipv6HostConfigDataObject */
typedef Ipv6HostConfigDataObject _Ipv6HostConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.CurrentAddressTable.{i}.
 *
 * MDMOID_IPV6_CURRENT_ADDRESS_TABLE 2161
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  currentAddressEntry;	/**< CurrentAddressEntry */
} Ipv6CurrentAddressTableObject;

/*! \brief _Ipv6CurrentAddressTableObject is used internally to represent Ipv6CurrentAddressTableObject */
typedef Ipv6CurrentAddressTableObject _Ipv6CurrentAddressTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.CurrentDefaultRouterTable.{i}.
 *
 * MDMOID_IPV6_CURRENT_DEFAULT_ROUTER_TABLE 2162
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  currentDefaultRouterEntry;	/**< CurrentDefaultRouterEntry */
} Ipv6CurrentDefaultRouterTableObject;

/*! \brief _Ipv6CurrentDefaultRouterTableObject is used internally to represent Ipv6CurrentDefaultRouterTableObject */
typedef Ipv6CurrentDefaultRouterTableObject _Ipv6CurrentDefaultRouterTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.CurrentDnsTable.{i}.
 *
 * MDMOID_IPV6_CURRENT_DNS_TABLE 2163
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  currentDnsEntry;	/**< CurrentDnsEntry */
} Ipv6CurrentDnsTableObject;

/*! \brief _Ipv6CurrentDnsTableObject is used internally to represent Ipv6CurrentDnsTableObject */
typedef Ipv6CurrentDnsTableObject _Ipv6CurrentDnsTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.Ipv6HostConfigData.{i}.CurrentOnlinkPrefixTable.{i}.
 *
 * MDMOID_IPV6_CURRENT_ONLINK_PREFIX_TABLE 2164
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  currentOnlinkPrefixTableEntry;	/**< CurrentOnlinkPrefixTableEntry */
} Ipv6CurrentOnlinkPrefixTableObject;

/*! \brief _Ipv6CurrentOnlinkPrefixTableObject is used internally to represent Ipv6CurrentOnlinkPrefixTableObject */
typedef Ipv6CurrentOnlinkPrefixTableObject _Ipv6CurrentOnlinkPrefixTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.X_BROADCOM_COM_Ipv6HostConfigData.{i}.
 *
 * MDMOID_BC_IPV6_HOST_CONFIG_DATA 2165
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    connectionStatus;	/**< ConnectionStatus */
    UINT32    dhcpcPid;	/**< DhcpcPid */
    char *    interfaceName;	/**< InterfaceName */
    UBOOL8    MFlag;	/**< MFlag */
    UBOOL8    OFlag;	/**< OFlag */
} BCM_Ipv6HostConfigDataObject;

/*! \brief _BCM_Ipv6HostConfigDataObject is used internally to represent BCM_Ipv6HostConfigDataObject */
typedef BCM_Ipv6HostConfigDataObject _BCM_Ipv6HostConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.Layer3DataServices.TcpUdpConfigData.{i}.
 *
 * MDMOID_TCP_UDP_CONFIG_DATA 2166
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    portId;	/**< PortId */
    UINT32    protocol;	/**< Protocol */
    UINT32    tos;	/**< Tos */
    UINT32    ipHostPointer;	/**< IpHostPointer */
} TcpUdpConfigDataObject;

/*! \brief _TcpUdpConfigDataObject is used internally to represent TcpUdpConfigDataObject */
typedef TcpUdpConfigDataObject _TcpUdpConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.
 *
 * MDMOID_ETHERNET_SERVICES 2167
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} EthernetServicesObject;

/*! \brief _EthernetServicesObject is used internally to represent EthernetServicesObject */
typedef EthernetServicesObject _EthernetServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.PptpEthernetUni.{i}.
 *
 * MDMOID_PPTP_ETHERNET_UNI 2168
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    expectedType;	/**< ExpectedType */
    UINT32    sensedType;	/**< SensedType */
    UINT32    autoDetectionConfiguration;	/**< AutoDetectionConfiguration */
    UINT32    loopbackConfiguration;	/**< LoopbackConfiguration */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    configurationInd;	/**< ConfigurationInd */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UINT32    dteDceInd;	/**< DteDceInd */
    UINT32    pauseTime;	/**< PauseTime */
    UINT32    bridgedIpInd;	/**< BridgedIpInd */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UBOOL8    pppoeFilter;	/**< PppoeFilter */
    UINT32    powerControl;	/**< PowerControl */
} PptpEthernetUniObject;

/*! \brief _PptpEthernetUniObject is used internally to represent PptpEthernetUniObject */
typedef PptpEthernetUniObject _PptpEthernetUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.EthernetPmHistoryData.{i}.
 *
 * MDMOID_ETHERNET_PM_HISTORY_DATA 2169
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    fcsErrors;	/**< FcsErrors */
    UINT32    excessiveCollisionCounter;	/**< ExcessiveCollisionCounter */
    UINT32    lateCollisionCounter;	/**< LateCollisionCounter */
    UINT32    frameTooLongs;	/**< FrameTooLongs */
    UINT32    bufferOverflowsOnReceive;	/**< BufferOverflowsOnReceive */
    UINT32    bufferOverflowsOnTransmit;	/**< BufferOverflowsOnTransmit */
    UINT32    singleCollisionFrameCounter;	/**< SingleCollisionFrameCounter */
    UINT32    multipleCollisionsFrameCounter;	/**< MultipleCollisionsFrameCounter */
    UINT32    sqeCounter;	/**< SqeCounter */
    UINT32    deferredTransmissionCounter;	/**< DeferredTransmissionCounter */
    UINT32    internalMacTransmitErrorCounter;	/**< InternalMacTransmitErrorCounter */
    UINT32    carrierSenseErrorCounter;	/**< CarrierSenseErrorCounter */
    UINT32    alignmentErrorCounter;	/**< AlignmentErrorCounter */
    UINT32    internalMacReceiveErrorCounter;	/**< InternalMacReceiveErrorCounter */
} EthernetPmHistoryDataObject;

/*! \brief _EthernetPmHistoryDataObject is used internally to represent EthernetPmHistoryDataObject */
typedef EthernetPmHistoryDataObject _EthernetPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.EthernetPmHistoryData2.{i}.
 *
 * MDMOID_ETHERNET_PM_HISTORY_DATA2 2170
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    pppoeFilterFrameCounter;	/**< PppoeFilterFrameCounter */
} EthernetPmHistoryData2Object;

/*! \brief _EthernetPmHistoryData2Object is used internally to represent EthernetPmHistoryData2Object */
typedef EthernetPmHistoryData2Object _EthernetPmHistoryData2Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.EthernetPmHistoryData3.{i}.
 *
 * MDMOID_ETHERNET_PM_HISTORY_DATA3 2171
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    dropEvents;	/**< DropEvents */
    UINT32    octets;	/**< Octets */
    UINT32    packets;	/**< Packets */
    UINT32    broadcastPackets;	/**< BroadcastPackets */
    UINT32    multicastPackets;	/**< MulticastPackets */
    UINT32    undersizePackets;	/**< UndersizePackets */
    UINT32    fragments;	/**< Fragments */
    UINT32    jabbers;	/**< Jabbers */
    UINT32    packets64Octets;	/**< Packets64Octets */
    UINT32    packets127Octets;	/**< Packets127Octets */
    UINT32    packets255Octets;	/**< Packets255Octets */
    UINT32    packets511Octets;	/**< Packets511Octets */
    UINT32    packets1023Octets;	/**< Packets1023Octets */
    UINT32    packets1518Octets;	/**< Packets1518Octets */
} EthernetPmHistoryData3Object;

/*! \brief _EthernetPmHistoryData3Object is used internally to represent EthernetPmHistoryData3Object */
typedef EthernetPmHistoryData3Object _EthernetPmHistoryData3Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.EthernetServices.VirtualEthernetInterfacePoint.{i}.
 *
 * MDMOID_VIRTUAL_ETHERNET_INTERFACE_POINT 2172
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    HEXBINARY  interDomainName;	/**< InterDomainName */
    UINT32    tcpUdpPointer;	/**< TcpUdpPointer */
    UINT32    ianaAssignedPort;	/**< IanaAssignedPort */
} VirtualEthernetInterfacePointObject;

/*! \brief _VirtualEthernetInterfacePointObject is used internally to represent VirtualEthernetInterfacePointObject */
typedef VirtualEthernetInterfacePointObject _VirtualEthernetInterfacePointObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.
 *
 * MDMOID_VOICE_SERVICES 2173
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} VoiceServicesObject;

/*! \brief _VoiceServicesObject is used internally to represent VoiceServicesObject */
typedef VoiceServicesObject _VoiceServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.PptpPotsUni.{i}.
 *
 * MDMOID_PPTP_POTS_UNI 2174
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    interworkingTpPointer;	/**< InterworkingTpPointer */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UINT32    impedance;	/**< Impedance */
    UINT32    transmissionPath;	/**< TransmissionPath */
    SINT32    rxGain;	/**< RxGain */
    SINT32    txGain;	/**< TxGain */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    hookState;	/**< HookState */
    UINT32    potsHoldoverTime;	/**< PotsHoldoverTime */
} PptpPotsUniObject;

/*! \brief _PptpPotsUniObject is used internally to represent PptpPotsUniObject */
typedef PptpPotsUniObject _PptpPotsUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.SipUserData.{i}.
 *
 * MDMOID_SIP_USER_DATA 2175
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    sipAgentPointer;	/**< SipAgentPointer */
    UINT32    userPartAor;	/**< UserPartAor */
    HEXBINARY  sipDisplayName;	/**< SipDisplayName */
    UINT32    usernamePassword;	/**< UsernamePassword */
    UINT32    voiceMailServerSipUri;	/**< VoiceMailServerSipUri */
    UINT32    voiceMailExpTime;	/**< VoiceMailExpTime */
    UINT32    networkDialPlanPointer;	/**< NetworkDialPlanPointer */
    UINT32    appServiceProfilePointer;	/**< AppServiceProfilePointer */
    UINT32    featureCodePointer;	/**< FeatureCodePointer */
    UINT32    pptpPointer;	/**< PptpPointer */
    UINT32    releaseTimer;	/**< ReleaseTimer */
    UINT32    rohTimer;	/**< RohTimer */
} SipUserDataObject;

/*! \brief _SipUserDataObject is used internally to represent SipUserDataObject */
typedef SipUserDataObject _SipUserDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.SipAgentConfigData.{i}.
 *
 * MDMOID_SIP_AGENT_CONFIG_DATA 2176
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    proxyServerAddressPointer;	/**< ProxyServerAddressPointer */
    UINT32    outboundProxyAddressPointer;	/**< OutboundProxyAddressPointer */
    UINT32    primarySipDns;	/**< PrimarySipDns */
    UINT32    secondarySipDns;	/**< SecondarySipDns */
    UINT32    tcpUdpPointer;	/**< TcpUdpPointer */
    UINT32    sipRegExpTime;	/**< SipRegExpTime */
    UINT32    sipRegRegHeadStartTime;	/**< SipRegRegHeadStartTime */
    UINT32    hostPartUri;	/**< HostPartUri */
    UINT32    sipStatus;	/**< SipStatus */
    UINT32    sipRegistrar;	/**< SipRegistrar */
    HEXBINARY  softswitch;	/**< Softswitch */
    HEXBINARY  sipResponseTable;	/**< SipResponseTable */
    UINT32    sipOptionTransmitControl;	/**< SipOptionTransmitControl */
    UINT32    sipUriFormat;	/**< SipUriFormat */
} SipAgentConfigDataObject;

/*! \brief _SipAgentConfigDataObject is used internally to represent SipAgentConfigDataObject */
typedef SipAgentConfigDataObject _SipAgentConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpVoiceCtp.{i}.
 *
 * MDMOID_VO_IP_VOICE_CTP 2177
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    userProtocolPointer;	/**< UserProtocolPointer */
    UINT32    pptpPointer;	/**< PptpPointer */
    UINT32    voIpMediaProfilePointer;	/**< VoIpMediaProfilePointer */
    UINT32    signallingCode;	/**< SignallingCode */
} VoIpVoiceCtpObject;

/*! \brief _VoIpVoiceCtpObject is used internally to represent VoIpVoiceCtpObject */
typedef VoIpVoiceCtpObject _VoIpVoiceCtpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpMediaProfile.{i}.
 *
 * MDMOID_VO_IP_MEDIA_PROFILE 2178
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    faxMode;	/**< FaxMode */
    UINT32    voiceServiceProfilePointer;	/**< VoiceServiceProfilePointer */
    UINT32    codecSelection1;	/**< CodecSelection1 */
    UINT32    packetPeriodSelection1;	/**< PacketPeriodSelection1 */
    UINT32    silenceSuppression1;	/**< SilenceSuppression1 */
    UINT32    codecSelection2;	/**< CodecSelection2 */
    UINT32    packetPeriodSelection2;	/**< PacketPeriodSelection2 */
    UINT32    silenceSuppression2;	/**< SilenceSuppression2 */
    UINT32    codecSelection3;	/**< CodecSelection3 */
    UINT32    packetPeriodSelection3;	/**< PacketPeriodSelection3 */
    UINT32    silenceSuppression3;	/**< SilenceSuppression3 */
    UINT32    codecSelection4;	/**< CodecSelection4 */
    UINT32    packetPeriodSelection4;	/**< PacketPeriodSelection4 */
    UINT32    silenceSuppression4;	/**< SilenceSuppression4 */
    UINT32    oobDtmf;	/**< OobDtmf */
    UINT32    rtpProfilePointer;	/**< RtpProfilePointer */
} VoIpMediaProfileObject;

/*! \brief _VoIpMediaProfileObject is used internally to represent VoIpMediaProfileObject */
typedef VoIpMediaProfileObject _VoIpMediaProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoiceServiceProfile.{i}.
 *
 * MDMOID_VOICE_SERVICE 2179
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    announcementType;	/**< AnnouncementType */
    UINT32    jitterTarget;	/**< JitterTarget */
    UINT32    jitterBufferMax;	/**< JitterBufferMax */
    UBOOL8    echoCancel;	/**< EchoCancel */
    UINT32    pstnProtocolVariant;	/**< PstnProtocolVariant */
    UINT32    dtmfDigitLevels;	/**< DtmfDigitLevels */
    UINT32    dtmfDigitDuration;	/**< DtmfDigitDuration */
    UINT32    hookFlashMinTime;	/**< HookFlashMinTime */
    UINT32    hookFlashMaxTime;	/**< HookFlashMaxTime */
    HEXBINARY  tonePatternTable;	/**< TonePatternTable */
    HEXBINARY  toneEventTable;	/**< ToneEventTable */
    HEXBINARY  ringingPatternTable;	/**< RingingPatternTable */
    HEXBINARY  ringingEventTable;	/**< RingingEventTable */
} VoiceServiceObject;

/*! \brief _VoiceServiceObject is used internally to represent VoiceServiceObject */
typedef VoiceServiceObject _VoiceServiceObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.RtpProfileData.{i}.
 *
 * MDMOID_RTP_PROFILE_DATA 2180
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    localPortMin;	/**< LocalPortMin */
    UINT32    localPortMax;	/**< LocalPortMax */
    UINT32    dscpMark;	/**< DscpMark */
    UBOOL8    piggybackEvents;	/**< PiggybackEvents */
    UBOOL8    toneEvents;	/**< ToneEvents */
    UBOOL8    dtmfEvents;	/**< DtmfEvents */
    UBOOL8    casEvents;	/**< CasEvents */
} RtpProfileDataObject;

/*! \brief _RtpProfileDataObject is used internally to represent RtpProfileDataObject */
typedef RtpProfileDataObject _RtpProfileDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpAppServiceProfile.{i}.
 *
 * MDMOID_VO_IP_APP_SERVICE_PROFILE 2181
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    cidFeatures;	/**< CidFeatures */
    UINT32    callWaitingFeatures;	/**< CallWaitingFeatures */
    UINT32    callProgressFeatures;	/**< CallProgressFeatures */
    UINT32    callPresentationFeatures;	/**< CallPresentationFeatures */
    UINT32    directConnectFeature;	/**< DirectConnectFeature */
    UINT32    directConnectUriPointer;	/**< DirectConnectUriPointer */
    UINT32    bridgedLineAgentUriPointer;	/**< BridgedLineAgentUriPointer */
    UINT32    conferenceFactoryUriPointer;	/**< ConferenceFactoryUriPointer */
} VoIpAppServiceProfileObject;

/*! \brief _VoIpAppServiceProfileObject is used internally to represent VoIpAppServiceProfileObject */
typedef VoIpAppServiceProfileObject _VoIpAppServiceProfileObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoiceFeatureAccessCodes.{i}.
 *
 * MDMOID_VOICE_FEATURE_ACCESS_CODES 2182
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  cancelCallWaiting;	/**< CancelCallWaiting */
    HEXBINARY  callHold;	/**< CallHold */
    HEXBINARY  callPark;	/**< CallPark */
    HEXBINARY  callerIdActivate;	/**< CallerIdActivate */
    HEXBINARY  callerIdDeactivate;	/**< CallerIdDeactivate */
    HEXBINARY  doNotDisturdActivation;	/**< DoNotDisturdActivation */
    HEXBINARY  doNotDisturdDeactivation;	/**< DoNotDisturdDeactivation */
    HEXBINARY  doNotDisturdPinChange;	/**< DoNotDisturdPinChange */
    HEXBINARY  emergencyServiceNumber;	/**< EmergencyServiceNumber */
    HEXBINARY  intercomService;	/**< IntercomService */
    HEXBINARY  unattendedCallTransfer;	/**< UnattendedCallTransfer */
    HEXBINARY  attendedCallTransfer;	/**< AttendedCallTransfer */
} VoiceFeatureAccessCodesObject;

/*! \brief _VoiceFeatureAccessCodesObject is used internally to represent VoiceFeatureAccessCodesObject */
typedef VoiceFeatureAccessCodesObject _VoiceFeatureAccessCodesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.NetworkDialPlanTable.{i}.
 *
 * MDMOID_NETWORK_DIAL_PLAN_TABLE 2183
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    dialPlanNumber;	/**< DialPlanNumber */
    UINT32    dialPlanTableMaxSize;	/**< DialPlanTableMaxSize */
    UINT32    criticalDialTimeout;	/**< CriticalDialTimeout */
    UINT32    partialDialTimeout;	/**< PartialDialTimeout */
    UINT32    dialPlanFormat;	/**< DialPlanFormat */
    HEXBINARY  dialPlanTable;	/**< DialPlanTable */
} NetworkDialPlanTableObject;

/*! \brief _NetworkDialPlanTableObject is used internally to represent NetworkDialPlanTableObject */
typedef NetworkDialPlanTableObject _NetworkDialPlanTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.NetworkDialPlanTable.{i}.DialPlanTable.{i}.
 *
 * MDMOID_DIAL_PLAN_TABLE 2184
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    dialPlanId;	/**< DialPlanId */
    UINT32    action;	/**< Action */
    HEXBINARY  dialPlanTable;	/**< DialPlanTable */
} DialPlanTableObject;

/*! \brief _DialPlanTableObject is used internally to represent DialPlanTableObject */
typedef DialPlanTableObject _DialPlanTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpLineStatus.{i}.
 *
 * MDMOID_VO_IP_LINE_STATUS 2185
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    voIpCodecUsed;	/**< VoIpCodecUsed */
    UINT32    voIpVoiceServerStatus;	/**< VoIpVoiceServerStatus */
    UINT32    voIpPortSessionType;	/**< VoIpPortSessionType */
    UINT32    voIpCall1PacketPeriod;	/**< VoIpCall1PacketPeriod */
    UINT32    voIpCall2PacketPeriod;	/**< VoIpCall2PacketPeriod */
    HEXBINARY  voIpCall1DstAddr;	/**< VoIpCall1DstAddr */
    HEXBINARY  voIpCall2DstAddr;	/**< VoIpCall2DstAddr */
} VoIpLineStatusObject;

/*! \brief _VoIpLineStatusObject is used internally to represent VoIpLineStatusObject */
typedef VoIpLineStatusObject _VoIpLineStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.CallControlPmHistoryData.{i}.
 *
 * MDMOID_CALL_CONTROL_PM_HISTORY_DATA 2186
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    callSetupFailures;	/**< CallSetupFailures */
    UINT32    callSetupTimer;	/**< CallSetupTimer */
    UINT32    callTerminateFailures;	/**< CallTerminateFailures */
    UINT32    analogPortReleases;	/**< AnalogPortReleases */
    UINT32    analogPortOffHookTimer;	/**< AnalogPortOffHookTimer */
} CallControlPmHistoryDataObject;

/*! \brief _CallControlPmHistoryDataObject is used internally to represent CallControlPmHistoryDataObject */
typedef CallControlPmHistoryDataObject _CallControlPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.RtpPmHistoryData.{i}.
 *
 * MDMOID_RTP_PM_HISTORY_DATA 2187
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    rtpErrors;	/**< RtpErrors */
    UINT32    packetLoss;	/**< PacketLoss */
    UINT32    maxJitter;	/**< MaxJitter */
    UINT32    maxTimeBetweenRtcpPackets;	/**< MaxTimeBetweenRtcpPackets */
    UINT32    bufferUnderflows;	/**< BufferUnderflows */
    UINT32    bufferOverflows;	/**< BufferOverflows */
} RtpPmHistoryDataObject;

/*! \brief _RtpPmHistoryDataObject is used internally to represent RtpPmHistoryDataObject */
typedef RtpPmHistoryDataObject _RtpPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.SipAgentPmHistoryData.{i}.
 *
 * MDMOID_SIP_AGENT_PM_HISTORY_DATA 2188
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    transactions;	/**< Transactions */
    UINT32    rxInviteReqs;	/**< RxInviteReqs */
    UINT32    rxInviteRetrans;	/**< RxInviteRetrans */
    UINT32    rxNonInviteReqs;	/**< RxNonInviteReqs */
    UINT32    rxNonInviteRetrans;	/**< RxNonInviteRetrans */
    UINT32    rxResponse;	/**< RxResponse */
    UINT32    rxResponseRetrans;	/**< RxResponseRetrans */
    UINT32    txInviteReqs;	/**< TxInviteReqs */
    UINT32    txInviteRetrans;	/**< TxInviteRetrans */
    UINT32    txNonInviteReqs;	/**< TxNonInviteReqs */
    UINT32    txNonInviteRetrans;	/**< TxNonInviteRetrans */
    UINT32    txResponse;	/**< TxResponse */
    UINT32    txResponseRetrans;	/**< TxResponseRetrans */
} SipAgentPmHistoryDataObject;

/*! \brief _SipAgentPmHistoryDataObject is used internally to represent SipAgentPmHistoryDataObject */
typedef SipAgentPmHistoryDataObject _SipAgentPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.SipCallInitPmHistoryData.{i}.
 *
 * MDMOID_SIP_CALL_INIT_PM_HISTORY_DATA 2189
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    failToConnectCounter;	/**< FailToConnectCounter */
    UINT32    failToValidateCounter;	/**< FailToValidateCounter */
    UINT32    timeoutCounter;	/**< TimeoutCounter */
    UINT32    failureReceivedCounter;	/**< FailureReceivedCounter */
    UINT32    failToAuthenticateCounter;	/**< FailToAuthenticateCounter */
} SipCallInitPmHistoryDataObject;

/*! \brief _SipCallInitPmHistoryDataObject is used internally to represent SipCallInitPmHistoryDataObject */
typedef SipCallInitPmHistoryDataObject _SipCallInitPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.MgcConfigData.{i}.
 *
 * MDMOID_MGC_CONFIG_DATA 2190
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    primaryMgc;	/**< PrimaryMgc */
    UINT32    secondaryMgc;	/**< SecondaryMgc */
    UINT32    tcpUdpPointer;	/**< TcpUdpPointer */
    UINT32    version;	/**< Version */
    UINT32    messageFormat;	/**< MessageFormat */
    UINT32    maxRetryTime;	/**< MaxRetryTime */
    UINT32    maxRetryAttempts;	/**< MaxRetryAttempts */
    UINT32    serviceChangeDelay;	/**< ServiceChangeDelay */
    HEXBINARY  terminationIdBase;	/**< TerminationIdBase */
    HEXBINARY  softswitch;	/**< Softswitch */
} MgcConfigDataObject;

/*! \brief _MgcConfigDataObject is used internally to represent MgcConfigDataObject */
typedef MgcConfigDataObject _MgcConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.MgcPmHistoryData.{i}.
 *
 * MDMOID_MGC_PM_HISTORY_DATA 2191
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    receivedMessages;	/**< ReceivedMessages */
    UINT32    receivedOctets;	/**< ReceivedOctets */
    UINT32    sentMessages;	/**< SentMessages */
    UINT32    sentOctets;	/**< SentOctets */
    UINT32    protocolErrors;	/**< ProtocolErrors */
    UINT32    transportLosses;	/**< TransportLosses */
    UINT32    lastDetectedEvent;	/**< LastDetectedEvent */
    UINT32    lastDetectedEventTime;	/**< LastDetectedEventTime */
    UINT32    lastDetectedResetTime;	/**< LastDetectedResetTime */
} MgcPmHistoryDataObject;

/*! \brief _MgcPmHistoryDataObject is used internally to represent MgcPmHistoryDataObject */
typedef MgcPmHistoryDataObject _MgcPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.VoiceServices.VoIpConfigData.{i}.
 *
 * MDMOID_VO_IP_CONFIG_DATA 2192
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    availableSignalProtocol;	/**< AvailableSignalProtocol */
    UINT32    usedSignalProtocol;	/**< UsedSignalProtocol */
    UINT32    availableVoIpConfigMethods;	/**< AvailableVoIpConfigMethods */
    UINT32    usedVoIpConfigMethods;	/**< UsedVoIpConfigMethods */
    UINT32    voIpConfigAddrPointer;	/**< VoIpConfigAddrPointer */
    UINT32    voIpConfigState;	/**< VoIpConfigState */
    UINT32    retrieveProfile;	/**< RetrieveProfile */
    HEXBINARY  profileVersion;	/**< ProfileVersion */
} VoIpConfigDataObject;

/*! \brief _VoIpConfigDataObject is used internally to represent VoIpConfigDataObject */
typedef VoIpConfigDataObject _VoIpConfigDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.
 *
 * MDMOID_MOCA_SERVICES 2193
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} MocaServicesObject;

/*! \brief _MocaServicesObject is used internally to represent MocaServicesObject */
typedef MocaServicesObject _MocaServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.PptpMocaUni.{i}.
 *
 * MDMOID_PPTP_MOCA_UNI 2194
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    loopbackConfiguration;	/**< LoopbackConfiguration */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    operationalState;	/**< OperationalState */
    UINT32    maxFrameSize;	/**< MaxFrameSize */
    UBOOL8    alarmReportingControl;	/**< AlarmReportingControl */
    UINT32    alarmReportingControlInterval;	/**< AlarmReportingControlInterval */
    UBOOL8    pppoeFilter;	/**< PppoeFilter */
    UINT32    networkStatus;	/**< NetworkStatus */
    HEXBINARY  password;	/**< Password */
    UBOOL8    privacy;	/**< Privacy */
    UINT32    minBandwidthAlarmThreshold;	/**< MinBandwidthAlarmThreshold */
    UINT32    frequencyMask;	/**< FrequencyMask */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    lastOperationalFrequency;	/**< LastOperationalFrequency */
} PptpMocaUniObject;

/*! \brief _PptpMocaUniObject is used internally to represent PptpMocaUniObject */
typedef PptpMocaUniObject _PptpMocaUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.X_BROADCOM_COM_PptpMocaUni.{i}.
 *
 * MDMOID_BRCM_PPTP_MOCA_UNI 2195
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    ncMode;	/**< NcMode */
    UBOOL8    autoNwSearch;	/**< AutoNwSearch */
    UBOOL8    txPwrControl;	/**< TxPwrControl */
    UINT32    continuousPowerMode;	/**< ContinuousPowerMode */
    UINT32    mcastMode;	/**< McastMode */
    UBOOL8    labMode;	/**< LabMode */
    UBOOL8    eclQTagMode;	/**< EclQTagMode */
    UINT32    maxTransmitTime;	/**< MaxTransmitTime */
    SINT32    maxTransmitPower;	/**< MaxTransmitPower */
    UINT32    snrMargin;	/**< SnrMargin */
    UINT32    outOfOrderLmo;	/**< OutOfOrderLmo */
    UBOOL8    lmoReportEnable;	/**< LmoReportEnable */
    UINT32    tabooMaskStart;	/**< TabooMaskStart */
    UINT32    tabooChannelMask;	/**< TabooChannelMask */
    UBOOL8    continuousIerrInsert;	/**< ContinuousIerrInsert */
    UBOOL8    continuousIeMapInsert;	/**< ContinuousIeMapInsert */
    UINT32    maxPktAggr;	/**< MaxPktAggr */
    UINT32    maxConstellationNode;	/**< MaxConstellationNode */
    UINT32    maxConstellation;	/**< MaxConstellation */
    UBOOL8    preferedNetworkController;	/**< PreferedNetworkController */
    UINT32    pmkExchangeInterval;	/**< PmkExchangeInterval */
    UINT32    tekExchangeInterval;	/**< TekExchangeInterval */
} BrcmPptpMocaUniObject;

/*! \brief _BrcmPptpMocaUniObject is used internally to represent BrcmPptpMocaUniObject */
typedef BrcmPptpMocaUniObject _BrcmPptpMocaUniObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.X_BROADCOM_COM_MocaStatus.{i}.
 *
 * MDMOID_MOCA_STATUS 2196
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    vendorId;	/**< VendorId */
    UINT32    hwVersion;	/**< HwVersion */
    UINT32    softwareVersion;	/**< SoftwareVersion */
    UINT32    selfMoCAVersion;	/**< SelfMoCAVersion */
    UINT32    networkVersionNumber;	/**< NetworkVersionNumber */
    UINT32    qam256Support;	/**< Qam256Support */
    UINT32    operationalStatus;	/**< OperationalStatus */
    UINT32    linkStatus;	/**< LinkStatus */
    UINT32    connectedNodes;	/**< ConnectedNodes */
    UINT32    nodeId;	/**< NodeId */
    UINT32    networkControllerNodeId;	/**< NetworkControllerNodeId */
    UINT32    upTime;	/**< UpTime */
    UINT32    linkUpTime;	/**< LinkUpTime */
    UINT32    backupNetworkControllerNodeId;	/**< BackupNetworkControllerNodeId */
    UINT32    rfChannel;	/**< RfChannel */
    UINT32    bwStatus;	/**< BwStatus */
} MocaStatusObject;

/*! \brief _MocaStatusObject is used internally to represent MocaStatusObject */
typedef MocaStatusObject _MocaStatusObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.X_BROADCOM_COM_MocaStats.{i}.
 *
 * MDMOID_MOCA_STATS 2197
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    inUcPkts;	/**< InUcPkts */
    UINT32    inDiscardPktsEcl;	/**< InDiscardPktsEcl */
    UINT32    inDiscardPktsMac;	/**< InDiscardPktsMac */
    UINT32    inUnKnownPkts;	/**< InUnKnownPkts */
    UINT32    inMcPkts;	/**< InMcPkts */
    UINT32    inBcPkts;	/**< InBcPkts */
    UINT32    inOctetsLow;	/**< InOctetsLow */
    UINT32    outUcPkts;	/**< OutUcPkts */
    UINT32    outDiscardPkts;	/**< OutDiscardPkts */
    UINT32    outBcPkts;	/**< OutBcPkts */
    UINT32    outOctetsLow;	/**< OutOctetsLow */
    UINT32    networkControllerHandOffs;	/**< NetworkControllerHandOffs */
    UINT32    networkControllerBackups;	/**< NetworkControllerBackups */
} MocaStatsObject;

/*! \brief _MocaStatsObject is used internally to represent MocaStatsObject */
typedef MocaStatsObject _MocaStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.MocaEthernetPmHistoryData.{i}.
 *
 * MDMOID_MOCA_ETHERNET_PM_HISTORY_DATA 2198
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    incomingUnicastPackets;	/**< IncomingUnicastPackets */
    UINT32    incomingDiscardedPackets;	/**< IncomingDiscardedPackets */
    UINT32    incomingErroredPackets;	/**< IncomingErroredPackets */
    UINT32    incomingUnknownPackets;	/**< IncomingUnknownPackets */
    UINT32    incomingMulticastPackets;	/**< IncomingMulticastPackets */
    UINT32    incomingBroadcastPackets;	/**< IncomingBroadcastPackets */
    UINT32    incomingOctets;	/**< IncomingOctets */
    UINT32    outgoingUnicastPackets;	/**< OutgoingUnicastPackets */
    UINT32    outgoingDiscardedPackets;	/**< OutgoingDiscardedPackets */
    UINT32    outgoingErroredPackets;	/**< OutgoingErroredPackets */
    UINT32    outgoingUnknownPackets;	/**< OutgoingUnknownPackets */
    UINT32    outgoingMulticastPackets;	/**< OutgoingMulticastPackets */
    UINT32    outgoingBroadcastPackets;	/**< OutgoingBroadcastPackets */
    UINT32    outgoingOctets;	/**< OutgoingOctets */
} MocaEthernetPmHistoryDataObject;

/*! \brief _MocaEthernetPmHistoryDataObject is used internally to represent MocaEthernetPmHistoryDataObject */
typedef MocaEthernetPmHistoryDataObject _MocaEthernetPmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.MocaInterfacePmHistoryData.{i}.
 *
 * MDMOID_MOCA_INTERFACE_PM_HISTORY_DATA 2199
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    intervalEndTime;	/**< IntervalEndTime */
    UINT32    thresholdDataId;	/**< ThresholdDataId */
    UINT32    phyTxBroadcastRate;	/**< PhyTxBroadcastRate */
} MocaInterfacePmHistoryDataObject;

/*! \brief _MocaInterfacePmHistoryDataObject is used internally to represent MocaInterfacePmHistoryDataObject */
typedef MocaInterfacePmHistoryDataObject _MocaInterfacePmHistoryDataObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.MocaServices.MocaInterfacePmHistoryData.{i}.NodeTable.{i}.
 *
 * MDMOID_MOCA_INTERFACE_PM_HISTORY_DATA_NODE_TABLE 2200
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    HEXBINARY  macAddress;	/**< MacAddress */
    UINT32    phyTxRate;	/**< PhyTxRate */
    UINT32    txPowerControlReduction;	/**< TxPowerControlReduction */
    UINT32    phyRxRate;	/**< PhyRxRate */
    UINT32    rxPowerLevel;	/**< RxPowerLevel */
    UINT32    phyRxBroadcastRate;	/**< PhyRxBroadcastRate */
    UINT32    rxBroadcastPowerLevel;	/**< RxBroadcastPowerLevel */
    UINT32    txPackets;	/**< TxPackets */
    UINT32    rxPackets;	/**< RxPackets */
    UINT32    erroredMissedRxPackets;	/**< ErroredMissedRxPackets */
    UINT32    erroredRxPackets;	/**< ErroredRxPackets */
} MocaInterfacePmHistoryDataNodeTableObject;

/*! \brief _MocaInterfacePmHistoryDataNodeTableObject is used internally to represent MocaInterfacePmHistoryDataNodeTableObject */
typedef MocaInterfacePmHistoryDataNodeTableObject _MocaInterfacePmHistoryDataNodeTableObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.TrafficManagement.
 *
 * MDMOID_TRAFFIC_MANAGEMENT 2201
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} TrafficManagementObject;

/*! \brief _TrafficManagementObject is used internally to represent TrafficManagementObject */
typedef TrafficManagementObject _TrafficManagementObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.TrafficManagement.PriorityQueueG.{i}.
 *
 * MDMOID_PRIORITY_QUEUE_G 2202
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    queueConfigurationOption;	/**< QueueConfigurationOption */
    UINT32    maxQueueSize;	/**< MaxQueueSize */
    UINT32    allocatedQueueSize;	/**< AllocatedQueueSize */
    UINT32    discardBlockCounterResetInterval;	/**< DiscardBlockCounterResetInterval */
    UINT32    bufferOverFlowsDiscardBlockThreshold;	/**< BufferOverFlowsDiscardBlockThreshold */
    UINT32    relatedPort;	/**< RelatedPort */
    UINT32    trafficSchedulerGPointer;	/**< TrafficSchedulerGPointer */
    UINT32    weight;	/**< Weight */
    UINT32    backPressureOperation;	/**< BackPressureOperation */
    UINT32    backPressureTime;	/**< BackPressureTime */
    UINT32    backPressureOccurQueueThreshold;	/**< BackPressureOccurQueueThreshold */
    UINT32    backPressureClearQueueThreshold;	/**< BackPressureClearQueueThreshold */
    HEXBINARY  packetDropQueueThresholds;	/**< PacketDropQueueThresholds */
    UINT32    packetDropMaxP;	/**< PacketDropMaxP */
    UINT32    queueDropWQ;	/**< QueueDropWQ */
    UINT32    dropPrecedenceColourMarking;	/**< DropPrecedenceColourMarking */
} PriorityQueueGObject;

/*! \brief _PriorityQueueGObject is used internally to represent PriorityQueueGObject */
typedef PriorityQueueGObject _PriorityQueueGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.TrafficManagement.TrafficSchedulerG.{i}.
 *
 * MDMOID_TRAFFIC_SCHEDULER_G 2203
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    TContPointer;	/**< TContPointer */
    UINT32    trafficSchedulerGPointer;	/**< TrafficSchedulerGPointer */
    UINT32    policy;	/**< Policy */
    UINT32    priority;	/**< Priority */
} TrafficSchedulerGObject;

/*! \brief _TrafficSchedulerGObject is used internally to represent TrafficSchedulerGObject */
typedef TrafficSchedulerGObject _TrafficSchedulerGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.TrafficManagement.GemTrafficDescriptor.{i}.
 *
 * MDMOID_GEM_TRAFFIC_DESCRIPTOR 2204
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    CIR;	/**< CIR */
    UINT32    PIR;	/**< PIR */
    UINT32    CBS;	/**< CBS */
    UINT32    PBS;	/**< PBS */
    UINT32    colourMode;	/**< ColourMode */
    UINT32    ingressColourMarking;	/**< IngressColourMarking */
    UINT32    egressColourMarking;	/**< EgressColourMarking */
    UINT32    meterType;	/**< MeterType */
} GemTrafficDescriptorObject;

/*! \brief _GemTrafficDescriptorObject is used internally to represent GemTrafficDescriptorObject */
typedef GemTrafficDescriptorObject _GemTrafficDescriptorObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.
 *
 * MDMOID_GENERAL 2205
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} GeneralObject;

/*! \brief _GeneralObject is used internally to represent GeneralObject */
typedef GeneralObject _GeneralObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.UniG.{i}.
 *
 * MDMOID_UNI_G 2206
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    configurationOptionStatus;	/**< ConfigurationOptionStatus */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    managementCapability;	/**< ManagementCapability */
    UINT32    nonOmciManagementId;	/**< NonOmciManagementId */
} UniGObject;

/*! \brief _UniGObject is used internally to represent UniGObject */
typedef UniGObject _UniGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.OltG.
 *
 * MDMOID_OLT_G 2207
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  oltVendorId;	/**< OltVendorId */
    HEXBINARY  equipmentId;	/**< EquipmentId */
    HEXBINARY  version;	/**< Version */
    HEXBINARY  timeInfo;	/**< TimeInfo */
} OltGObject;

/*! \brief _OltGObject is used internally to represent OltGObject */
typedef OltGObject _OltGObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.NetworkAddress.{i}.
 *
 * MDMOID_NETWORK_ADDRESS 2208
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    securityPointer;	/**< SecurityPointer */
    UINT32    addressPointer;	/**< AddressPointer */
} NetworkAddressObject;

/*! \brief _NetworkAddressObject is used internally to represent NetworkAddressObject */
typedef NetworkAddressObject _NetworkAddressObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.AuthenticationSecurityMethod.{i}.
 *
 * MDMOID_AUTHENTICATION_SECURITY_METHOD 2209
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    validationScheme;	/**< ValidationScheme */
    HEXBINARY  username1;	/**< Username1 */
    HEXBINARY  password;	/**< Password */
    HEXBINARY  realm;	/**< Realm */
    HEXBINARY  username2;	/**< Username2 */
} AuthenticationSecurityMethodObject;

/*! \brief _AuthenticationSecurityMethodObject is used internally to represent AuthenticationSecurityMethodObject */
typedef AuthenticationSecurityMethodObject _AuthenticationSecurityMethodObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.LargeString.{i}.
 *
 * MDMOID_LARGE_STRING 2210
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    numberOfParts;	/**< NumberOfParts */
    char *    part1;	/**< Part1 */
    char *    part2;	/**< Part2 */
    char *    part3;	/**< Part3 */
    char *    part4;	/**< Part4 */
    char *    part5;	/**< Part5 */
    char *    part6;	/**< Part6 */
    char *    part7;	/**< Part7 */
    char *    part8;	/**< Part8 */
    char *    part9;	/**< Part9 */
    char *    part10;	/**< Part10 */
    char *    part11;	/**< Part11 */
    char *    part12;	/**< Part12 */
    char *    part13;	/**< Part13 */
    char *    part14;	/**< Part14 */
    char *    part15;	/**< Part15 */
} LargeStringObject;

/*! \brief _LargeStringObject is used internally to represent LargeStringObject */
typedef LargeStringObject _LargeStringObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.ThresholdData1.{i}.
 *
 * MDMOID_THRESHOLD_DATA1 2211
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    thresholdValue1;	/**< ThresholdValue1 */
    UINT32    thresholdValue2;	/**< ThresholdValue2 */
    UINT32    thresholdValue3;	/**< ThresholdValue3 */
    UINT32    thresholdValue4;	/**< ThresholdValue4 */
    UINT32    thresholdValue5;	/**< ThresholdValue5 */
    UINT32    thresholdValue6;	/**< ThresholdValue6 */
    UINT32    thresholdValue7;	/**< ThresholdValue7 */
} ThresholdData1Object;

/*! \brief _ThresholdData1Object is used internally to represent ThresholdData1Object */
typedef ThresholdData1Object _ThresholdData1Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.ThresholdData2.{i}.
 *
 * MDMOID_THRESHOLD_DATA2 2212
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    thresholdValue8;	/**< ThresholdValue8 */
    UINT32    thresholdValue9;	/**< ThresholdValue9 */
    UINT32    thresholdValue10;	/**< ThresholdValue10 */
    UINT32    thresholdValue11;	/**< ThresholdValue11 */
    UINT32    thresholdValue12;	/**< ThresholdValue12 */
    UINT32    thresholdValue13;	/**< ThresholdValue13 */
    UINT32    thresholdValue14;	/**< ThresholdValue14 */
} ThresholdData2Object;

/*! \brief _ThresholdData2Object is used internally to represent ThresholdData2Object */
typedef ThresholdData2Object _ThresholdData2Object;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.Omci.
 *
 * MDMOID_OMCI 2213
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    HEXBINARY  meTypeTable;	/**< MeTypeTable */
    HEXBINARY  messageTypeTable;	/**< MessageTypeTable */
} OmciObject;

/*! \brief _OmciObject is used internally to represent OmciObject */
typedef OmciObject _OmciObject;



/*! \brief Obj struct for InternetGatewayDevice.X_ITU_T_ORG.G_984_4.General.TR069ManagementServer.{i}.
 *
 * MDMOID_TR069_MANAGEMENT_SERVER 2214
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    managedEntityId;	/**< ManagedEntityId */
    UINT32    administrativeState;	/**< AdministrativeState */
    UINT32    acsNetworkAddress;	/**< AcsNetworkAddress */
    UINT32    associatedTag;	/**< AssociatedTag */
} Tr069ManagementServerObject;

/*! \brief _Tr069ManagementServerObject is used internally to represent Tr069ManagementServerObject */
typedef Tr069ManagementServerObject _Tr069ManagementServerObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_OmciSystem.
 *
 * MDMOID_OMCI_SYSTEM 2215
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    tcontManagedEntityId;	/**< TcontManagedEntityId */
    UINT32    numberOfTConts;	/**< NumberOfTConts */
    UINT32    tcontPolicies;	/**< TcontPolicies */
    UINT32    ethernetManagedEntityId1;	/**< EthernetManagedEntityId1 */
    UINT32    ethernetManagedEntityId2;	/**< EthernetManagedEntityId2 */
    UINT32    ethernetManagedEntityId3;	/**< EthernetManagedEntityId3 */
    UINT32    ethernetManagedEntityId4;	/**< EthernetManagedEntityId4 */
    UINT32    ethernetManagedEntityId5;	/**< EthernetManagedEntityId5 */
    UINT32    ethernetManagedEntityId6;	/**< EthernetManagedEntityId6 */
    UINT32    ethernetManagedEntityId7;	/**< EthernetManagedEntityId7 */
    UINT32    ethernetManagedEntityId8;	/**< EthernetManagedEntityId8 */
    UINT32    ethernetManagedEntityId9;	/**< EthernetManagedEntityId9 */
    UINT32    ethernetManagedEntityId10;	/**< EthernetManagedEntityId10 */
    UINT32    ethernetManagedEntityId11;	/**< EthernetManagedEntityId11 */
    UINT32    ethernetManagedEntityId12;	/**< EthernetManagedEntityId12 */
    UINT32    ethernetManagedEntityId13;	/**< EthernetManagedEntityId13 */
    UINT32    ethernetManagedEntityId14;	/**< EthernetManagedEntityId14 */
    UINT32    ethernetManagedEntityId15;	/**< EthernetManagedEntityId15 */
    UINT32    ethernetManagedEntityId16;	/**< EthernetManagedEntityId16 */
    UINT32    ethernetManagedEntityId17;	/**< EthernetManagedEntityId17 */
    UINT32    ethernetManagedEntityId18;	/**< EthernetManagedEntityId18 */
    UINT32    ethernetManagedEntityId19;	/**< EthernetManagedEntityId19 */
    UINT32    ethernetManagedEntityId20;	/**< EthernetManagedEntityId20 */
    UINT32    ethernetManagedEntityId21;	/**< EthernetManagedEntityId21 */
    UINT32    ethernetManagedEntityId22;	/**< EthernetManagedEntityId22 */
    UINT32    ethernetManagedEntityId23;	/**< EthernetManagedEntityId23 */
    UINT32    ethernetManagedEntityId24;	/**< EthernetManagedEntityId24 */
    UINT32    numberOfEthernetPorts;	/**< NumberOfEthernetPorts */
    UINT32    ethernetTypes;	/**< EthernetTypes */
    UINT32    veipPptpUni0;	/**< VeipPptpUni0 */
    UINT32    mocaManagedEntityId1;	/**< MocaManagedEntityId1 */
    UINT32    mocaManagedEntityId2;	/**< MocaManagedEntityId2 */
    UINT32    numberOfMocaPorts;	/**< NumberOfMocaPorts */
    UINT32    potsManagedEntityId1;	/**< PotsManagedEntityId1 */
    UINT32    potsManagedEntityId2;	/**< PotsManagedEntityId2 */
    UINT32    numberOfPotsPorts;	/**< NumberOfPotsPorts */
    UINT32    veipManagedEntityId1;	/**< VeipManagedEntityId1 */
    UINT32    numberOfVeipPorts;	/**< NumberOfVeipPorts */
    UINT32    numberOfDownstreamPriorityQueues;	/**< NumberOfDownstreamPriorityQueues */
    UINT32    debugFlags;	/**< DebugFlags */
    UINT32    dataPathMode;	/**< DataPathMode */
    UINT32    promiscMode;	/**< PromiscMode */
    UINT32    getPmMode;	/**< GetPmMode */
    UBOOL8    omciRawEnable;	/**< OmciRawEnable */
#ifdef DMP_X_BROADCOM_COM_GPONRG_OMCI_FULL_1
    UBOOL8    compatibleRGOmciFull;	/**< CompatibleRGOmciFull */
#endif
#ifdef DMP_X_BROADCOM_COM_GPONONT_1
    UBOOL8    compatibleOnt;	/**< CompatibleOnt */
#endif
} OmciSystemObject;

/*! \brief _OmciSystemObject is used internally to represent OmciSystemObject */
typedef OmciSystemObject _OmciSystemObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_GponOmciStats.
 *
 * MDMOID_GPON_OMCI_STATS 2216
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    rxGoodPackets;	/**< RxGoodPackets */
    UINT32    rxLengthErrors;	/**< RxLengthErrors */
    UINT32    rxCrcErrors;	/**< RxCrcErrors */
    UINT32    rxOtherErrors;	/**< RxOtherErrors */
    UINT32    txAvcPackets;	/**< TxAvcPackets */
    UINT32    txResponsePackets;	/**< TxResponsePackets */
    UINT32    txRetransmissions;	/**< TxRetransmissions */
    UINT32    txErrors;	/**< TxErrors */
} GponOmciStatsObject;

/*! \brief _GponOmciStatsObject is used internally to represent GponOmciStatsObject */
typedef GponOmciStatsObject _GponOmciStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_NFC.
 *
 * MDMOID_NFC 3360
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
} NfcObject;

/*! \brief _NfcObject is used internally to represent NfcObject */
typedef NfcObject _NfcObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SpeedService.
 *
 * MDMOID_SPEED_SERVICE 3580
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    mode;	/**< Mode */
    char *    direction;	/**< Direction */
    char *    dataPath;	/**< DataPath */
    char *    serverIpAddr;	/**< ServerIpAddr */
    UINT32    tcpPort;	/**< TcpPort */
    UINT32    udpPort;	/**< UdpPort */
    UINT32    stepDuration;	/**< StepDuration */
    UINT32    packetLength;	/**< PacketLength */
    UINT32    startingBwKbps;	/**< StartingBwKbps */
    char *    algorithm;	/**< Algorithm */
    UINT32    maxSteps;	/**< MaxSteps */
    UINT32    acceptablePercentageLoss;	/**< AcceptablePercentageLoss */
    SINT32    latencyTolerancePercentage;	/**< LatencyTolerancePercentage */
    UINT32    maxLossPercentage;	/**< MaxLossPercentage */
    char *    logBuffer;	/**< LogBuffer */
    UINT32    goodPut;	/**< GoodPut */
    UINT32    payloadRate;	/**< PayloadRate */
    UINT32    packetLoss;	/**< PacketLoss */
    UINT32    avgLatency;	/**< AvgLatency */
    UINT32    adjustReceivedRate;	/**< AdjustReceivedRate */
    UINT32    receivedTime;	/**< ReceivedTime */
    UINT32    overhead;	/**< Overhead */
    DATETIME  lastRunTime;	/**< LastRunTime */
    UINT32    resultHistoryNumberOfEntries;	/**< ResultHistoryNumberOfEntries */
} SpeedServiceObject;

/*! \brief _SpeedServiceObject is used internally to represent SpeedServiceObject */
typedef SpeedServiceObject _SpeedServiceObject;



/*! \brief Obj struct for InternetGatewayDevice.X_BROADCOM_COM_SpeedService.ResultHistory.{i}.
 *
 * MDMOID_RESULT_HISTORY 3581
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    goodPut;	/**< GoodPut */
    UINT32    payloadRate;	/**< PayloadRate */
    UINT32    packetLoss;	/**< PacketLoss */
    UINT32    avgLatency;	/**< AvgLatency */
    UINT32    adjustReceivedRate;	/**< AdjustReceivedRate */
    UINT32    receivedTime;	/**< ReceivedTime */
    UINT32    overhead;	/**< Overhead */
    DATETIME  runTime;	/**< RunTime */
    char *    direction;	/**< Direction */
} ResultHistoryObject;

/*! \brief _ResultHistoryObject is used internally to represent ResultHistoryObject */
typedef ResultHistoryObject _ResultHistoryObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.
 *
 * MDMOID_CTOAM 2510
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    UINT32    portID;	/**< PortID */
#endif
} CTOAMObject;

/*! \brief _CTOAMObject is used internally to represent CTOAMObject */
typedef CTOAMObject _CTOAMObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.IADInfo.
 *
 * MDMOID_OAMIAD_INFO 2511
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  MACAddress;	/**< MACAddress */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    protocolSupported;	/**< ProtocolSupported */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  iadSoftwareVersion;	/**< IadSoftwareVersion */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  iadSoftwaretime;	/**< IadSoftwaretime */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voipUserCount;	/**< VoipUserCount */
#endif
} OAMIADInfoObject;

/*! \brief _OAMIADInfoObject is used internally to represent OAMIADInfoObject */
typedef OAMIADInfoObject _OAMIADInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.GlobalParameterConfig.
 *
 * MDMOID_OAM_GLB_PARAM_CFG 2512
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceIpMode;	/**< VoiceIpMode */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    ipAddr;	/**< iadIpAddr */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    netMask;	/**< iadNetMask */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    defaultGW;	/**< iadDefaultGW */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    PPPoEMode;	/**< PPPoEMode */
#endif
#ifdef DMP_ENDPOINT_1
    char *    PPPOEusername;	/**< PPPOEusername */
#endif
#ifdef DMP_ENDPOINT_1
    BASE64    PPPOEpassword;	/**< PPPOEpassword */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    taggedflag;	/**< Taggedflag */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceCVlan;	/**< VoiceCVlan */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceSVlan;	/**< VoiceSVlan */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voicePriority;	/**< VoicePriority */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    status;	/**< Status */
#endif
} OAMGlbParamCfgObject;

/*! \brief _OAMGlbParamCfgObject is used internally to represent OAMGlbParamCfgObject */
typedef OAMGlbParamCfgObject _OAMGlbParamCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.SIPParameterConfig.
 *
 * MDMOID_OAMSIP_PARAM_CFG 2513
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    MGPortNo;	/**< MGPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipProxyServIp;	/**< SipProxyServIp */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipProxyServComPortNo;	/**< SipProxyServComPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    backupSipProxyServIp;	/**< BackupSipProxyServIp */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    backUpSipProxyServComPortNo;	/**< BackUpSipProxyServComPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    activeSipProxyServer;	/**< ActiveSipProxyServer */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipRegServIP;	/**< SipRegServIP */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipRegServComPortNo;	/**< SipRegServComPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    backupSipRegServIp;	/**< BackupSipRegServIp */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    backupSipRegServComPortNo;	/**< BackupSipRegServComPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    outBoundServPortIP;	/**< OutBoundServPortIP */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    outBoundServPortNo;	/**< OutBoundServPortNo */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    sipRegIntervalSIP;	/**< SipRegIntervalSIP */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    heartbeatSwitch;	/**< HeartbeatSwitch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    heartbeatCycle;	/**< HeartbeatCycle */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    heartbeatCount;	/**< HeartbeatCount */
#endif
} OAMSIPParamCfgObject;

/*! \brief _OAMSIPParamCfgObject is used internally to represent OAMSIPParamCfgObject */
typedef OAMSIPParamCfgObject _OAMSIPParamCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.SIPUserParameterConfig.
 *
 * MDMOID_OAMSIP_USR_PARAM_CFG 2514
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  userAccount;	/**< UserAccount */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  username;	/**< Username */
#endif
#ifdef DMP_ENDPOINT_1
    HEXBINARY  userPassword;	/**< UserPassword */
#endif
} OAMSIPUsrParamCfgObject;

/*! \brief _OAMSIPUsrParamCfgObject is used internally to represent OAMSIPUsrParamCfgObject */
typedef OAMSIPUsrParamCfgObject _OAMSIPUsrParamCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.FAXModemConfig.
 *
 * MDMOID_OAMFAXMD_CFG 2515
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceT38Enable;	/**< VoiceT38Enable */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    voiceFaxModemControl;	/**< VoiceFaxModemControl */
#endif
} OAMFAXMDCfgObject;

/*! \brief _OAMFAXMDCfgObject is used internally to represent OAMFAXMDCfgObject */
typedef OAMFAXMDCfgObject _OAMFAXMDCfgObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.POTSStatus.
 *
 * MDMOID_OAMPOTS_STS 2516
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    SINT32    branch;	/**< Branch */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    leaf;	/**< Leaf */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    variableWidth;	/**< VariableWidth */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    IADPortStatus;	/**< IADPortStatus */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    portServiceState;	/**< iadPortServiceState */
#endif
#ifdef DMP_ENDPOINT_1
    UINT32    portCodecMode;	/**< iadPortCodecMode */
#endif
} OAMPOTSStsObject;

/*! \brief _OAMPOTSStsObject is used internally to represent OAMPOTSStsObject */
typedef OAMPOTSStsObject _OAMPOTSStsObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.IADOperation.
 *
 * MDMOID_OAMIAD_OP 2517
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    UINT32    operation;	/**< iadOperation */
#endif
} OAMIADOpObject;

/*! \brief _OAMIADOpObject is used internally to represent OAMIADOpObject */
typedef OAMIADOpObject _OAMIADOpObject;



/*! \brief Obj struct for InternetGatewayDevice.X_CT_OAM.SIPDigitMap.
 *
 * MDMOID_OAMSIP_DGT_MP 2518
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_ENDPOINT_1
    char *    SIPDigitalMap;	/**< SIPDigitalMap */
#endif
} OAMSIPDgtMpObject;

/*! \brief _OAMSIPDgtMpObject is used internally to represent OAMSIPDgtMpObject */
typedef OAMSIPDgtMpObject _OAMSIPDgtMpObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.
 *
 * MDMOID_DEV2_DEVICE 1000
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_DEVICE2_BASELINE_3
    char *    rootDataModelVersion;	/**< RootDataModelVersion */
#endif
    UINT32    interfaceStackNumberOfEntries;	/**< InterfaceStackNumberOfEntries */
} Dev2DeviceObject;

/*! \brief _Dev2DeviceObject is used internally to represent Dev2DeviceObject */
typedef Dev2DeviceObject _Dev2DeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Services.
 *
 * MDMOID_DEV2_SERVICES 1001
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    storageServiceNumberOfEntries;	/**< StorageServiceNumberOfEntries */
    UINT32    voiceServiceNumberOfEntries;	/**< VoiceServiceNumberOfEntries */
} Dev2ServicesObject;

/*! \brief _Dev2ServicesObject is used internally to represent Dev2ServicesObject */
typedef Dev2ServicesObject _Dev2ServicesObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.GatewayInfo.
 *
 * MDMOID_DEV2_GATEWAY_INFO 1040
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    productClass;	/**< ProductClass */
    char *    serialNumber;	/**< SerialNumber */
} Dev2GatewayInfoObject;

/*! \brief _Dev2GatewayInfoObject is used internally to represent Dev2GatewayInfoObject */
typedef Dev2GatewayInfoObject _Dev2GatewayInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.InterfaceStack.{i}.
 *
 * MDMOID_DEV2_INTERFACE_STACK 1060
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
#ifdef DMP_DEVICE2_BASELINE_2
    char *    higherLayer;	/**< HigherLayer */
#endif
#ifdef DMP_DEVICE2_BASELINE_2
    char *    lowerLayer;	/**< LowerLayer */
#endif
    char *    higherAlias;	/**< HigherAlias */
    char *    lowerAlias;	/**< LowerAlias */
} Dev2InterfaceStackObject;

/*! \brief _Dev2InterfaceStackObject is used internally to represent Dev2InterfaceStackObject */
typedef Dev2InterfaceStackObject _Dev2InterfaceStackObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Optical.
 *
 * MDMOID_DEVICE_OPTICAL 1110
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
} DeviceOpticalObject;

/*! \brief _DeviceOpticalObject is used internally to represent DeviceOpticalObject */
typedef DeviceOpticalObject _DeviceOpticalObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Optical.Interface.{i}.
 *
 * MDMOID_OPTICAL_INTERFACE 1111
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
    SINT32    opticalSignalLevel;	/**< OpticalSignalLevel */
    SINT32    transmitOpticalLevel;	/**< TransmitOpticalLevel */
} OpticalInterfaceObject;

/*! \brief _OpticalInterfaceObject is used internally to represent OpticalInterfaceObject */
typedef OpticalInterfaceObject _OpticalInterfaceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Optical.Interface.{i}.Stats.
 *
 * MDMOID_OPTICAL_INTERFACE_STATS 1112
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastPacketsSent;	/**< X_BROADCOM_COM_MulticastPacketsSent */
    UINT32    X_BROADCOM_COM_MulticastPacketsReceived;	/**< X_BROADCOM_COM_MulticastPacketsReceived */
    UINT32    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT32    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT32    X_BROADCOM_COM_UnicastPacketsSent;	/**< X_BROADCOM_COM_UnicastPacketsSent */
    UINT32    X_BROADCOM_COM_UnicastPacketsReceived;	/**< X_BROADCOM_COM_UnicastPacketsReceived */
    UINT32    X_BROADCOM_COM_BroadcastPacketsSent;	/**< X_BROADCOM_COM_BroadcastPacketsSent */
    UINT32    X_BROADCOM_COM_BroadcastPacketsReceived;	/**< X_BROADCOM_COM_BroadcastPacketsReceived */
} OpticalInterfaceStatsObject;

/*! \brief _OpticalInterfaceStatsObject is used internally to represent OpticalInterfaceStatsObject */
typedef OpticalInterfaceStatsObject _OpticalInterfaceStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Cellular.
 *
 * MDMOID_DEV2_CELLULAR 1190
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    UBOOL8    roamingEnabled;	/**< RoamingEnabled */
#endif
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    char *    roamingStatus;	/**< RoamingStatus */
#endif
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
    UINT32    accessPointNumberOfEntries;	/**< AccessPointNumberOfEntries */
} Dev2CellularObject;

/*! \brief _Dev2CellularObject is used internally to represent Dev2CellularObject */
typedef Dev2CellularObject _Dev2CellularObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Cellular.Interface.{i}.
 *
 * MDMOID_DEV2_CELLULAR_INTERFACE 1191
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    char *    alias;	/**< Alias */
#endif
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    char *    name;	/**< Name */
#endif
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    UINT32    lastChange;	/**< LastChange */
#endif
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    char *    IMEI;	/**< IMEI */
#endif
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    char *    supportedAccessTechnologies;	/**< SupportedAccessTechnologies */
#endif
    char *    currentAccessTechnology;	/**< CurrentAccessTechnology */
    char *    networkInUse;	/**< NetworkInUse */
    SINT32    RSSI;	/**< RSSI */
    UINT32    upstreamMaxBitRate;	/**< UpstreamMaxBitRate */
    UINT32    downstreamMaxBitRate;	/**< DownstreamMaxBitRate */
} Dev2CellularInterfaceObject;

/*! \brief _Dev2CellularInterfaceObject is used internally to represent Dev2CellularInterfaceObject */
typedef Dev2CellularInterfaceObject _Dev2CellularInterfaceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Cellular.Interface.{i}.USIM.
 *
 * MDMOID_DEV2_CELLULAR_INTERFACE_USIM 1192
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    char *    IMSI;	/**< IMSI */
#endif
#ifdef DMP_CELLULARINTERFACEEXTENDED_1
    char *    ICCID;	/**< ICCID */
#endif
    char *    MSISDN;	/**< MSISDN */
} Dev2CellularInterfaceUsimObject;

/*! \brief _Dev2CellularInterfaceUsimObject is used internally to represent Dev2CellularInterfaceUsimObject */
typedef Dev2CellularInterfaceUsimObject _Dev2CellularInterfaceUsimObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Cellular.Interface.{i}.Stats.
 *
 * MDMOID_DEV2_CELLULAR_INTERFACE_STATS 1193
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2CellularInterfaceStatsObject;

/*! \brief _Dev2CellularInterfaceStatsObject is used internally to represent Dev2CellularInterfaceStatsObject */
typedef Dev2CellularInterfaceStatsObject _Dev2CellularInterfaceStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Cellular.AccessPoint.{i}.
 *
 * MDMOID_DEV2_CELLULAR_ACCESS_POINT 1194
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    X_BROADCOM_COM_Id;	/**< X_BROADCOM_COM_Id */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    char *    APN;	/**< APN */
    char *    X_BROADCOM_COM_Type;	/**< X_BROADCOM_COM_Type */
    char *    X_BROADCOM_COM_MCC;	/**< X_BROADCOM_COM_MCC */
    char *    X_BROADCOM_COM_MNC;	/**< X_BROADCOM_COM_MNC */
    UINT32    X_BROADCOM_COM_IpVer;	/**< X_BROADCOM_COM_IpVer */
    char *    X_BROADCOM_COM_Carrier;	/**< X_BROADCOM_COM_Carrier */
    char *    X_BROADCOM_COM_Mmsproxy;	/**< X_BROADCOM_COM_Mmsproxy */
    UINT32    X_BROADCOM_COM_Mmsport;	/**< X_BROADCOM_COM_Mmsport */
    char *    X_BROADCOM_COM_Mmsc;	/**< X_BROADCOM_COM_Mmsc */
    SINT32    X_BROADCOM_COM_Authtype;	/**< X_BROADCOM_COM_Authtype */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    proxy;	/**< Proxy */
    UINT32    proxyPort;	/**< ProxyPort */
    char *    interface;	/**< Interface */
} Dev2CellularAccessPointObject;

/*! \brief _Dev2CellularAccessPointObject is used internally to represent Dev2CellularAccessPointObject */
typedef Dev2CellularAccessPointObject _Dev2CellularAccessPointObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Cellular.X_BROADCOM_COM_Link.{i}.
 *
 * MDMOID_DEV2_CELLULAR_LINK 1195
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
} Dev2CellularLinkObject;

/*! \brief _Dev2CellularLinkObject is used internally to represent Dev2CellularLinkObject */
typedef Dev2CellularLinkObject _Dev2CellularLinkObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Ethernet.
 *
 * MDMOID_DEV2_ETHERNET 1150
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
#ifdef DMP_DEVICE2_ETHERNETLINK_1
    UINT32    linkNumberOfEntries;	/**< LinkNumberOfEntries */
#endif
#ifdef DMP_DEVICE2_VLANTERMINATION_1
    UINT32    VLANTerminationNumberOfEntries;	/**< VLANTerminationNumberOfEntries */
#endif
} Dev2EthernetObject;

/*! \brief _Dev2EthernetObject is used internally to represent Dev2EthernetObject */
typedef Dev2EthernetObject _Dev2EthernetObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Ethernet.Interface.{i}.
 *
 * MDMOID_DEV2_ETHERNET_INTERFACE 1152
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
    char *    MACAddress;	/**< MACAddress */
    SINT32    maxBitRate;	/**< MaxBitRate */
    char *    duplexMode;	/**< DuplexMode */
    UBOOL8    X_BROADCOM_COM_GMAC_Enabled;	/**< X_BROADCOM_COM_GMAC_Enabled */
    SINT32    X_BROADCOM_COM_ShapingRate;	/**< X_BROADCOM_COM_ShapingRate */
    UINT32    X_BROADCOM_COM_ShapingBurstSize;	/**< X_BROADCOM_COM_ShapingBurstSize */
    char *    X_BROADCOM_COM_WanLan_Attribute;	/**< X_BROADCOM_COM_WanLan_Attribute */
} Dev2EthernetInterfaceObject;

/*! \brief _Dev2EthernetInterfaceObject is used internally to represent Dev2EthernetInterfaceObject */
typedef Dev2EthernetInterfaceObject _Dev2EthernetInterfaceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Ethernet.Interface.{i}.Stats.
 *
 * MDMOID_DEV2_ETHERNET_INTERFACE_STATS 1153
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT64    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
} Dev2EthernetInterfaceStatsObject;

/*! \brief _Dev2EthernetInterfaceStatsObject is used internally to represent Dev2EthernetInterfaceStatsObject */
typedef Dev2EthernetInterfaceStatsObject _Dev2EthernetInterfaceStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Ethernet.Link.{i}.
 *
 * MDMOID_DEV2_ETHERNET_LINK 1154
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    char *    MACAddress;	/**< MACAddress */
} Dev2EthernetLinkObject;

/*! \brief _Dev2EthernetLinkObject is used internally to represent Dev2EthernetLinkObject */
typedef Dev2EthernetLinkObject _Dev2EthernetLinkObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Ethernet.VLANTermination.{i}.
 *
 * MDMOID_DEV2_VLAN_TERMINATION 1156
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    SINT32    VLANID;	/**< VLANID */
    UINT32    TPID;	/**< TPID */
    SINT32    X_BROADCOM_COM_Vlan8021p;	/**< X_BROADCOM_COM_Vlan8021p */
} Dev2VlanTerminationObject;

/*! \brief _Dev2VlanTerminationObject is used internally to represent Dev2VlanTerminationObject */
typedef Dev2VlanTerminationObject _Dev2VlanTerminationObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.HomePlug.
 *
 * MDMOID_DEVICE_HOME_PLUG 1230
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
} DeviceHomePlugObject;

/*! \brief _DeviceHomePlugObject is used internally to represent DeviceHomePlugObject */
typedef DeviceHomePlugObject _DeviceHomePlugObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.HomePlug.Interface.{i}.
 *
 * MDMOID_HOME_PLUG_INTERFACE 1231
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
    char *    MACAddress;	/**< MACAddress */
    char *    logicalNetwork;	/**< LogicalNetwork */
    char *    version;	/**< Version */
    char *    firmwareVersion;	/**< FirmwareVersion */
    char *    X_BROADCOM_COM_PLCFwBuildMsg;	/**< X_BROADCOM_COM_PLCFwBuildMsg */
    UBOOL8    forceCCo;	/**< ForceCCo */
    char *    networkPassword;	/**< NetworkPassword */
    char *    otherNetworksPresent;	/**< OtherNetworksPresent */
    UINT32    maxBitRate;	/**< MaxBitRate */
    UINT32    associatedDeviceNumberOfEntries;	/**< AssociatedDeviceNumberOfEntries */
#ifdef DMP_DEVICE2_HOMEPLUG_DEBUG_1
    UINT32    X_BROADCOM_COM_DiagPeriodicInterval;	/**< X_BROADCOM_COM_DiagPeriodicInterval */
#endif
#ifdef DMP_DEVICE2_HOMEPLUG_DEBUG_1
    BASE64    X_BROADCOM_COM_PLCPHY_Counters;	/**< X_BROADCOM_COM_PLCPHY_Counters */
#endif
    SINT32    X_BROADCOM_COM_PLCPHY_Temperature;	/**< X_BROADCOM_COM_PLCPHY_Temperature */
} HomePlugInterfaceObject;

/*! \brief _HomePlugInterfaceObject is used internally to represent HomePlugInterfaceObject */
typedef HomePlugInterfaceObject _HomePlugInterfaceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.HomePlug.Interface.{i}.Stats.
 *
 * MDMOID_HOME_PLUG_INTERFACE_STATS 1232
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
    UINT64    MPDUTxAck;	/**< MPDUTxAck */
    UINT64    MPDUTxCol;	/**< MPDUTxCol */
    UINT64    MPDUTxFailed;	/**< MPDUTxFailed */
    UINT64    MPDURxAck;	/**< MPDURxAck */
    UINT64    MPDURxFailed;	/**< MPDURxFailed */
} HomePlugInterfaceStatsObject;

/*! \brief _HomePlugInterfaceStatsObject is used internally to represent HomePlugInterfaceStatsObject */
typedef HomePlugInterfaceStatsObject _HomePlugInterfaceStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.HomePlug.Interface.{i}.AssociatedDevice.{i}.
 *
 * MDMOID_HOME_PLUG_INTERFACE_ASSOCIATED_DEVICE 1233
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    MACAddress;	/**< MACAddress */
    UINT32    txPhyRate;	/**< TxPhyRate */
    UINT32    rxPhyRate;	/**< RxPhyRate */
    char *    SNRPerTone;	/**< SNRPerTone */
    UINT32    avgAttenuation;	/**< AvgAttenuation */
    char *    endStationMACs;	/**< EndStationMACs */
    UBOOL8    active;	/**< Active */
    char *    X_BROADCOM_COM_FirmwareVersion;	/**< X_BROADCOM_COM_FirmwareVersion */
    UINT32    X_BROADCOM_COM_Uptime;	/**< X_BROADCOM_COM_Uptime */
#ifdef DMP_DEVICE2_HOMEPLUG_DEBUG_1
    BASE64    X_BROADCOM_COM_Overview;	/**< X_BROADCOM_COM_Overview */
#endif
#ifdef DMP_DEVICE2_HOMEPLUG_DEBUG_1
    BASE64    X_BROADCOM_COM_SNRPerTone;	/**< X_BROADCOM_COM_SNRPerTone */
#endif
} HomePlugInterfaceAssociatedDeviceObject;

/*! \brief _HomePlugInterfaceAssociatedDeviceObject is used internally to represent HomePlugInterfaceAssociatedDeviceObject */
typedef HomePlugInterfaceAssociatedDeviceObject _HomePlugInterfaceAssociatedDeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.PPP.
 *
 * MDMOID_DEV2_PPP 1290
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
#ifdef DMP_DEVICE2_PPPINTERFACE_2
    char *    supportedNCPs;	/**< SupportedNCPs */
#endif
} Dev2PppObject;

/*! \brief _Dev2PppObject is used internally to represent Dev2PppObject */
typedef Dev2PppObject _Dev2PppObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.PPP.Interface.{i}.
 *
 * MDMOID_DEV2_PPP_INTERFACE 1291
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    reset;	/**< Reset */
    char *    connectionStatus;	/**< ConnectionStatus */
    char *    lastConnectionError;	/**< LastConnectionError */
    UINT32    autoDisconnectTime;	/**< AutoDisconnectTime */
    UINT32    idleDisconnectTime;	/**< IdleDisconnectTime */
    UINT32    warnDisconnectDelay;	/**< WarnDisconnectDelay */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    char *    encryptionProtocol;	/**< EncryptionProtocol */
    char *    compressionProtocol;	/**< CompressionProtocol */
    char *    authenticationProtocol;	/**< AuthenticationProtocol */
    UINT32    maxMRUSize;	/**< MaxMRUSize */
    UINT32    currentMRUSize;	/**< CurrentMRUSize */
    char *    connectionTrigger;	/**< ConnectionTrigger */
    UINT32    LCPEcho;	/**< LCPEcho */
    UINT32    LCPEchoRetry;	/**< LCPEchoRetry */
    UBOOL8    IPCPEnable;	/**< IPCPEnable */
#ifdef DMP_DEVICE2_PPPINTERFACE_2
    UBOOL8    IPv6CPEnable;	/**< IPv6CPEnable */
#endif
    UINT32    X_BROADCOM_COM_Pid;	/**< X_BROADCOM_COM_Pid */
    UINT32    X_BROADCOM_COM_ConnectionEstablishedTime;	/**< X_BROADCOM_COM_ConnectionEstablishedTime */
    UBOOL8    X_BROADCOM_COM_UseStaticIPAddress;	/**< X_BROADCOM_COM_UseStaticIPAddress */
    char *    X_BROADCOM_COM_LocalIPAddress;	/**< X_BROADCOM_COM_LocalIPAddress */
    UBOOL8    X_BROADCOM_COM_Enable_Debug;	/**< X_BROADCOM_COM_Enable_Debug */
    char *    X_BROADCOM_COM_UserRequest;	/**< X_BROADCOM_COM_UserRequest */
#ifdef DMP_X_BROADCOM_COM_GPONWAN_1
    UBOOL8    X_BROADCOM_COM_NoMcastVlanFilter;	/**< X_BROADCOM_COM_NoMcastVlanFilter */
#endif
} Dev2PppInterfaceObject;

/*! \brief _Dev2PppInterfaceObject is used internally to represent Dev2PppInterfaceObject */
typedef Dev2PppInterfaceObject _Dev2PppInterfaceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.PPP.Interface.{i}.PPPoA.
 *
 * MDMOID_DEV2_PPP_INTERFACE_PPOA 1292
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2PppInterfacePpoaObject;

/*! \brief _Dev2PppInterfacePpoaObject is used internally to represent Dev2PppInterfacePpoaObject */
typedef Dev2PppInterfacePpoaObject _Dev2PppInterfacePpoaObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.PPP.Interface.{i}.PPPoE.
 *
 * MDMOID_DEV2_PPP_INTERFACE_PPOE 1293
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    sessionID;	/**< SessionID */
    char *    ACName;	/**< ACName */
    char *    serviceName;	/**< ServiceName */
    UBOOL8    X_BROADCOM_COM_AddPppToBridge;	/**< X_BROADCOM_COM_AddPppToBridge */
    UBOOL8    X_BROADCOM_COM_IPExtension;	/**< X_BROADCOM_COM_IPExtension */
} Dev2PppInterfacePpoeObject;

/*! \brief _Dev2PppInterfacePpoeObject is used internally to represent Dev2PppInterfacePpoeObject */
typedef Dev2PppInterfacePpoeObject _Dev2PppInterfacePpoeObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.PPP.Interface.{i}.IPCP.
 *
 * MDMOID_DEV2_PPP_INTERFACE_IPCP 1294
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    localIPAddress;	/**< LocalIPAddress */
    char *    remoteIPAddress;	/**< RemoteIPAddress */
    char *    DNSServers;	/**< DNSServers */
} Dev2PppInterfaceIpcpObject;

/*! \brief _Dev2PppInterfaceIpcpObject is used internally to represent Dev2PppInterfaceIpcpObject */
typedef Dev2PppInterfaceIpcpObject _Dev2PppInterfaceIpcpObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.PPP.Interface.{i}.IPv6CP.
 *
 * MDMOID_DEV2_PPP_INTERFACE_IPV6CP 1295
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    localInterfaceIdentifier;	/**< LocalInterfaceIdentifier */
    char *    remoteInterfaceIdentifier;	/**< RemoteInterfaceIdentifier */
} Dev2PppInterfaceIpv6cpObject;

/*! \brief _Dev2PppInterfaceIpv6cpObject is used internally to represent Dev2PppInterfaceIpv6cpObject */
typedef Dev2PppInterfaceIpv6cpObject _Dev2PppInterfaceIpv6cpObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.PPP.Interface.{i}.Stats.
 *
 * MDMOID_DEV2_PPP_INTERFACE_STATS 1296
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT64    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
} Dev2PppInterfaceStatsObject;

/*! \brief _Dev2PppInterfaceStatsObject is used internally to represent Dev2PppInterfaceStatsObject */
typedef Dev2PppInterfaceStatsObject _Dev2PppInterfaceStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IP.
 *
 * MDMOID_DEV2_IP 1400
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    IPv4Capable;	/**< IPv4Capable */
#ifdef DMP_DEVICE2_IPINTERFACE_2
    UBOOL8    IPv4Enable;	/**< IPv4Enable */
#endif
#ifdef DMP_DEVICE2_IPINTERFACE_2
    char *    IPv4Status;	/**< IPv4Status */
#endif
#ifdef DMP_DEVICE2_IPV6INTERFACE_1
    UBOOL8    IPv6Capable;	/**< IPv6Capable */
#endif
#ifdef DMP_DEVICE2_IPV6INTERFACE_1
    UBOOL8    IPv6Enable;	/**< IPv6Enable */
#endif
#ifdef DMP_DEVICE2_IPV6INTERFACE_1
    char *    IPv6Status;	/**< IPv6Status */
#endif
#ifdef DMP_DEVICE2_IPV6INTERFACE_1
    char *    ULAPrefix;	/**< ULAPrefix */
#endif
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
} Dev2IpObject;

/*! \brief _Dev2IpObject is used internally to represent Dev2IpObject */
typedef Dev2IpObject _Dev2IpObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IP.Interface.{i}.
 *
 * MDMOID_DEV2_IP_INTERFACE 1401
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
#ifdef DMP_DEVICE2_IPINTERFACE_2
    UBOOL8    IPv4Enable;	/**< IPv4Enable */
#endif
#ifdef DMP_DEVICE2_IPV6INTERFACE_1
    UBOOL8    IPv6Enable;	/**< IPv6Enable */
#endif
#ifdef DMP_DEVICE2_IPV6INTERFACE_1
    UBOOL8    ULAEnable;	/**< ULAEnable */
#endif
    UBOOL8    X_BROADCOM_COM_ULARandom;	/**< X_BROADCOM_COM_ULARandom */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    char *    router;	/**< Router */
    UBOOL8    reset;	/**< Reset */
    UINT32    maxMTUSize;	/**< MaxMTUSize */
    char *    type;	/**< Type */
    UBOOL8    loopback;	/**< Loopback */
    UINT32    IPv4AddressNumberOfEntries;	/**< IPv4AddressNumberOfEntries */
#ifdef DMP_DEVICE2_IPV6INTERFACE_1
    UINT32    IPv6AddressNumberOfEntries;	/**< IPv6AddressNumberOfEntries */
#endif
#ifdef DMP_DEVICE2_IPV6INTERFACE_1
    UINT32    IPv6PrefixNumberOfEntries;	/**< IPv6PrefixNumberOfEntries */
#endif
    UBOOL8    autoIPEnable;	/**< AutoIPEnable */
    char *    X_BROADCOM_COM_IPv4ServiceStatus;	/**< X_BROADCOM_COM_IPv4ServiceStatus */
    char *    X_BROADCOM_COM_IPv6ServiceStatus;	/**< X_BROADCOM_COM_IPv6ServiceStatus */
    UBOOL8    X_BROADCOM_COM_Upstream;	/**< X_BROADCOM_COM_Upstream */
    char *    X_BROADCOM_COM_GroupName;	/**< X_BROADCOM_COM_GroupName */
    UBOOL8    X_BROADCOM_COM_BridgeService;	/**< X_BROADCOM_COM_BridgeService */
    char *    X_BROADCOM_COM_BridgeName;	/**< X_BROADCOM_COM_BridgeName */
    UBOOL8    X_BROADCOM_COM_BridgeNeedsIpAddr;	/**< X_BROADCOM_COM_BridgeNeedsIpAddr */
    UBOOL8    X_BROADCOM_COM_FirewallEnabled;	/**< X_BROADCOM_COM_FirewallEnabled */
#ifdef DMP_X_BROADCOM_COM_IGMP_1
    UBOOL8    X_BROADCOM_COM_IGMPEnabled;	/**< X_BROADCOM_COM_IGMPEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_IGMP_1
    UBOOL8    X_BROADCOM_COM_IGMP_SOURCEEnabled;	/**< X_BROADCOM_COM_IGMP_SOURCEEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_MLD_1
    UBOOL8    X_BROADCOM_COM_MLDEnabled;	/**< X_BROADCOM_COM_MLDEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_MLD_1
    UBOOL8    X_BROADCOM_COM_MLD_SOURCEEnabled;	/**< X_BROADCOM_COM_MLD_SOURCEEnabled */
#endif
#ifdef DMP_X_BROADCOM_COM_GPONWAN_1
    UBOOL8    X_BROADCOM_COM_NoMcastVlanFilter;	/**< X_BROADCOM_COM_NoMcastVlanFilter */
#endif
    UBOOL8    X_BROADCOM_COM_Mflag_Upstream;	/**< X_BROADCOM_COM_Mflag_Upstream */
    UINT32    X_BROADCOM_COM_PCPMode;	/**< X_BROADCOM_COM_PCPMode */
    char *    X_BROADCOM_COM_PCPServer;	/**< X_BROADCOM_COM_PCPServer */
} Dev2IpInterfaceObject;

/*! \brief _Dev2IpInterfaceObject is used internally to represent Dev2IpInterfaceObject */
typedef Dev2IpInterfaceObject _Dev2IpInterfaceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IP.Interface.{i}.IPv4Address.{i}.
 *
 * MDMOID_DEV2_IPV4_ADDRESS 1402
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
#ifdef DMP_DEVICE2_IPINTERFACE_2
    char *    status;	/**< Status */
#endif
    char *    alias;	/**< Alias */
    char *    IPAddress;	/**< IPAddress */
    char *    subnetMask;	/**< SubnetMask */
    char *    addressingType;	/**< AddressingType */
} Dev2Ipv4AddressObject;

/*! \brief _Dev2Ipv4AddressObject is used internally to represent Dev2Ipv4AddressObject */
typedef Dev2Ipv4AddressObject _Dev2Ipv4AddressObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IP.Interface.{i}.IPv6Address.{i}.
 *
 * MDMOID_DEV2_IPV6_ADDRESS 1403
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    IPAddressStatus;	/**< IPAddressStatus */
    char *    alias;	/**< Alias */
    char *    IPAddress;	/**< IPAddress */
    char *    origin;	/**< Origin */
    char *    prefix;	/**< Prefix */
    DATETIME  preferredLifetime;	/**< PreferredLifetime */
    DATETIME  validLifetime;	/**< ValidLifetime */
    SINT32    X_BROADCOM_COM_Plt;	/**< X_BROADCOM_COM_Plt */
    SINT32    X_BROADCOM_COM_Vlt;	/**< X_BROADCOM_COM_Vlt */
    UBOOL8    anycast;	/**< Anycast */
} Dev2Ipv6AddressObject;

/*! \brief _Dev2Ipv6AddressObject is used internally to represent Dev2Ipv6AddressObject */
typedef Dev2Ipv6AddressObject _Dev2Ipv6AddressObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IP.Interface.{i}.IPv6Prefix.{i}.
 *
 * MDMOID_DEV2_IPV6_PREFIX 1404
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    prefixStatus;	/**< PrefixStatus */
    char *    alias;	/**< Alias */
    char *    prefix;	/**< Prefix */
    char *    origin;	/**< Origin */
    char *    staticType;	/**< StaticType */
    char *    parentPrefix;	/**< ParentPrefix */
    char *    childPrefixBits;	/**< ChildPrefixBits */
    UBOOL8    onLink;	/**< OnLink */
    UBOOL8    autonomous;	/**< Autonomous */
    DATETIME  preferredLifetime;	/**< PreferredLifetime */
    DATETIME  validLifetime;	/**< ValidLifetime */
    SINT32    X_BROADCOM_COM_Plt;	/**< X_BROADCOM_COM_Plt */
    SINT32    X_BROADCOM_COM_Vlt;	/**< X_BROADCOM_COM_Vlt */
    UBOOL8    X_BROADCOM_COM_UniqueLocalFlag;	/**< X_BROADCOM_COM_UniqueLocalFlag */
} Dev2Ipv6PrefixObject;

/*! \brief _Dev2Ipv6PrefixObject is used internally to represent Dev2Ipv6PrefixObject */
typedef Dev2Ipv6PrefixObject _Dev2Ipv6PrefixObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IP.Interface.{i}.Stats.
 *
 * MDMOID_DEV2_IP_STATS 1405
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT64    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
} Dev2IpStatsObject;

/*! \brief _Dev2IpStatsObject is used internally to represent Dev2IpStatsObject */
typedef Dev2IpStatsObject _Dev2IpStatsObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Routing.
 *
 * MDMOID_DEV2_ROUTING 1460
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    routerNumberOfEntries;	/**< RouterNumberOfEntries */
} Dev2RoutingObject;

/*! \brief _Dev2RoutingObject is used internally to represent Dev2RoutingObject */
typedef Dev2RoutingObject _Dev2RoutingObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Routing.Router.{i}.
 *
 * MDMOID_DEV2_ROUTER 1461
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    UINT32    IPv4ForwardingNumberOfEntries;	/**< IPv4ForwardingNumberOfEntries */
#ifdef DMP_DEVICE2_IPV6ROUTING_1
    UINT32    IPv6ForwardingNumberOfEntries;	/**< IPv6ForwardingNumberOfEntries */
#endif
    char *    X_BROADCOM_COM_DefaultConnectionServices;	/**< X_BROADCOM_COM_DefaultConnectionServices */
    char *    X_BROADCOM_COM_ActiveDefaultGateway;	/**< X_BROADCOM_COM_ActiveDefaultGateway */
#ifdef DMP_X_BROADCOM_COM_DEV2_IPV6_1
    char *    X_BROADCOM_COM_DefaultIpv6ConnectionServices;	/**< X_BROADCOM_COM_DefaultIpv6ConnectionServices */
#endif
#ifdef DMP_X_BROADCOM_COM_DEV2_IPV6_1
    char *    X_BROADCOM_COM_ActiveIpv6DefaultGateway;	/**< X_BROADCOM_COM_ActiveIpv6DefaultGateway */
#endif
} Dev2RouterObject;

/*! \brief _Dev2RouterObject is used internally to represent Dev2RouterObject */
typedef Dev2RouterObject _Dev2RouterObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Routing.Router.{i}.IPv4Forwarding.{i}.
 *
 * MDMOID_DEV2_IPV4_FORWARDING 1462
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    UBOOL8    staticRoute;	/**< StaticRoute */
    char *    destIPAddress;	/**< DestIPAddress */
    char *    destSubnetMask;	/**< DestSubnetMask */
    char *    gatewayIPAddress;	/**< GatewayIPAddress */
    char *    interface;	/**< Interface */
#ifdef DMP_DEVICE2_ROUTING_2
    char *    origin;	/**< Origin */
#endif
    SINT32    forwardingMetric;	/**< ForwardingMetric */
    char *    X_BROADCOM_COM_PolicyRoutingName;	/**< X_BROADCOM_COM_PolicyRoutingName */
    char *    X_BROADCOM_COM_SourceIfName;	/**< X_BROADCOM_COM_SourceIfName */
    char *    X_BROADCOM_COM_SourceIPAddress;	/**< X_BROADCOM_COM_SourceIPAddress */
} Dev2Ipv4ForwardingObject;

/*! \brief _Dev2Ipv4ForwardingObject is used internally to represent Dev2Ipv4ForwardingObject */
typedef Dev2Ipv4ForwardingObject _Dev2Ipv4ForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Routing.Router.{i}.IPv6Forwarding.{i}.
 *
 * MDMOID_DEV2_IPV6_FORWARDING 1463
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    destIPPrefix;	/**< DestIPPrefix */
    char *    nextHop;	/**< NextHop */
    char *    interface;	/**< Interface */
    char *    origin;	/**< Origin */
    SINT32    forwardingMetric;	/**< ForwardingMetric */
} Dev2Ipv6ForwardingObject;

/*! \brief _Dev2Ipv6ForwardingObject is used internally to represent Dev2Ipv6ForwardingObject */
typedef Dev2Ipv6ForwardingObject _Dev2Ipv6ForwardingObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Routing.RouteInformation.
 *
 * MDMOID_DEV2_ROUTE_INFO 1466
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    interfaceSettingNumberOfEntries;	/**< InterfaceSettingNumberOfEntries */
} Dev2RouteInfoObject;

/*! \brief _Dev2RouteInfoObject is used internally to represent Dev2RouteInfoObject */
typedef Dev2RouteInfoObject _Dev2RouteInfoObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.Routing.RouteInformation.InterfaceSetting.{i}.
 *
 * MDMOID_DEV2_ROUTE_INFO_INTF_SETTING 1467
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    status;	/**< Status */
    char *    interface;	/**< Interface */
    char *    sourceRouter;	/**< SourceRouter */
    char *    preferredRouteFlag;	/**< PreferredRouteFlag */
    char *    prefix;	/**< Prefix */
    DATETIME  routeLifetime;	/**< RouteLifetime */
} Dev2RouteInfoIntfSettingObject;

/*! \brief _Dev2RouteInfoIntfSettingObject is used internally to represent Dev2RouteInfoIntfSettingObject */
typedef Dev2RouteInfoIntfSettingObject _Dev2RouteInfoIntfSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.NeighborDiscovery.
 *
 * MDMOID_DEV2_NEIGHBOR_DISCOVERY 1470
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    interfaceSettingNumberOfEntries;	/**< InterfaceSettingNumberOfEntries */
} Dev2NeighborDiscoveryObject;

/*! \brief _Dev2NeighborDiscoveryObject is used internally to represent Dev2NeighborDiscoveryObject */
typedef Dev2NeighborDiscoveryObject _Dev2NeighborDiscoveryObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.NeighborDiscovery.InterfaceSetting.{i}.
 *
 * MDMOID_DEV2_NEIGHBOR_DISCOVERY_INTERFACE_SETTING 1471
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    UINT32    retransTimer;	/**< RetransTimer */
    UINT32    rtrSolicitationInterval;	/**< RtrSolicitationInterval */
    UINT32    maxRtrSolicitations;	/**< MaxRtrSolicitations */
} Dev2NeighborDiscoveryInterfaceSettingObject;

/*! \brief _Dev2NeighborDiscoveryInterfaceSettingObject is used internally to represent Dev2NeighborDiscoveryInterfaceSettingObject */
typedef Dev2NeighborDiscoveryInterfaceSettingObject _Dev2NeighborDiscoveryInterfaceSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.RouterAdvertisement.
 *
 * MDMOID_DEV2_ROUTER_ADVERTISEMENT 1472
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    interfaceSettingNumberOfEntries;	/**< InterfaceSettingNumberOfEntries */
} Dev2RouterAdvertisementObject;

/*! \brief _Dev2RouterAdvertisementObject is used internally to represent Dev2RouterAdvertisementObject */
typedef Dev2RouterAdvertisementObject _Dev2RouterAdvertisementObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.RouterAdvertisement.InterfaceSetting.{i}.
 *
 * MDMOID_DEV2_ROUTER_ADVERTISEMENT_INTERFACE_SETTING 1473
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    char *    manualPrefixes;	/**< ManualPrefixes */
    char *    prefixes;	/**< Prefixes */
    UINT32    maxRtrAdvInterval;	/**< MaxRtrAdvInterval */
    UINT32    minRtrAdvInterval;	/**< MinRtrAdvInterval */
    UINT32    advDefaultLifetime;	/**< AdvDefaultLifetime */
    UBOOL8    advManagedFlag;	/**< AdvManagedFlag */
    UBOOL8    advOtherConfigFlag;	/**< AdvOtherConfigFlag */
    char *    advPreferredRouterFlag;	/**< AdvPreferredRouterFlag */
    UBOOL8    advNDProxyFlag;	/**< AdvNDProxyFlag */
    UINT32    advLinkMTU;	/**< AdvLinkMTU */
    UINT32    advReachableTime;	/**< AdvReachableTime */
    UINT32    advRetransTimer;	/**< AdvRetransTimer */
    UINT32    advCurHopLimit;	/**< AdvCurHopLimit */
    UINT32    optionNumberOfEntries;	/**< OptionNumberOfEntries */
} Dev2RouterAdvertisementInterfaceSettingObject;

/*! \brief _Dev2RouterAdvertisementInterfaceSettingObject is used internally to represent Dev2RouterAdvertisementInterfaceSettingObject */
typedef Dev2RouterAdvertisementInterfaceSettingObject _Dev2RouterAdvertisementInterfaceSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IPv6rd.
 *
 * MDMOID_DEV2_IPV6RD 1480
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    interfaceSettingNumberOfEntries;	/**< InterfaceSettingNumberOfEntries */
} Dev2Ipv6rdObject;

/*! \brief _Dev2Ipv6rdObject is used internally to represent Dev2Ipv6rdObject */
typedef Dev2Ipv6rdObject _Dev2Ipv6rdObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IPv6rd.InterfaceSetting.{i}.
 *
 * MDMOID_DEV2_IPV6RD_INTERFACE_SETTING 1481
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    borderRelayIPv4Addresses;	/**< BorderRelayIPv4Addresses */
    UBOOL8    allTrafficToBorderRelay;	/**< AllTrafficToBorderRelay */
    char *    SPIPv6Prefix;	/**< SPIPv6Prefix */
    UINT32    IPv4MaskLength;	/**< IPv4MaskLength */
    char *    addressSource;	/**< AddressSource */
    char *    tunnelInterface;	/**< TunnelInterface */
    char *    tunneledInterface;	/**< TunneledInterface */
    char *    X_BROADCOM_COM_TunnelName;	/**< X_BROADCOM_COM_TunnelName */
    char *    X_BROADCOM_COM_TunnelInterface;	/**< X_BROADCOM_COM_TunnelInterface */
    char *    X_BROADCOM_COM_TunneledInterface;	/**< X_BROADCOM_COM_TunneledInterface */
    UBOOL8    X_BROADCOM_COM_Dynamic;	/**< X_BROADCOM_COM_Dynamic */
} Dev2Ipv6rdInterfaceSettingObject;

/*! \brief _Dev2Ipv6rdInterfaceSettingObject is used internally to represent Dev2Ipv6rdInterfaceSettingObject */
typedef Dev2Ipv6rdInterfaceSettingObject _Dev2Ipv6rdInterfaceSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DSLite.
 *
 * MDMOID_DEV2_DSLITE 1490
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    interfaceSettingNumberOfEntries;	/**< InterfaceSettingNumberOfEntries */
} Dev2DsliteObject;

/*! \brief _Dev2DsliteObject is used internally to represent Dev2DsliteObject */
typedef Dev2DsliteObject _Dev2DsliteObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DSLite.InterfaceSetting.{i}.
 *
 * MDMOID_DEV2_DSLITE_INTERFACE_SETTING 1491
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    endpointAssignmentPrecedence;	/**< EndpointAssignmentPrecedence */
#ifdef DMP_DEVICE2_DSLITE_2
    char *    endpointAddressTypePrecedence;	/**< EndpointAddressTypePrecedence */
#endif
#ifdef DMP_DEVICE2_DSLITE_2
    char *    endpointAddressInUse;	/**< EndpointAddressInUse */
#endif
    char *    endpointName;	/**< EndpointName */
    char *    endpointAddress;	/**< EndpointAddress */
    char *    origin;	/**< Origin */
    char *    tunnelInterface;	/**< TunnelInterface */
    char *    tunneledInterface;	/**< TunneledInterface */
    char *    X_BROADCOM_COM_TunnelName;	/**< X_BROADCOM_COM_TunnelName */
    char *    X_BROADCOM_COM_TunnelInterface;	/**< X_BROADCOM_COM_TunnelInterface */
    char *    X_BROADCOM_COM_TunneledInterface;	/**< X_BROADCOM_COM_TunneledInterface */
} Dev2DsliteInterfaceSettingObject;

/*! \brief _Dev2DsliteInterfaceSettingObject is used internally to represent Dev2DsliteInterfaceSettingObject */
typedef Dev2DsliteInterfaceSettingObject _Dev2DsliteInterfaceSettingObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DNS.
 *
 * MDMOID_DEV2_DNS 1530
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2DnsObject;

/*! \brief _Dev2DnsObject is used internally to represent Dev2DnsObject */
typedef Dev2DnsObject _Dev2DnsObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DNS.Client.
 *
 * MDMOID_DEV2_DNS_CLIENT 1531
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    UINT32    serverNumberOfEntries;	/**< ServerNumberOfEntries */
    char *    X_BROADCOM_COM_DnsIfNames;	/**< X_BROADCOM_COM_DnsIfNames */
    char *    X_BROADCOM_COM_ActiveDnsIfName;	/**< X_BROADCOM_COM_ActiveDnsIfName */
    char *    X_BROADCOM_COM_ActiveDnsServers;	/**< X_BROADCOM_COM_ActiveDnsServers */
    char *    X_BROADCOM_COM_Ipv6_DnsIfNames;	/**< X_BROADCOM_COM_Ipv6_DnsIfNames */
    char *    X_BROADCOM_COM_Ipv6_ActiveDnsIfName;	/**< X_BROADCOM_COM_Ipv6_ActiveDnsIfName */
    char *    X_BROADCOM_COM_Ipv6_ActiveDnsServers;	/**< X_BROADCOM_COM_Ipv6_ActiveDnsServers */
} Dev2DnsClientObject;

/*! \brief _Dev2DnsClientObject is used internally to represent Dev2DnsClientObject */
typedef Dev2DnsClientObject _Dev2DnsClientObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DNS.Client.Server.{i}.
 *
 * MDMOID_DEV2_DNS_SERVER 1532
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    DNSServer;	/**< DNSServer */
    char *    interface;	/**< Interface */
    char *    type;	/**< Type */
} Dev2DnsServerObject;

/*! \brief _Dev2DnsServerObject is used internally to represent Dev2DnsServerObject */
typedef Dev2DnsServerObject _Dev2DnsServerObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.
 *
 * MDMOID_DEV2_DHCPV6 1580
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_X_BROADCOM_COM_IPV6_1
    UINT32    clientNumberOfEntries;	/**< ClientNumberOfEntries */
#endif
} Dev2Dhcpv6Object;

/*! \brief _Dev2Dhcpv6Object is used internally to represent Dev2Dhcpv6Object */
typedef Dev2Dhcpv6Object _Dev2Dhcpv6Object;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Client.{i}.
 *
 * MDMOID_DEV2_DHCPV6_CLIENT 1581
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    char *    status;	/**< Status */
    HEXBINARY  DUID;	/**< DUID */
    UBOOL8    requestAddresses;	/**< RequestAddresses */
    UBOOL8    requestPrefixes;	/**< RequestPrefixes */
    UBOOL8    rapidCommit;	/**< RapidCommit */
    UBOOL8    renew;	/**< Renew */
    UINT32    X_BROADCOM_COM_Pid;	/**< X_BROADCOM_COM_Pid */
    UBOOL8    X_BROADCOM_COM_UnnumberedModel;	/**< X_BROADCOM_COM_UnnumberedModel */
#ifdef DMP_DEVICE2_DHCPV6CLIENTSERVERIDENTITY_1
    UINT32    serverNumberOfEntries;	/**< ServerNumberOfEntries */
#endif
    UINT32    sentOptionNumberOfEntries;	/**< SentOptionNumberOfEntries */
    UINT32    receivedOptionNumberOfEntries;	/**< ReceivedOptionNumberOfEntries */
} Dev2Dhcpv6ClientObject;

/*! \brief _Dev2Dhcpv6ClientObject is used internally to represent Dev2Dhcpv6ClientObject */
typedef Dev2Dhcpv6ClientObject _Dev2Dhcpv6ClientObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Client.{i}.X_BROADCOM_COM_RcvOption.
 *
 * MDMOID_DEV2_DHCP6C_RCV_OPTION 1585
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    address;	/**< Address */
    SINT32    addressPlt;	/**< AddressPlt */
    SINT32    addressVlt;	/**< AddressVlt */
    char *    prefix;	/**< Prefix */
    SINT32    prefixPlt;	/**< PrefixPlt */
    SINT32    prefixVlt;	/**< PrefixVlt */
    char *    DNSServers;	/**< DNSServers */
    char *    domainName;	/**< DomainName */
    char *    aftr;	/**< Aftr */
    char *    maptBRPrefix;	/**< MaptBRPrefix */
    char *    maptRuleIPv4Prefix;	/**< MaptRuleIPv4Prefix */
    char *    maptRuleIPv6Prefix;	/**< MaptRuleIPv6Prefix */
    UINT32    maptEALen;	/**< MaptEALen */
    UINT32    maptPSIDOffset;	/**< MaptPSIDOffset */
    UINT32    maptPSIDLen;	/**< MaptPSIDLen */
    UINT32    maptPSID;	/**< MaptPSID */
    UBOOL8    maptIsFMR;	/**< MaptIsFMR */
} Dev2Dhcp6cRcvOptionObject;

/*! \brief _Dev2Dhcp6cRcvOptionObject is used internally to represent Dev2Dhcp6cRcvOptionObject */
typedef Dev2Dhcp6cRcvOptionObject _Dev2Dhcp6cRcvOptionObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Server.
 *
 * MDMOID_DEV2_DHCPV6_SERVER 1586
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    poolNumberOfEntries;	/**< PoolNumberOfEntries */
} Dev2Dhcpv6ServerObject;

/*! \brief _Dev2Dhcpv6ServerObject is used internally to represent Dev2Dhcpv6ServerObject */
typedef Dev2Dhcpv6ServerObject _Dev2Dhcpv6ServerObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Server.Pool.{i}.
 *
 * MDMOID_DEV2_DHCPV6_SERVER_POOL 1587
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    UINT32    order;	/**< Order */
    char *    interface;	/**< Interface */
#ifdef DMP_DEVICE2_DHCPV6SERVERADV_1
    HEXBINARY  DUID;	/**< DUID */
#endif
    UBOOL8    DUIDExclude;	/**< DUIDExclude */
#ifdef DMP_DEVICE2_DHCPV6SERVERADV_1
    HEXBINARY  vendorClassID;	/**< VendorClassID */
#endif
    UBOOL8    vendorClassIDExclude;	/**< VendorClassIDExclude */
#ifdef DMP_DEVICE2_DHCPV6SERVERADV_1
    HEXBINARY  userClassID;	/**< UserClassID */
#endif
    UBOOL8    userClassIDExclude;	/**< UserClassIDExclude */
#ifdef DMP_DEVICE2_DHCPV6SERVERADV_1
    char *    sourceAddress;	/**< SourceAddress */
#endif
#ifdef DMP_DEVICE2_DHCPV6SERVERADV_1
    char *    sourceAddressMask;	/**< SourceAddressMask */
#endif
    UBOOL8    sourceAddressExclude;	/**< SourceAddressExclude */
    UBOOL8    IANAEnable;	/**< IANAEnable */
    char *    IANAManualPrefixes;	/**< IANAManualPrefixes */
    char *    IANAPrefixes;	/**< IANAPrefixes */
    char *    X_BROADCOM_COM_MinInterfaceID;	/**< X_BROADCOM_COM_MinInterfaceID */
    char *    X_BROADCOM_COM_MaxInterfaceID;	/**< X_BROADCOM_COM_MaxInterfaceID */
    SINT32    X_BROADCOM_COM_IANALeaseTime;	/**< X_BROADCOM_COM_IANALeaseTime */
    UBOOL8    IAPDEnable;	/**< IAPDEnable */
    char *    IAPDManualPrefixes;	/**< IAPDManualPrefixes */
    char *    IAPDPrefixes;	/**< IAPDPrefixes */
    UINT32    IAPDAddLength;	/**< IAPDAddLength */
#ifdef DMP_DEVICE2_DHCPV6SERVERCLIENTINFO_1
    UINT32    clientNumberOfEntries;	/**< ClientNumberOfEntries */
#endif
    UINT32    optionNumberOfEntries;	/**< OptionNumberOfEntries */
} Dev2Dhcpv6ServerPoolObject;

/*! \brief _Dev2Dhcpv6ServerPoolObject is used internally to represent Dev2Dhcpv6ServerPoolObject */
typedef Dev2Dhcpv6ServerPoolObject _Dev2Dhcpv6ServerPoolObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Server.Pool.{i}.Client.{i}.
 *
 * MDMOID_DEV2_DHCPV6_SERVER_POOL_CLIENT 1588
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
    char *    sourceAddress;	/**< SourceAddress */
    UBOOL8    active;	/**< Active */
    UINT32    IPv6AddressNumberOfEntries;	/**< IPv6AddressNumberOfEntries */
    UINT32    IPv6PrefixNumberOfEntries;	/**< IPv6PrefixNumberOfEntries */
    UINT32    optionNumberOfEntries;	/**< OptionNumberOfEntries */
} Dev2Dhcpv6ServerPoolClientObject;

/*! \brief _Dev2Dhcpv6ServerPoolClientObject is used internally to represent Dev2Dhcpv6ServerPoolClientObject */
typedef Dev2Dhcpv6ServerPoolClientObject _Dev2Dhcpv6ServerPoolClientObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Server.Pool.{i}.Client.{i}.IPv6Address.{i}.
 *
 * MDMOID_DEV2_DHCPV6_SERVER_POOL_CLIENT_IPV6_ADDRESS 1589
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
    DATETIME  preferredLifetime;	/**< PreferredLifetime */
    DATETIME  validLifetime;	/**< ValidLifetime */
} Dev2Dhcpv6ServerPoolClientIpv6AddressObject;

/*! \brief _Dev2Dhcpv6ServerPoolClientIpv6AddressObject is used internally to represent Dev2Dhcpv6ServerPoolClientIpv6AddressObject */
typedef Dev2Dhcpv6ServerPoolClientIpv6AddressObject _Dev2Dhcpv6ServerPoolClientIpv6AddressObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Server.Pool.{i}.Client.{i}.IPv6Prefix.{i}.
 *
 * MDMOID_DEV2_DHCPV6_SERVER_POOL_CLIENT_IPV6_PREFIX 1590
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    prefix;	/**< Prefix */
    DATETIME  preferredLifetime;	/**< PreferredLifetime */
    DATETIME  validLifetime;	/**< ValidLifetime */
} Dev2Dhcpv6ServerPoolClientIpv6PrefixObject;

/*! \brief _Dev2Dhcpv6ServerPoolClientIpv6PrefixObject is used internally to represent Dev2Dhcpv6ServerPoolClientIpv6PrefixObject */
typedef Dev2Dhcpv6ServerPoolClientIpv6PrefixObject _Dev2Dhcpv6ServerPoolClientIpv6PrefixObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Server.Pool.{i}.Client.{i}.Option.{i}.
 *
 * MDMOID_DEV2_DHCPV6_SERVER_POOL_CLIENT_OPTION 1591
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    tag;	/**< Tag */
    HEXBINARY  value;	/**< Value */
} Dev2Dhcpv6ServerPoolClientOptionObject;

/*! \brief _Dev2Dhcpv6ServerPoolClientOptionObject is used internally to represent Dev2Dhcpv6ServerPoolClientOptionObject */
typedef Dev2Dhcpv6ServerPoolClientOptionObject _Dev2Dhcpv6ServerPoolClientOptionObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.DHCPv6.Server.Pool.{i}.Option.{i}.
 *
 * MDMOID_DEV2_DHCPV6_SERVER_POOL_OPTION 1592
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    UINT32    tag;	/**< Tag */
    HEXBINARY  value;	/**< Value */
    char *    passthroughClient;	/**< PassthroughClient */
} Dev2Dhcpv6ServerPoolOptionObject;

/*! \brief _Dev2Dhcpv6ServerPoolOptionObject is used internally to represent Dev2Dhcpv6ServerPoolOptionObject */
typedef Dev2Dhcpv6ServerPoolOptionObject _Dev2Dhcpv6ServerPoolOptionObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.
 *
 * MDMOID_DEV2_IEEE1905 1780
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    version;	/**< Version */
} Dev2Ieee1905Object;

/*! \brief _Dev2Ieee1905Object is used internally to represent Dev2Ieee1905Object */
typedef Dev2Ieee1905Object _Dev2Ieee1905Object;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.
 *
 * MDMOID_DEV2_IEEE1905_AL 1781
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IEEE1905Id;	/**< IEEE1905Id */
    char *    status;	/**< Status */
    UINT32    lastChange;	/**< LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    char *    registrarFreqBand;	/**< RegistrarFreqBand */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
    UBOOL8    enable;	/**< Enable */
    char *    deviceFriendlyName;	/**< DeviceFriendlyName */
    UBOOL8    isRegistrar;	/**< IsRegistrar */
    UBOOL8    APFreqBand24Enable;	/**< APFreqBand24Enable */
    UBOOL8    APFreqBand5Enable;	/**< APFreqBand5Enable */
} Dev2Ieee1905AlObject;

/*! \brief _Dev2Ieee1905AlObject is used internally to represent Dev2Ieee1905AlObject */
typedef Dev2Ieee1905AlObject _Dev2Ieee1905AlObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.Interface.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_IFC 1782
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    interfaceId;	/**< InterfaceId */
    char *    status;	/**< Status */
    UINT32    lastChange;	/**< LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    char *    mediaType;	/**< MediaType */
#ifdef DMP_DEVICE2_IEEE1905POWER_1
    char *    powerState;	/**< PowerState */
#endif
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    linkNumberOfEntries;	/**< LinkNumberOfEntries */
#endif
    char *    genericPhyOUI;	/**< GenericPhyOUI */
    UINT32    genericVariant;	/**< GenericVariant */
    char *    genericPhyURL;	/**< GenericPhyURL */
} Dev2Ieee1905AlIfcObject;

/*! \brief _Dev2Ieee1905AlIfcObject is used internally to represent Dev2Ieee1905AlIfcObject */
typedef Dev2Ieee1905AlIfcObject _Dev2Ieee1905AlIfcObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.Interface.{i}.Link.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_IFC_LINK 1783
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    interfaceId;	/**< InterfaceId */
    char *    IEEE1905Id;	/**< IEEE1905Id */
    char *    mediaType;	/**< MediaType */
#ifdef DMP_DEVICE2_IEEE1905BASELINE_1
    char *    genericPhyOUI;	/**< GenericPhyOUI */
#endif
#ifdef DMP_DEVICE2_IEEE1905BASELINE_1
    UINT32    genericVariant;	/**< GenericVariant */
#endif
#ifdef DMP_DEVICE2_IEEE1905BASELINE_1
    char *    genericPhyURL;	/**< GenericPhyURL */
#endif
} Dev2Ieee1905AlIfcLinkObject;

/*! \brief _Dev2Ieee1905AlIfcLinkObject is used internally to represent Dev2Ieee1905AlIfcLinkObject */
typedef Dev2Ieee1905AlIfcLinkObject _Dev2Ieee1905AlIfcLinkObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.Interface.{i}.Link.{i}.Metric.
 *
 * MDMOID_DEV2_IEEE1905_AL_IFC_LINK_METRIC 1784
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    IEEE802dot1Bridge;	/**< IEEE802dot1Bridge */
    UINT32    packetErrors;	/**< PacketErrors */
    UINT32    packetErrorsReceived;	/**< PacketErrorsReceived */
    UINT32    transmittedPackets;	/**< TransmittedPackets */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    MACThroughputCapacity;	/**< MACThroughputCapacity */
    UINT32    linkAvailability;	/**< LinkAvailability */
    UINT32    PHYRate;	/**< PHYRate */
    UINT32    RSSI;	/**< RSSI */
} Dev2Ieee1905AlIfcLinkMetricObject;

/*! \brief _Dev2Ieee1905AlIfcLinkMetricObject is used internally to represent Dev2Ieee1905AlIfcLinkMetricObject */
typedef Dev2Ieee1905AlIfcLinkMetricObject _Dev2Ieee1905AlIfcLinkMetricObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.ForwardingTable.
 *
 * MDMOID_DEV2_IEEE1905_AL_FORWARDING_TABLE 1785
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    forwardingRuleNumberOfEntries;	/**< ForwardingRuleNumberOfEntries */
} Dev2Ieee1905AlForwardingTableObject;

/*! \brief _Dev2Ieee1905AlForwardingTableObject is used internally to represent Dev2Ieee1905AlForwardingTableObject */
typedef Dev2Ieee1905AlForwardingTableObject _Dev2Ieee1905AlForwardingTableObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.ForwardingTable.ForwardingRule.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_FORWARDING_TABLE_FORWARDING_RULE 1786
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    interfaceList;	/**< InterfaceList */
    char *    MACDestinationAddress;	/**< MACDestinationAddress */
    UBOOL8    MACDestinationAddressExclude;	/**< MACDestinationAddressExclude */
    char *    MACSourceAddress;	/**< MACSourceAddress */
    UBOOL8    MACSourceAddressExclude;	/**< MACSourceAddressExclude */
    SINT32    etherType;	/**< EtherType */
    UBOOL8    etherTypeExclude;	/**< EtherTypeExclude */
    SINT32    vid;	/**< Vid */
    UBOOL8    vidExclude;	/**< VidExclude */
    SINT32    PCP;	/**< PCP */
    UBOOL8    PCPExclude;	/**< PCPExclude */
} Dev2Ieee1905AlForwardingTableForwardingRuleObject;

/*! \brief _Dev2Ieee1905AlForwardingTableForwardingRuleObject is used internally to represent Dev2Ieee1905AlForwardingTableForwardingRuleObject */
typedef Dev2Ieee1905AlForwardingTableForwardingRuleObject _Dev2Ieee1905AlForwardingTableForwardingRuleObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY 1787
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    UINT32    maxChangeLogEntries;	/**< MaxChangeLogEntries */
    char *    lastChange;	/**< LastChange */
    UINT32    IEEE1905DeviceNumberOfEntries;	/**< IEEE1905DeviceNumberOfEntries */
    UINT32    changeLogNumberOfEntries;	/**< ChangeLogNumberOfEntries */
} Dev2Ieee1905AlNetworkTopologyObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyObject is used internally to represent Dev2Ieee1905AlNetworkTopologyObject */
typedef Dev2Ieee1905AlNetworkTopologyObject _Dev2Ieee1905AlNetworkTopologyObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.ChangeLog.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY_CHANGE_LOG 1788
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    DATETIME  timeStamp;	/**< TimeStamp */
    char *    eventType;	/**< EventType */
    char *    reporterDeviceId;	/**< ReporterDeviceId */
    char *    reporterInterfaceId;	/**< ReporterInterfaceId */
    char *    neighborType;	/**< NeighborType */
    char *    neighborId;	/**< NeighborId */
} Dev2Ieee1905AlNetworkTopologyChangeLogObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyChangeLogObject is used internally to represent Dev2Ieee1905AlNetworkTopologyChangeLogObject */
typedef Dev2Ieee1905AlNetworkTopologyChangeLogObject _Dev2Ieee1905AlNetworkTopologyChangeLogObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY_IEEE1905_DEVICE 1789
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IEEE1905Id;	/**< IEEE1905Id */
    UINT32    version;	/**< Version */
    char *    friendlyName;	/**< FriendlyName */
    UINT32    vendorPropertiesNumberOfEntries;	/**< VendorPropertiesNumberOfEntries */
    UINT32    IPv4AddressesNumberOfEntries;	/**< IPv4AddressesNumberOfEntries */
    UINT32    IPv6AddressesNumberOfEntries;	/**< IPv6AddressesNumberOfEntries */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
    UINT32    nonIEEE1905NeighborNumberOfEntries;	/**< NonIEEE1905NeighborNumberOfEntries */
    UINT32    IEEE1905NeighborNumberOfEntries;	/**< IEEE1905NeighborNumberOfEntries */
    UINT32    L2NeighborNumberOfEntries;	/**< L2NeighborNumberOfEntries */
    UINT32    bridgingTupleNumberOfEntries;	/**< BridgingTupleNumberOfEntries */
} Dev2Ieee1905AlNetworkTopologyIeee1905DeviceObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceObject is used internally to represent Dev2Ieee1905AlNetworkTopologyIeee1905DeviceObject */
typedef Dev2Ieee1905AlNetworkTopologyIeee1905DeviceObject _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.Interface.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY_IEEE1905_DEVICE_IFC 1790
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    interfaceId;	/**< InterfaceId */
    char *    mediaType;	/**< MediaType */
    char *    powerState;	/**< PowerState */
#ifdef DMP_DEVICE2_IEEE1905BASELINE_1
    char *    genericPhyOUI;	/**< GenericPhyOUI */
#endif
#ifdef DMP_DEVICE2_IEEE1905BASELINE_1
    UINT32    genericVariant;	/**< GenericVariant */
#endif
#ifdef DMP_DEVICE2_IEEE1905BASELINE_1
    char *    genericPhyURL;	/**< GenericPhyURL */
#endif
} Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIfcObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIfcObject is used internally to represent Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIfcObject */
typedef Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIfcObject _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIfcObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.NonIEEE1905Neighbor.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY_IEEE1905_DEVICE_NON_IEEE1905_NEIGHBOR 1791
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    localInterface;	/**< LocalInterface */
    char *    neighborInterfaceId;	/**< NeighborInterfaceId */
} Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonIeee1905NeighborObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonIeee1905NeighborObject is used internally to represent Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonIeee1905NeighborObject */
typedef Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonIeee1905NeighborObject _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonIeee1905NeighborObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.L2Neighbor.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY_IEEE1905_DEVICE_NON_L2_NEIGHBOR 1792
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    localInterface;	/**< LocalInterface */
    char *    neighborInterfaceId;	/**< NeighborInterfaceId */
} Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonL2NeighborObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonL2NeighborObject is used internally to represent Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonL2NeighborObject */
typedef Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonL2NeighborObject _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceNonL2NeighborObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IEEE1905Neighbor.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY_IEEE1905_DEVICE_IEEE1905_NEIGHBOR 1793
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    localInterface;	/**< LocalInterface */
    char *    neighborDeviceId;	/**< NeighborDeviceId */
    UINT32    metricNumberOfEntries;	/**< MetricNumberOfEntries */
} Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborObject is used internally to represent Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborObject */
typedef Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborObject _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.IEEE1905Neighbor.{i}.Metric.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY_IEEE1905_DEVICE_IEEE1905_NEIGHBOR_METRIC 1794
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    char *    neighborMACAddress;	/**< NeighborMACAddress */
#endif
    UBOOL8    IEEE802dot1Bridge;	/**< IEEE802dot1Bridge */
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    packetErrors;	/**< PacketErrors */
#endif
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    packetErrorsReceived;	/**< PacketErrorsReceived */
#endif
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    transmittedPackets;	/**< TransmittedPackets */
#endif
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    packetsReceived;	/**< PacketsReceived */
#endif
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    MACThroughputCapacity;	/**< MACThroughputCapacity */
#endif
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    linkAvailability;	/**< LinkAvailability */
#endif
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    PHYRate;	/**< PHYRate */
#endif
#ifdef DMP_DEVICE2_IEEE1905LINKMETRIC_1
    UINT32    RSSI;	/**< RSSI */
#endif
} Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborMetricObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborMetricObject is used internally to represent Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborMetricObject */
typedef Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborMetricObject _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceIeee1905NeighborMetricObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.NetworkTopology.IEEE1905Device.{i}.BridgingTuple.{i}.
 *
 * MDMOID_DEV2_IEEE1905_AL_NETWORK_TOPOLOGY_IEEE1905_DEVICE_BRIDGING_TUPLE 1795
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    interfaceList;	/**< InterfaceList */
} Dev2Ieee1905AlNetworkTopologyIeee1905DeviceBridgingTupleObject;

/*! \brief _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceBridgingTupleObject is used internally to represent Dev2Ieee1905AlNetworkTopologyIeee1905DeviceBridgingTupleObject */
typedef Dev2Ieee1905AlNetworkTopologyIeee1905DeviceBridgingTupleObject _Dev2Ieee1905AlNetworkTopologyIeee1905DeviceBridgingTupleObject;



/*! \brief Obj struct for InternetGatewayDevice.Device.IEEE1905.AL.Security.
 *
 * MDMOID_DEV2_IEEE1905_AL_SECURITY 1796
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    setupMethod;	/**< SetupMethod */
    char *    password;	/**< Password */
} Dev2Ieee1905AlSecurityObject;

/*! \brief _Dev2Ieee1905AlSecurityObject is used internally to represent Dev2Ieee1905AlSecurityObject */
typedef Dev2Ieee1905AlSecurityObject _Dev2Ieee1905AlSecurityObject;



/*! \brief Obj struct for Device.DeviceInfo.
 *
 * MDMOID_DEV2_DEVICE_INFO 1002
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturer;	/**< Manufacturer */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    modelName;	/**< ModelName */
    char *    description;	/**< Description */
    char *    productClass;	/**< ProductClass */
    char *    serialNumber;	/**< SerialNumber */
    char *    hardwareVersion;	/**< HardwareVersion */
    char *    softwareVersion;	/**< SoftwareVersion */
    char *    additionalHardwareVersion;	/**< AdditionalHardwareVersion */
    char *    additionalSoftwareVersion;	/**< AdditionalSoftwareVersion */
    char *    provisioningCode;	/**< ProvisioningCode */
    UINT32    upTime;	/**< UpTime */
    DATETIME  firstUseDate;	/**< FirstUseDate */
    UINT32    vendorConfigFileNumberOfEntries;	/**< VendorConfigFileNumberOfEntries */
#ifdef DMP_DEVICE2_SUPPORTEDDATAMODEL_1
    UINT32    supportedDataModelNumberOfEntries;	/**< SupportedDataModelNumberOfEntries */
#endif
    UINT32    processorNumberOfEntries;	/**< ProcessorNumberOfEntries */
    UINT32    vendorLogFileNumberOfEntries;	/**< VendorLogFileNumberOfEntries */
#ifdef DMP_DEVICE2_LOCATION_1
    UINT32    locationNumberOfEntries;	/**< LocationNumberOfEntries */
#endif
    char *    X_BROADCOM_COM_SwBuildTimestamp;	/**< X_BROADCOM_COM_SwBuildTimestamp */
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_DslPhyDrvVersion;	/**< X_BROADCOM_COM_DslPhyDrvVersion */
#endif
#ifdef DMP_X_BROADCOM_COM_PSTNENDPOINT_1
    char *    X_BROADCOM_COM_VoiceServiceVersion;	/**< X_BROADCOM_COM_VoiceServiceVersion */
#endif
#ifdef DMP_DEVICE2_HOMEPLUG_1
    UINT32    X_BROADCOM_COM_FlashSize;	/**< X_BROADCOM_COM_FlashSize */
#endif
#ifdef DMP_DEVICE2_HOMEPLUG_1
    char *    X_BROADCOM_COM_FlashDescription;	/**< X_BROADCOM_COM_FlashDescription */
#endif
} Dev2DeviceInfoObject;

/*! \brief _Dev2DeviceInfoObject is used internally to represent Dev2DeviceInfoObject */
typedef Dev2DeviceInfoObject _Dev2DeviceInfoObject;



/*! \brief Obj struct for Device.DeviceInfo.VendorConfigFile.{i}.
 *
 * MDMOID_DEV2_DEVICE_VENDOR_CONFIG_FILE 1003
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    char *    version;	/**< Version */
    DATETIME  date;	/**< Date */
    char *    description;	/**< Description */
    UBOOL8    useForBackupRestore;	/**< UseForBackupRestore */
} Dev2DeviceVendorConfigFileObject;

/*! \brief _Dev2DeviceVendorConfigFileObject is used internally to represent Dev2DeviceVendorConfigFileObject */
typedef Dev2DeviceVendorConfigFileObject _Dev2DeviceVendorConfigFileObject;



/*! \brief Obj struct for Device.DeviceInfo.SupportedDataModel.{i}.
 *
 * MDMOID_DEV2_SUPPORTED_DATA_MODEL 1004
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
    char *    URL;	/**< URL */
#ifdef DMP_DEVICE2_SUPPORTEDDATAMODEL_2
    char *    UUID;	/**< UUID */
#endif
    char *    URN;	/**< URN */
    char *    features;	/**< Features */
} Dev2SupportedDataModelObject;

/*! \brief _Dev2SupportedDataModelObject is used internally to represent Dev2SupportedDataModelObject */
typedef Dev2SupportedDataModelObject _Dev2SupportedDataModelObject;



/*! \brief Obj struct for Device.DeviceInfo.MemoryStatus.
 *
 * MDMOID_DEV2_MEMORY_STATUS 1005
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    total;	/**< Total */
    UINT32    free;	/**< Free */
} Dev2MemoryStatusObject;

/*! \brief _Dev2MemoryStatusObject is used internally to represent Dev2MemoryStatusObject */
typedef Dev2MemoryStatusObject _Dev2MemoryStatusObject;



/*! \brief Obj struct for Device.DeviceInfo.ProcessStatus.
 *
 * MDMOID_DEV2_PROCESS_STATUS 1006
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    processNumberOfEntries;	/**< ProcessNumberOfEntries */
} Dev2ProcessStatusObject;

/*! \brief _Dev2ProcessStatusObject is used internally to represent Dev2ProcessStatusObject */
typedef Dev2ProcessStatusObject _Dev2ProcessStatusObject;



/*! \brief Obj struct for Device.DeviceInfo.ProcessStatus.Process.{i}.
 *
 * MDMOID_DEV2_PROCESS_STATUS_ENTRY 1007
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    PID;	/**< PID */
    char *    command;	/**< Command */
    UINT32    size;	/**< Size */
    char *    state;	/**< State */
} Dev2ProcessStatusEntryObject;

/*! \brief _Dev2ProcessStatusEntryObject is used internally to represent Dev2ProcessStatusEntryObject */
typedef Dev2ProcessStatusEntryObject _Dev2ProcessStatusEntryObject;



/*! \brief Obj struct for Device.DeviceInfo.Processor.{i}.
 *
 * MDMOID_DEV2_PROCESSOR 1011
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
    char *    architecture;	/**< Architecture */
    UINT32    X_BROADCOM_COM_Frequency;	/**< X_BROADCOM_COM_Frequency */
} Dev2ProcessorObject;

/*! \brief _Dev2ProcessorObject is used internally to represent Dev2ProcessorObject */
typedef Dev2ProcessorObject _Dev2ProcessorObject;



/*! \brief Obj struct for Device.ManagementServer.
 *
 * MDMOID_DEV2_MANAGEMENT_SERVER 1020
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    URL;	/**< URL */
    char *    lastConnectedURL;	/**< LastConnectedURL */
    char *    username;	/**< Username */
    char *    password;	/**< Password */
    UBOOL8    periodicInformEnable;	/**< PeriodicInformEnable */
    UINT32    periodicInformInterval;	/**< PeriodicInformInterval */
    DATETIME  periodicInformTime;	/**< PeriodicInformTime */
    char *    parameterKey;	/**< ParameterKey */
    char *    X_BROADCOM_COM_BoundIfName;	/**< X_BROADCOM_COM_BoundIfName */
    char *    connectionRequestURL;	/**< ConnectionRequestURL */
    char *    connectionRequestUsername;	/**< ConnectionRequestUsername */
    char *    connectionRequestPassword;	/**< ConnectionRequestPassword */
    UBOOL8    upgradesManaged;	/**< UpgradesManaged */
    UINT32    CWMPRetryMinimumWaitInterval;	/**< CWMPRetryMinimumWaitInterval */
    UINT32    CWMPRetryIntervalMultiplier;	/**< CWMPRetryIntervalMultiplier */
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    char *    UDPConnectionRequestAddress;	/**< UDPConnectionRequestAddress */
#endif
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    UBOOL8    STUNEnable;	/**< STUNEnable */
#endif
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    char *    STUNServerAddress;	/**< STUNServerAddress */
#endif
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    UINT32    STUNServerPort;	/**< STUNServerPort */
#endif
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    char *    STUNUsername;	/**< STUNUsername */
#endif
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    char *    STUNPassword;	/**< STUNPassword */
#endif
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    SINT32    STUNMaximumKeepAlivePeriod;	/**< STUNMaximumKeepAlivePeriod */
#endif
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    UINT32    STUNMinimumKeepAlivePeriod;	/**< STUNMinimumKeepAlivePeriod */
#endif
#ifdef DMP_DEVICE2_UDPCONNREQ_1
    UBOOL8    NATDetected;	/**< NATDetected */
#endif
#ifdef DMP_DEVICE2_DEVICEASSOCIATION_1
    UINT32    manageableDeviceNumberOfEntries;	/**< ManageableDeviceNumberOfEntries */
#endif
    UINT32    manageableDeviceNotificationLimit;	/**< ManageableDeviceNotificationLimit */
#ifdef DMP_DEVICE2_XMPPCONNREQ_1
    char *    supportedConnReqMethods;	/**< SupportedConnReqMethods */
#endif
#ifdef DMP_DEVICE2_XMPPCONNREQ_1
    char *    connReqXMPPConnection;	/**< ConnReqXMPPConnection */
#endif
#ifdef DMP_DEVICE2_XMPPCONNREQ_1
    char *    connReqAllowedJabberIDs;	/**< ConnReqAllowedJabberIDs */
#endif
#ifdef DMP_DEVICE2_XMPPCONNREQ_1
    char *    connReqJabberID;	/**< ConnReqJabberID */
#endif
#ifdef DMP_X_BROADCOM_COM_UPNPIGDHTTPCONNREQ_1
    char *    X_BROADCOM_COM_UPNPC_IGD_WAN_ADDRESS;	/**< X_BROADCOM_COM_UPNPC_IGD_WAN_ADDRESS */
#endif
#ifdef DMP_X_BROADCOM_COM_UPNPIGDHTTPCONNREQ_1
    UINT32    X_BROADCOM_COM_UPNPC_IGD_EXT_PORT;	/**< X_BROADCOM_COM_UPNPC_IGD_EXT_PORT */
#endif
} Dev2ManagementServerObject;

/*! \brief _Dev2ManagementServerObject is used internally to represent Dev2ManagementServerObject */
typedef Dev2ManagementServerObject _Dev2ManagementServerObject;



/*! \brief Obj struct for Device.ManagementServer.ManageableDevice.{i}.
 *
 * MDMOID_DEV2_MANAGEMENT_SERVER_MANAGEABLE_DEVICE 1021
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    manufacturerOUI;	/**< ManufacturerOUI */
    char *    serialNumber;	/**< SerialNumber */
    char *    productClass;	/**< ProductClass */
    char *    host;	/**< Host */
} Dev2ManagementServerManageableDeviceObject;

/*! \brief _Dev2ManagementServerManageableDeviceObject is used internally to represent Dev2ManagementServerManageableDeviceObject */
typedef Dev2ManagementServerManageableDeviceObject _Dev2ManagementServerManageableDeviceObject;



/*! \brief Obj struct for Device.ManagementServer.AutonomousTransferCompletePolicy.
 *
 * MDMOID_DEV2_AUTON_XFER_COMPLETE_POLICY 1022
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    transferTypeFilter;	/**< TransferTypeFilter */
    char *    resultTypeFilter;	/**< ResultTypeFilter */
    char *    fileTypeFilter;	/**< FileTypeFilter */
} Dev2AutonXferCompletePolicyObject;

/*! \brief _Dev2AutonXferCompletePolicyObject is used internally to represent Dev2AutonXferCompletePolicyObject */
typedef Dev2AutonXferCompletePolicyObject _Dev2AutonXferCompletePolicyObject;



/*! \brief Obj struct for Device.ManagementServer.DUStateChangeComplPolicy.
 *
 * MDMOID_DEV2_DU_STATE_CHANGE_COMPL_POLICY 1027
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    operationTypeFilter;	/**< OperationTypeFilter */
    char *    resultTypeFilter;	/**< ResultTypeFilter */
    char *    faultCodeFilter;	/**< FaultCodeFilter */
} Dev2DuStateChangeComplPolicyObject;

/*! \brief _Dev2DuStateChangeComplPolicyObject is used internally to represent Dev2DuStateChangeComplPolicyObject */
typedef Dev2DuStateChangeComplPolicyObject _Dev2DuStateChangeComplPolicyObject;



/*! \brief Obj struct for Device.Time.
 *
 * MDMOID_DEV2_TIME 1045
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    NTPServer1;	/**< NTPServer1 */
    char *    NTPServer2;	/**< NTPServer2 */
    char *    NTPServer3;	/**< NTPServer3 */
    char *    NTPServer4;	/**< NTPServer4 */
    char *    NTPServer5;	/**< NTPServer5 */
    DATETIME  currentLocalTime;	/**< CurrentLocalTime */
    char *    localTimeZone;	/**< LocalTimeZone */
    char *    X_BROADCOM_COM_LocalTimeZoneName;	/**< X_BROADCOM_COM_LocalTimeZoneName */
    UBOOL8    X_BROADCOM_COM_DaylightSavingsUsed;	/**< X_BROADCOM_COM_DaylightSavingsUsed */
    DATETIME  X_BROADCOM_COM_DaylightSavingsStart;	/**< X_BROADCOM_COM_DaylightSavingsStart */
    DATETIME  X_BROADCOM_COM_DaylightSavingsEnd;	/**< X_BROADCOM_COM_DaylightSavingsEnd */
} Dev2TimeObject;

/*! \brief _Dev2TimeObject is used internally to represent Dev2TimeObject */
typedef Dev2TimeObject _Dev2TimeObject;



/*! \brief Obj struct for Device.DSL.
 *
 * MDMOID_DEV2_DSL 1061
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    lineNumberOfEntries;	/**< LineNumberOfEntries */
    UINT32    channelNumberOfEntries;	/**< ChannelNumberOfEntries */
#ifdef DMP_DEVICE2_BONDEDDSL_1
    UINT32    bondingGroupNumberOfEntries;	/**< BondingGroupNumberOfEntries */
#endif
} Dev2DslObject;

/*! \brief _Dev2DslObject is used internally to represent Dev2DslObject */
typedef Dev2DslObject _Dev2DslObject;



/*! \brief Obj struct for Device.DSL.Line.{i}.
 *
 * MDMOID_DEV2_DSL_LINE 1062
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
    char *    firmwareVersion;	/**< FirmwareVersion */
    char *    linkStatus;	/**< LinkStatus */
#ifdef DMP_DEVICE2_ADSL2_1
    char *    standardsSupported;	/**< StandardsSupported */
#endif
#ifdef DMP_DEVICE2_ADSL2_1
    char *    standardUsed;	/**< StandardUsed */
#endif
    char *    lineEncoding;	/**< LineEncoding */
#ifdef DMP_DEVICE2_VDSL2_1
    char *    allowedProfiles;	/**< AllowedProfiles */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    char *    currentProfile;	/**< CurrentProfile */
#endif
    char *    powerManagementState;	/**< PowerManagementState */
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    UPBOKLE;	/**< UPBOKLE */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    SINT32    TRELLISds;	/**< TRELLISds */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    SINT32    TRELLISus;	/**< TRELLISus */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    ACTSNRMODEds;	/**< ACTSNRMODEds */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    ACTSNRMODEus;	/**< ACTSNRMODEus */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    ACTUALCE;	/**< ACTUALCE */
#endif
    SINT32    lineNumber;	/**< LineNumber */
    UINT32    upstreamMaxBitRate;	/**< UpstreamMaxBitRate */
    UINT32    downstreamMaxBitRate;	/**< DownstreamMaxBitRate */
    SINT32    upstreamNoiseMargin;	/**< UpstreamNoiseMargin */
    SINT32    downstreamNoiseMargin;	/**< DownstreamNoiseMargin */
#ifdef DMP_DEVICE2_VDSL2_1
    char *    SNRMpbus;	/**< SNRMpbus */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    char *    SNRMpbds;	/**< SNRMpbds */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    SINT32    upstreamAttenuation;	/**< UpstreamAttenuation */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    SINT32    downstreamAttenuation;	/**< DownstreamAttenuation */
#endif
    SINT32    upstreamPower;	/**< UpstreamPower */
    SINT32    downstreamPower;	/**< DownstreamPower */
    HEXBINARY  XTURVendor;	/**< XTURVendor */
    HEXBINARY  XTURCountry;	/**< XTURCountry */
    UINT32    XTURANSIStd;	/**< XTURANSIStd */
    UINT32    XTURANSIRev;	/**< XTURANSIRev */
    HEXBINARY  XTUCVendor;	/**< XTUCVendor */
    HEXBINARY  XTUCCountry;	/**< XTUCCountry */
    UINT32    XTUCANSIStd;	/**< XTUCANSIStd */
    UINT32    XTUCANSIRev;	/**< XTUCANSIRev */
    UINT32    X_BROADCOM_COM_BondingLineNumber;	/**< X_BROADCOM_COM_BondingLineNumber */
    char *    X_BROADCOM_COM_AdslVersion;	/**< X_BROADCOM_COM_AdslVersion */
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_AdslModulationCfg;	/**< X_BROADCOM_COM_AdslModulationCfg */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UBOOL8    X_BROADCOM_COM_ADSL2_AnnexM;	/**< X_BROADCOM_COM_ADSL2_AnnexM */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_PhoneLinePair;	/**< X_BROADCOM_COM_PhoneLinePair */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_Bitswap;	/**< X_BROADCOM_COM_Bitswap */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_SRA;	/**< X_BROADCOM_COM_SRA */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_TrellisD;	/**< X_BROADCOM_COM_TrellisD */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_TrellisU;	/**< X_BROADCOM_COM_TrellisU */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_SNR;	/**< X_BROADCOM_COM_SNR */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_Bitmap;	/**< X_BROADCOM_COM_Bitmap */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_QueueSize;	/**< X_BROADCOM_COM_QueueSize */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_NumTxQueues;	/**< X_BROADCOM_COM_NumTxQueues */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_UpstreamS;	/**< X_BROADCOM_COM_UpstreamS */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_DownstreamS;	/**< X_BROADCOM_COM_DownstreamS */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamR;	/**< X_BROADCOM_COM_UpstreamR */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamR;	/**< X_BROADCOM_COM_DownstreamR */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamK;	/**< X_BROADCOM_COM_UpstreamK */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamK;	/**< X_BROADCOM_COM_DownstreamK */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_UpstreamDelay;	/**< X_BROADCOM_COM_UpstreamDelay */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_UpstreamDelay_2;	/**< X_BROADCOM_COM_UpstreamDelay_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_DownstreamDelay;	/**< X_BROADCOM_COM_DownstreamDelay */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_DownstreamDelay_2;	/**< X_BROADCOM_COM_DownstreamDelay_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_DownstreamINP;	/**< X_BROADCOM_COM_DownstreamINP */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_DownstreamINP_2;	/**< X_BROADCOM_COM_DownstreamINP_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_UpstreamINP;	/**< X_BROADCOM_COM_UpstreamINP */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_UpstreamINP_2;	/**< X_BROADCOM_COM_UpstreamINP_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamD;	/**< X_BROADCOM_COM_UpstreamD */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamD_2;	/**< X_BROADCOM_COM_UpstreamD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamD;	/**< X_BROADCOM_COM_DownstreamD */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamD_2;	/**< X_BROADCOM_COM_DownstreamD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamMSGc;	/**< X_BROADCOM_COM_ADSL2_UpstreamMSGc */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamMSGc_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamMSGc_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamMSGc;	/**< X_BROADCOM_COM_ADSL2_DownstreamMSGc */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamMSGc_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamMSGc_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamB;	/**< X_BROADCOM_COM_ADSL2_UpstreamB */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamB_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamB_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamB;	/**< X_BROADCOM_COM_ADSL2_DownstreamB */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamB_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamB_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamM;	/**< X_BROADCOM_COM_ADSL2_UpstreamM */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamM_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamM_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamM;	/**< X_BROADCOM_COM_ADSL2_DownstreamM */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamM_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamM_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamT;	/**< X_BROADCOM_COM_ADSL2_UpstreamT */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamT_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamT_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamT;	/**< X_BROADCOM_COM_ADSL2_DownstreamT */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamT_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamT_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamR;	/**< X_BROADCOM_COM_ADSL2_UpstreamR */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamR_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamR_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamR;	/**< X_BROADCOM_COM_ADSL2_DownstreamR */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamR_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamR_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_ADSL2_UpstreamS;	/**< X_BROADCOM_COM_ADSL2_UpstreamS */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_ADSL2_UpstreamS_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamS_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_ADSL2_DownstreamS;	/**< X_BROADCOM_COM_ADSL2_DownstreamS */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_ADSL2_DownstreamS_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamS_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamL;	/**< X_BROADCOM_COM_ADSL2_UpstreamL */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_UpstreamL_2;	/**< X_BROADCOM_COM_ADSL2_UpstreamL_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamL;	/**< X_BROADCOM_COM_ADSL2_DownstreamL */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ADSL2_DownstreamL_2;	/**< X_BROADCOM_COM_ADSL2_DownstreamL_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8a;	/**< X_BROADCOM_COM_VDSL_8a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8b;	/**< X_BROADCOM_COM_VDSL_8b */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8c;	/**< X_BROADCOM_COM_VDSL_8c */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_8d;	/**< X_BROADCOM_COM_VDSL_8d */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_12a;	/**< X_BROADCOM_COM_VDSL_12a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_12b;	/**< X_BROADCOM_COM_VDSL_12b */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_17a;	/**< X_BROADCOM_COM_VDSL_17a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_30a;	/**< X_BROADCOM_COM_VDSL_30a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_BrcmPriv1;	/**< X_BROADCOM_COM_VDSL_BrcmPriv1 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UBOOL8    X_BROADCOM_COM_VDSL_US0_8a;	/**< X_BROADCOM_COM_VDSL_US0_8a */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamI;	/**< X_BROADCOM_COM_VDSL_UpstreamI */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamI_2;	/**< X_BROADCOM_COM_VDSL_UpstreamI_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamI;	/**< X_BROADCOM_COM_VDSL_DownstreamI */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamI_2;	/**< X_BROADCOM_COM_VDSL_DownstreamI_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamN;	/**< X_BROADCOM_COM_VDSL_UpstreamN */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_UpstreamN_2;	/**< X_BROADCOM_COM_VDSL_UpstreamN_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamN;	/**< X_BROADCOM_COM_VDSL_DownstreamN */
#endif
#ifdef DMP_X_BROADCOM_COM_VDSL2WAN_1
    UINT32    X_BROADCOM_COM_VDSL_DownstreamN_2;	/**< X_BROADCOM_COM_VDSL_DownstreamN_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    char *    X_BROADCOM_COM_LinkPowerState;	/**< X_BROADCOM_COM_LinkPowerState */
#endif
    UINT32    X_BROADCOM_COM_DslCfgParam;	/**< X_BROADCOM_COM_DslCfgParam */
    SINT32    X_BROADCOM_COM_DslTrainingMarginQ4;	/**< X_BROADCOM_COM_DslTrainingMarginQ4 */
    SINT32    X_BROADCOM_COM_DslShowtimeMarginQ4;	/**< X_BROADCOM_COM_DslShowtimeMarginQ4 */
    SINT32    X_BROADCOM_COM_DslLOMTimeThldSec;	/**< X_BROADCOM_COM_DslLOMTimeThldSec */
    SINT32    X_BROADCOM_COM_DslPwmSyncClockFreq;	/**< X_BROADCOM_COM_DslPwmSyncClockFreq */
    SINT32    X_BROADCOM_COM_DslHsModeSwitchTime;	/**< X_BROADCOM_COM_DslHsModeSwitchTime */
    UINT32    X_BROADCOM_COM_DslParam;	/**< X_BROADCOM_COM_DslParam */
    UINT32    X_BROADCOM_COM_DslPhyCfg1Mask;	/**< X_BROADCOM_COM_DslPhyCfg1Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg1Value;	/**< X_BROADCOM_COM_DslPhyCfg1Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg2Mask;	/**< X_BROADCOM_COM_DslPhyCfg2Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg2Value;	/**< X_BROADCOM_COM_DslPhyCfg2Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg3Mask;	/**< X_BROADCOM_COM_DslPhyCfg3Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg3Value;	/**< X_BROADCOM_COM_DslPhyCfg3Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg4Mask;	/**< X_BROADCOM_COM_DslPhyCfg4Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg4Value;	/**< X_BROADCOM_COM_DslPhyCfg4Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg5Mask;	/**< X_BROADCOM_COM_DslPhyCfg5Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg5Value;	/**< X_BROADCOM_COM_DslPhyCfg5Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg6Mask;	/**< X_BROADCOM_COM_DslPhyCfg6Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg6Value;	/**< X_BROADCOM_COM_DslPhyCfg6Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg7Mask;	/**< X_BROADCOM_COM_DslPhyCfg7Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg7Value;	/**< X_BROADCOM_COM_DslPhyCfg7Value */
    UINT32    X_BROADCOM_COM_DslPhyCfg8Mask;	/**< X_BROADCOM_COM_DslPhyCfg8Mask */
    UINT32    X_BROADCOM_COM_DslPhyCfg8Value;	/**< X_BROADCOM_COM_DslPhyCfg8Value */
    UINT32    X_BROADCOM_COM_DslPhyUsDataRateKbps;	/**< X_BROADCOM_COM_DslPhyUsDataRateKbps */
    UINT32    X_BROADCOM_COM_DslPhyDsDataRateKbps;	/**< X_BROADCOM_COM_DslPhyDsDataRateKbps */
    UINT32    X_BROADCOM_COM_DslPhyAggrDataRateKbps;	/**< X_BROADCOM_COM_DslPhyAggrDataRateKbps */
    UINT32    X_BROADCOM_COM_DslPhyMiscCfgParam;	/**< X_BROADCOM_COM_DslPhyMiscCfgParam */
} Dev2DslLineObject;

/*! \brief _Dev2DslLineObject is used internally to represent Dev2DslLineObject */
typedef Dev2DslLineObject _Dev2DslLineObject;



/*! \brief Obj struct for Device.DSL.Line.{i}.X_BROADCOM_COM_BertTest.
 *
 * MDMOID_DEV2_DSL_LINE_BERT_TEST 1063
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    bertTestMode;	/**< BertTestMode */
    UINT32    bertTestDuration;	/**< BertTestDuration */
    char *    bertTestStatus;	/**< BertTestStatus */
    UINT32    totalTime;	/**< TotalTime */
    UINT32    elapsedTime;	/**< ElapsedTime */
    UINT32    bitsTestedCntHigh;	/**< BitsTestedCntHigh */
    UINT32    bitsTestedCntLow;	/**< BitsTestedCntLow */
    UINT32    errBitsCntHigh;	/**< ErrBitsCntHigh */
    UINT32    errBitsCntLow;	/**< ErrBitsCntLow */
} Dev2DslLineBertTestObject;

/*! \brief _Dev2DslLineBertTestObject is used internally to represent Dev2DslLineBertTestObject */
typedef Dev2DslLineBertTestObject _Dev2DslLineBertTestObject;



/*! \brief Obj struct for Device.DSL.Line.{i}.Stats.
 *
 * MDMOID_DEV2_DSL_LINE_STATS 1064
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT32    totalStart;	/**< TotalStart */
    UINT32    showtimeStart;	/**< ShowtimeStart */
    UINT32    lastShowtimeStart;	/**< LastShowtimeStart */
    UINT32    currentDayStart;	/**< CurrentDayStart */
    UINT32    quarterHourStart;	/**< QuarterHourStart */
} Dev2DslLineStatsObject;

/*! \brief _Dev2DslLineStatsObject is used internally to represent Dev2DslLineStatsObject */
typedef Dev2DslLineStatsObject _Dev2DslLineStatsObject;



/*! \brief Obj struct for Device.DSL.Line.{i}.Stats.Total.
 *
 * MDMOID_DEV2_DSL_LINE_STATS_TOTAL 1065
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamUas;	/**< X_BROADCOM_COM_UpstreamUas */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamUas;	/**< X_BROADCOM_COM_DownstreamUas */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamEs;	/**< X_BROADCOM_COM_UpstreamEs */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamSes;	/**< X_BROADCOM_COM_UpstreamSes */
#endif
} Dev2DslLineStatsTotalObject;

/*! \brief _Dev2DslLineStatsTotalObject is used internally to represent Dev2DslLineStatsTotalObject */
typedef Dev2DslLineStatsTotalObject _Dev2DslLineStatsTotalObject;



/*! \brief Obj struct for Device.DSL.Line.{i}.Stats.Showtime.
 *
 * MDMOID_DEV2_DSL_LINE_STATS_SHOWTIME 1066
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
} Dev2DslLineStatsShowtimeObject;

/*! \brief _Dev2DslLineStatsShowtimeObject is used internally to represent Dev2DslLineStatsShowtimeObject */
typedef Dev2DslLineStatsShowtimeObject _Dev2DslLineStatsShowtimeObject;



/*! \brief Obj struct for Device.DSL.Line.{i}.Stats.CurrentDay.
 *
 * MDMOID_DEV2_DSL_LINE_STATS_CURRENT_DAY 1068
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
} Dev2DslLineStatsCurrentDayObject;

/*! \brief _Dev2DslLineStatsCurrentDayObject is used internally to represent Dev2DslLineStatsCurrentDayObject */
typedef Dev2DslLineStatsCurrentDayObject _Dev2DslLineStatsCurrentDayObject;



/*! \brief Obj struct for Device.DSL.Line.{i}.Stats.QuarterHour.
 *
 * MDMOID_DEV2_DSL_LINE_STATS_QUARTER_HOUR 1069
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
} Dev2DslLineStatsQuarterHourObject;

/*! \brief _Dev2DslLineStatsQuarterHourObject is used internally to represent Dev2DslLineStatsQuarterHourObject */
typedef Dev2DslLineStatsQuarterHourObject _Dev2DslLineStatsQuarterHourObject;



/*! \brief Obj struct for Device.DSL.Line.{i}.TestParams.
 *
 * MDMOID_DEV2_DSL_LINE_TEST_PARAMS 1070
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    HLOGGds;	/**< HLOGGds */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    HLOGGus;	/**< HLOGGus */
#endif
    char *    HLOGpsds;	/**< HLOGpsds */
    char *    HLOGpsus;	/**< HLOGpsus */
    UINT32    HLOGMTds;	/**< HLOGMTds */
    UINT32    HLOGMTus;	/**< HLOGMTus */
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    QLNGds;	/**< QLNGds */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    QLNGus;	/**< QLNGus */
#endif
    char *    QLNpsds;	/**< QLNpsds */
    char *    QLNpsus;	/**< QLNpsus */
    UINT32    QLNMTds;	/**< QLNMTds */
    UINT32    QLNMTus;	/**< QLNMTus */
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    SNRGds;	/**< SNRGds */
#endif
#ifdef DMP_DEVICE2_VDSL2_1
    UINT32    SNRGus;	/**< SNRGus */
#endif
    char *    SNRpsds;	/**< SNRpsds */
    char *    SNRpsus;	/**< SNRpsus */
    UINT32    SNRMTds;	/**< SNRMTds */
    UINT32    SNRMTus;	/**< SNRMTus */
    char *    LATNds;	/**< LATNds */
    char *    LATNus;	/**< LATNus */
    char *    SATNds;	/**< SATNds */
    char *    SATNus;	/**< SATNus */
} Dev2DslLineTestParamsObject;

/*! \brief _Dev2DslLineTestParamsObject is used internally to represent Dev2DslLineTestParamsObject */
typedef Dev2DslLineTestParamsObject _Dev2DslLineTestParamsObject;



/*! \brief Obj struct for Device.DSL.Channel.{i}.
 *
 * MDMOID_DEV2_DSL_CHANNEL 1071
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
#ifdef DMP_DEVICE2_ADSL2_1
    char *    linkEncapsulationSupported;	/**< LinkEncapsulationSupported */
#endif
    char *    linkEncapsulationUsed;	/**< LinkEncapsulationUsed */
    UINT32    LPATH;	/**< LPATH */
    UINT32    INTLVDEPTH;	/**< INTLVDEPTH */
    SINT32    INTLVBLOCK;	/**< INTLVBLOCK */
    UINT32    actualInterleavingDelay;	/**< ActualInterleavingDelay */
    SINT32    ACTINP;	/**< ACTINP */
    UBOOL8    INPREPORT;	/**< INPREPORT */
    SINT32    NFEC;	/**< NFEC */
    SINT32    RFEC;	/**< RFEC */
    SINT32    LSYMB;	/**< LSYMB */
    UINT32    upstreamCurrRate;	/**< UpstreamCurrRate */
    UINT32    downstreamCurrRate;	/**< DownstreamCurrRate */
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamCurrRate_2;	/**< X_BROADCOM_COM_UpstreamCurrRate_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamCurrRate_2;	/**< X_BROADCOM_COM_DownstreamCurrRate_2 */
#endif
} Dev2DslChannelObject;

/*! \brief _Dev2DslChannelObject is used internally to represent Dev2DslChannelObject */
typedef Dev2DslChannelObject _Dev2DslChannelObject;



/*! \brief Obj struct for Device.DSL.Channel.{i}.Stats.
 *
 * MDMOID_DEV2_DSL_CHANNEL_STATS 1072
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT32    totalStart;	/**< TotalStart */
    UINT32    showtimeStart;	/**< ShowtimeStart */
    UINT32    lastShowtimeStart;	/**< LastShowtimeStart */
    UINT32    currentDayStart;	/**< CurrentDayStart */
    UINT32    quarterHourStart;	/**< QuarterHourStart */
} Dev2DslChannelStatsObject;

/*! \brief _Dev2DslChannelStatsObject is used internally to represent Dev2DslChannelStatsObject */
typedef Dev2DslChannelStatsObject _Dev2DslChannelStatsObject;



/*! \brief Obj struct for Device.DSL.Channel.{i}.Stats.Total.
 *
 * MDMOID_DEV2_DSL_CHANNEL_STATS_TOTAL 1073
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    XTURFECErrors;	/**< XTURFECErrors */
    UINT32    XTUCFECErrors;	/**< XTUCFECErrors */
    UINT32    XTURHECErrors;	/**< XTURHECErrors */
    UINT32    XTUCHECErrors;	/**< XTUCHECErrors */
    UINT32    XTURCRCErrors;	/**< XTURCRCErrors */
    UINT32    XTUCCRCErrors;	/**< XTUCCRCErrors */
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_RxRsCorrectable;	/**< X_BROADCOM_COM_RxRsCorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_RxRsCorrectable_2;	/**< X_BROADCOM_COM_RxRsCorrectable_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_TxRsCorrectable;	/**< X_BROADCOM_COM_TxRsCorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_TxRsCorrectable_2;	/**< X_BROADCOM_COM_TxRsCorrectable_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_TxRsUncorrectable;	/**< X_BROADCOM_COM_TxRsUncorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_TxRsUncorrectable_2;	/**< X_BROADCOM_COM_TxRsUncorrectable_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_RxRsUncorrectable;	/**< X_BROADCOM_COM_RxRsUncorrectable */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_RxRsUncorrectable_2;	/**< X_BROADCOM_COM_RxRsUncorrectable_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_TxRsWords;	/**< X_BROADCOM_COM_TxRsWords */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_TxRsWords_2;	/**< X_BROADCOM_COM_TxRsWords_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_RxRsWords;	/**< X_BROADCOM_COM_RxRsWords */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_RxRsWords_2;	/**< X_BROADCOM_COM_RxRsWords_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ReceiveBlocks;	/**< X_BROADCOM_COM_ReceiveBlocks */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_ReceiveBlocks_2;	/**< X_BROADCOM_COM_ReceiveBlocks_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_TransmitBlocks;	/**< X_BROADCOM_COM_TransmitBlocks */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_TransmitBlocks_2;	/**< X_BROADCOM_COM_TransmitBlocks_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_XTURFECErrors_2;	/**< X_BROADCOM_COM_XTURFECErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_XTUCFECErrors_2;	/**< X_BROADCOM_COM_XTUCFECErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_XTURHECErrors_2;	/**< X_BROADCOM_COM_XTURHECErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_XTUCHECErrors_2;	/**< X_BROADCOM_COM_XTUCHECErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_XTURCRCErrors_2;	/**< X_BROADCOM_COM_XTURCRCErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_XTUCCRCErrors_2;	/**< X_BROADCOM_COM_XTUCCRCErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamBitErrors;	/**< X_BROADCOM_COM_UpstreamBitErrors */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamBitErrors_2;	/**< X_BROADCOM_COM_UpstreamBitErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamBitErrors;	/**< X_BROADCOM_COM_DownstreamBitErrors */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamBitErrors_2;	/**< X_BROADCOM_COM_DownstreamBitErrors_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamDataCells;	/**< X_BROADCOM_COM_UpstreamDataCells */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamDataCells_2;	/**< X_BROADCOM_COM_UpstreamDataCells_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamDataCells;	/**< X_BROADCOM_COM_DownstreamDataCells */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamDataCells_2;	/**< X_BROADCOM_COM_DownstreamDataCells_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamTotalCells;	/**< X_BROADCOM_COM_UpstreamTotalCells */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamTotalCells_2;	/**< X_BROADCOM_COM_UpstreamTotalCells_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamTotalCells;	/**< X_BROADCOM_COM_DownstreamTotalCells */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamTotalCells_2;	/**< X_BROADCOM_COM_DownstreamTotalCells_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamLCD;	/**< X_BROADCOM_COM_UpstreamLCD */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamLCD_2;	/**< X_BROADCOM_COM_UpstreamLCD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamLCD;	/**< X_BROADCOM_COM_DownstreamLCD */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamLCD_2;	/**< X_BROADCOM_COM_DownstreamLCD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamOCD;	/**< X_BROADCOM_COM_UpstreamOCD */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_UpstreamOCD_2;	/**< X_BROADCOM_COM_UpstreamOCD_2 */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamOCD;	/**< X_BROADCOM_COM_DownstreamOCD */
#endif
#ifdef DMP_X_BROADCOM_COM_DSL_1
    UINT32    X_BROADCOM_COM_DownstreamOCD_2;	/**< X_BROADCOM_COM_DownstreamOCD_2 */
#endif
} Dev2DslChannelStatsTotalObject;

/*! \brief _Dev2DslChannelStatsTotalObject is used internally to represent Dev2DslChannelStatsTotalObject */
typedef Dev2DslChannelStatsTotalObject _Dev2DslChannelStatsTotalObject;



/*! \brief Obj struct for Device.DSL.Channel.{i}.Stats.Showtime.
 *
 * MDMOID_DEV2_DSL_CHANNEL_STATS_SHOWTIME 1074
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    XTURFECErrors;	/**< XTURFECErrors */
    UINT32    XTUCFECErrors;	/**< XTUCFECErrors */
    UINT32    XTURHECErrors;	/**< XTURHECErrors */
    UINT32    XTUCHECErrors;	/**< XTUCHECErrors */
    UINT32    XTURCRCErrors;	/**< XTURCRCErrors */
    UINT32    XTUCCRCErrors;	/**< XTUCCRCErrors */
} Dev2DslChannelStatsShowtimeObject;

/*! \brief _Dev2DslChannelStatsShowtimeObject is used internally to represent Dev2DslChannelStatsShowtimeObject */
typedef Dev2DslChannelStatsShowtimeObject _Dev2DslChannelStatsShowtimeObject;



/*! \brief Obj struct for Device.DSL.Channel.{i}.Stats.LastShowtime.
 *
 * MDMOID_DEV2_DSL_CHANNEL_STATS_LAST_SHOWTIME 1075
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    XTURFECErrors;	/**< XTURFECErrors */
    UINT32    XTUCFECErrors;	/**< XTUCFECErrors */
    UINT32    XTURHECErrors;	/**< XTURHECErrors */
    UINT32    XTUCHECErrors;	/**< XTUCHECErrors */
    UINT32    XTURCRCErrors;	/**< XTURCRCErrors */
    UINT32    XTUCCRCErrors;	/**< XTUCCRCErrors */
} Dev2DslChannelStatsLastShowtimeObject;

/*! \brief _Dev2DslChannelStatsLastShowtimeObject is used internally to represent Dev2DslChannelStatsLastShowtimeObject */
typedef Dev2DslChannelStatsLastShowtimeObject _Dev2DslChannelStatsLastShowtimeObject;



/*! \brief Obj struct for Device.DSL.Channel.{i}.Stats.CurrentDay.
 *
 * MDMOID_DEV2_DSL_CHANNEL_STATS_CURRENT_DAY 1076
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    XTURFECErrors;	/**< XTURFECErrors */
    UINT32    XTUCFECErrors;	/**< XTUCFECErrors */
    UINT32    XTURHECErrors;	/**< XTURHECErrors */
    UINT32    XTUCHECErrors;	/**< XTUCHECErrors */
    UINT32    XTURCRCErrors;	/**< XTURCRCErrors */
    UINT32    XTUCCRCErrors;	/**< XTUCCRCErrors */
} Dev2DslChannelStatsCurrentDayObject;

/*! \brief _Dev2DslChannelStatsCurrentDayObject is used internally to represent Dev2DslChannelStatsCurrentDayObject */
typedef Dev2DslChannelStatsCurrentDayObject _Dev2DslChannelStatsCurrentDayObject;



/*! \brief Obj struct for Device.DSL.Channel.{i}.Stats.QuarterHour.
 *
 * MDMOID_DEV2_DSL_CHANNEL_STATS_QUARTER_HOUR 1077
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    XTURFECErrors;	/**< XTURFECErrors */
    UINT32    XTUCFECErrors;	/**< XTUCFECErrors */
    UINT32    XTURHECErrors;	/**< XTURHECErrors */
    UINT32    XTUCHECErrors;	/**< XTUCHECErrors */
    UINT32    XTURCRCErrors;	/**< XTURCRCErrors */
    UINT32    XTUCCRCErrors;	/**< XTUCCRCErrors */
} Dev2DslChannelStatsQuarterHourObject;

/*! \brief _Dev2DslChannelStatsQuarterHourObject is used internally to represent Dev2DslChannelStatsQuarterHourObject */
typedef Dev2DslChannelStatsQuarterHourObject _Dev2DslChannelStatsQuarterHourObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP 1090
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    char *    groupStatus;	/**< GroupStatus */
    UINT32    groupID;	/**< GroupID */
    char *    bondSchemesSupported;	/**< BondSchemesSupported */
    char *    bondScheme;	/**< BondScheme */
    UINT32    groupCapacity;	/**< GroupCapacity */
    UINT32    runningTime;	/**< RunningTime */
    UINT32    targetUpRate;	/**< TargetUpRate */
    UINT32    targetDownRate;	/**< TargetDownRate */
    UINT32    upstreamDifferentialDelayTolerance;	/**< UpstreamDifferentialDelayTolerance */
    UINT32    bondedChannelNumberOfEntries;	/**< BondedChannelNumberOfEntries */
} Dev2DslBondingGroupObject;

/*! \brief _Dev2DslBondingGroupObject is used internally to represent Dev2DslBondingGroupObject */
typedef Dev2DslBondingGroupObject _Dev2DslBondingGroupObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.BondedChannel.{i}.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_BONDED_CHANNEL 1091
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
    char *    channel;	/**< Channel */
} Dev2DslBondingGroupBondedChannelObject;

/*! \brief _Dev2DslBondingGroupBondedChannelObject is used internally to represent Dev2DslBondingGroupBondedChannelObject */
typedef Dev2DslBondingGroupBondedChannelObject _Dev2DslBondingGroupBondedChannelObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.BondedChannel.{i}.Ethernet.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_BONDED_CHANNEL_ETHERNET 1092
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2DslBondingGroupBondedChannelEthernetObject;

/*! \brief _Dev2DslBondingGroupBondedChannelEthernetObject is used internally to represent Dev2DslBondingGroupBondedChannelEthernetObject */
typedef Dev2DslBondingGroupBondedChannelEthernetObject _Dev2DslBondingGroupBondedChannelEthernetObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.BondedChannel.{i}.Ethernet.Stats.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_BONDED_CHANNEL_ETHERNET_STATS 1093
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2DslBondingGroupBondedChannelEthernetStatsObject;

/*! \brief _Dev2DslBondingGroupBondedChannelEthernetStatsObject is used internally to represent Dev2DslBondingGroupBondedChannelEthernetStatsObject */
typedef Dev2DslBondingGroupBondedChannelEthernetStatsObject _Dev2DslBondingGroupBondedChannelEthernetStatsObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.Stats.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_STATS 1094
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
    UINT32    totalStart;	/**< TotalStart */
    UINT32    currentDayStart;	/**< CurrentDayStart */
    UINT32    quarterHourStart;	/**< QuarterHourStart */
} Dev2DslBondingGroupStatsObject;

/*! \brief _Dev2DslBondingGroupStatsObject is used internally to represent Dev2DslBondingGroupStatsObject */
typedef Dev2DslBondingGroupStatsObject _Dev2DslBondingGroupStatsObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.Stats.Total.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_STATS_TOTAL 1095
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    upstreamRate;	/**< UpstreamRate */
    UINT32    downstreamRate;	/**< DownstreamRate */
    UINT32    upstreamDifferentialDelay;	/**< UpstreamDifferentialDelay */
    UINT32    erroredSeconds;	/**< ErroredSeconds */
    UINT32    severelyErroredSeconds;	/**< SeverelyErroredSeconds */
    UINT32    unavailableSeconds;	/**< UnavailableSeconds */
} Dev2DslBondingGroupStatsTotalObject;

/*! \brief _Dev2DslBondingGroupStatsTotalObject is used internally to represent Dev2DslBondingGroupStatsTotalObject */
typedef Dev2DslBondingGroupStatsTotalObject _Dev2DslBondingGroupStatsTotalObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.Stats.CurrentDay.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_STATS_CURRENT_DAY 1096
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    upstreamRate;	/**< UpstreamRate */
    UINT32    downstreamRate;	/**< DownstreamRate */
    UINT32    upstreamDifferentialDelay;	/**< UpstreamDifferentialDelay */
    UINT32    erroredSeconds;	/**< ErroredSeconds */
    UINT32    severelyErroredSeconds;	/**< SeverelyErroredSeconds */
    UINT32    unavailableSeconds;	/**< UnavailableSeconds */
} Dev2DslBondingGroupStatsCurrentDayObject;

/*! \brief _Dev2DslBondingGroupStatsCurrentDayObject is used internally to represent Dev2DslBondingGroupStatsCurrentDayObject */
typedef Dev2DslBondingGroupStatsCurrentDayObject _Dev2DslBondingGroupStatsCurrentDayObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.Stats.QuarterHour.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_STATS_QUARTER_HOUR 1097
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    upstreamRate;	/**< UpstreamRate */
    UINT32    downstreamRate;	/**< DownstreamRate */
    UINT32    upstreamDifferentialDelay;	/**< UpstreamDifferentialDelay */
    UINT32    erroredSeconds;	/**< ErroredSeconds */
    UINT32    severelyErroredSeconds;	/**< SeverelyErroredSeconds */
    UINT32    unavailableSeconds;	/**< UnavailableSeconds */
} Dev2DslBondingGroupStatsQuarterHourObject;

/*! \brief _Dev2DslBondingGroupStatsQuarterHourObject is used internally to represent Dev2DslBondingGroupStatsQuarterHourObject */
typedef Dev2DslBondingGroupStatsQuarterHourObject _Dev2DslBondingGroupStatsQuarterHourObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.Ethernet.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_ETHERNET 1098
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2DslBondingGroupEthernetObject;

/*! \brief _Dev2DslBondingGroupEthernetObject is used internally to represent Dev2DslBondingGroupEthernetObject */
typedef Dev2DslBondingGroupEthernetObject _Dev2DslBondingGroupEthernetObject;



/*! \brief Obj struct for Device.DSL.BondingGroup.{i}.Ethernet.Stats.
 *
 * MDMOID_DEV2_DSL_BONDING_GROUP_ETHERNET_STATS 1099
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    PAFErrors;	/**< PAFErrors */
    UINT32    PAFLostFragments;	/**< PAFLostFragments */
    UINT32    overflowErrorsReceived;	/**< OverflowErrorsReceived */
    UINT32    framesDropped;	/**< FramesDropped */
} Dev2DslBondingGroupEthernetStatsObject;

/*! \brief _Dev2DslBondingGroupEthernetStatsObject is used internally to represent Dev2DslBondingGroupEthernetStatsObject */
typedef Dev2DslBondingGroupEthernetStatsObject _Dev2DslBondingGroupEthernetStatsObject;



/*! \brief Obj struct for Device.DSL.Diagnostics.
 *
 * MDMOID_DEV2_DSL_DIAGNOSTICS 1078
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2DslDiagnosticsObject;

/*! \brief _Dev2DslDiagnosticsObject is used internally to represent Dev2DslDiagnosticsObject */
typedef Dev2DslDiagnosticsObject _Dev2DslDiagnosticsObject;



/*! \brief Obj struct for Device.DSL.Diagnostics.ADSLLineTest.
 *
 * MDMOID_ADSL_LINE_TEST 1079
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    SINT32    ACTPSDds;	/**< ACTPSDds */
    SINT32    ACTPSDus;	/**< ACTPSDus */
    SINT32    ACTATPds;	/**< ACTATPds */
    SINT32    ACTATPus;	/**< ACTATPus */
    SINT32    HLINSCds;	/**< HLINSCds */
    SINT32    HLINSCus;	/**< HLINSCus */
    UINT32    HLINGds;	/**< HLINGds */
    UINT32    HLINGus;	/**< HLINGus */
    UINT32    HLOGGds;	/**< HLOGGds */
    UINT32    HLOGGus;	/**< HLOGGus */
    char *    HLOGpsds;	/**< HLOGpsds */
    char *    HLOGpsus;	/**< HLOGpsus */
    UINT32    HLOGMTds;	/**< HLOGMTds */
    UINT32    HLOGMTus;	/**< HLOGMTus */
    char *    LATNpbds;	/**< LATNpbds */
    char *    LATNpbus;	/**< LATNpbus */
    char *    SATNds;	/**< SATNds */
    char *    SATNus;	/**< SATNus */
    SINT32    HLINpsds;	/**< HLINpsds */
    char *    HLINpsus;	/**< HLINpsus */
    UINT32    QLNGds;	/**< QLNGds */
    UINT32    QLNGus;	/**< QLNGus */
    char *    QLNpsds;	/**< QLNpsds */
    char *    QLNpsus;	/**< QLNpsus */
    UINT32    QLNMTds;	/**< QLNMTds */
    UINT32    QLNMTus;	/**< QLNMTus */
    UINT32    SNRGds;	/**< SNRGds */
    UINT32    SNRGus;	/**< SNRGus */
    char *    SNRpsds;	/**< SNRpsds */
    char *    SNRpsus;	/**< SNRpsus */
    UINT32    SNRMTds;	/**< SNRMTds */
    UINT32    SNRMTus;	/**< SNRMTus */
    SINT32    BITSpsds;	/**< BITSpsds */
    char *    BITSpsus;	/**< BITSpsus */
} Dev2DslDiagnosticsADSLLineTestObject;

/*! \brief _Dev2DslDiagnosticsADSLLineTestObject is used internally to represent Dev2DslDiagnosticsADSLLineTestObject */
typedef Dev2DslDiagnosticsADSLLineTestObject _Dev2DslDiagnosticsADSLLineTestObject;



/*! \brief Obj struct for Device.ATM.
 *
 * MDMOID_DEV2_ATM 1130
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    linkNumberOfEntries;	/**< LinkNumberOfEntries */
} Dev2AtmObject;

/*! \brief _Dev2AtmObject is used internally to represent Dev2AtmObject */
typedef Dev2AtmObject _Dev2AtmObject;



/*! \brief Obj struct for Device.ATM.Link.{i}.
 *
 * MDMOID_DEV2_ATM_LINK 1131
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    char *    linkType;	/**< LinkType */
    UBOOL8    autoConfig;	/**< AutoConfig */
    char *    destinationAddress;	/**< DestinationAddress */
    char *    encapsulation;	/**< Encapsulation */
    UBOOL8    FCSPreserved;	/**< FCSPreserved */
    char *    VCSearchList;	/**< VCSearchList */
    char *    AAL;	/**< AAL */
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_ATMInterfaceId;	/**< X_BROADCOM_COM_ATMInterfaceId */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    char *    X_BROADCOM_COM_ConnectionMode;	/**< X_BROADCOM_COM_ConnectionMode */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    char *    X_BROADCOM_COM_MacAddress;	/**< X_BROADCOM_COM_MacAddress */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UBOOL8    X_BROADCOM_COM_ATMEnbQos;	/**< X_BROADCOM_COM_ATMEnbQos */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    char *    X_BROADCOM_COM_GrpScheduler;	/**< X_BROADCOM_COM_GrpScheduler */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_GrpWeight;	/**< X_BROADCOM_COM_GrpWeight */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_GrpPrecedence;	/**< X_BROADCOM_COM_GrpPrecedence */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    char *    X_BROADCOM_COM_SchedulerAlgorithm;	/**< X_BROADCOM_COM_SchedulerAlgorithm */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_QueueWeight;	/**< X_BROADCOM_COM_QueueWeight */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_QueuePrecedence;	/**< X_BROADCOM_COM_QueuePrecedence */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    char *    X_BROADCOM_COM_DropAlgorithm;	/**< X_BROADCOM_COM_DropAlgorithm */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_LowClassMinThreshold;	/**< X_BROADCOM_COM_LowClassMinThreshold */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_LowClassMaxThreshold;	/**< X_BROADCOM_COM_LowClassMaxThreshold */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_HighClassMinThreshold;	/**< X_BROADCOM_COM_HighClassMinThreshold */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_HighClassMaxThreshold;	/**< X_BROADCOM_COM_HighClassMaxThreshold */
#endif
} Dev2AtmLinkObject;

/*! \brief _Dev2AtmLinkObject is used internally to represent Dev2AtmLinkObject */
typedef Dev2AtmLinkObject _Dev2AtmLinkObject;



/*! \brief Obj struct for Device.ATM.Link.{i}.Stats.
 *
 * MDMOID_DEV2_ATM_LINK_STATS 1132
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
    UINT32    transmittedBlocks;	/**< TransmittedBlocks */
    UINT32    receivedBlocks;	/**< ReceivedBlocks */
    UINT32    CRCErrors;	/**< CRCErrors */
    UINT32    HECErrors;	/**< HECErrors */
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_InOAMCells;	/**< X_BROADCOM_COM_InOAMCells */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_OutOAMCells;	/**< X_BROADCOM_COM_OutOAMCells */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_InASMCells;	/**< X_BROADCOM_COM_InASMCells */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_OutASMCells;	/**< X_BROADCOM_COM_OutASMCells */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    UINT32    X_BROADCOM_COM_InCellErrors;	/**< X_BROADCOM_COM_InCellErrors */
#endif
} Dev2AtmLinkStatsObject;

/*! \brief _Dev2AtmLinkStatsObject is used internally to represent Dev2AtmLinkStatsObject */
typedef Dev2AtmLinkStatsObject _Dev2AtmLinkStatsObject;



/*! \brief Obj struct for Device.ATM.Link.{i}.QoS.
 *
 * MDMOID_DEV2_ATM_LINK_QOS 1133
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    qoSClass;	/**< QoSClass */
    UINT32    peakCellRate;	/**< PeakCellRate */
    UINT32    maximumBurstSize;	/**< MaximumBurstSize */
    UINT32    sustainableCellRate;	/**< SustainableCellRate */
#ifdef DMP_DEVICE2_X_BROADCOM_COM_ATMLINK_1
    SINT32    X_BROADCOM_COM_MinimumCellRate;	/**< X_BROADCOM_COM_MinimumCellRate */
#endif
} Dev2AtmLinkQosObject;

/*! \brief _Dev2AtmLinkQosObject is used internally to represent Dev2AtmLinkQosObject */
typedef Dev2AtmLinkQosObject _Dev2AtmLinkQosObject;



/*! \brief Obj struct for Device.ATM.Diagnostics.
 *
 * MDMOID_DEV2_ATM_DIAGNOSTICS 1134
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2AtmDiagnosticsObject;

/*! \brief _Dev2AtmDiagnosticsObject is used internally to represent Dev2AtmDiagnosticsObject */
typedef Dev2AtmDiagnosticsObject _Dev2AtmDiagnosticsObject;



/*! \brief Obj struct for Device.ATM.Diagnostics.F5Loopback.
 *
 * MDMOID_DEV2_ATM_DIAGNOSTICS_F5_LOOPBACK 1135
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} Dev2AtmDiagnosticsF5LoopbackObject;

/*! \brief _Dev2AtmDiagnosticsF5LoopbackObject is used internally to represent Dev2AtmDiagnosticsF5LoopbackObject */
typedef Dev2AtmDiagnosticsF5LoopbackObject _Dev2AtmDiagnosticsF5LoopbackObject;



/*! \brief Obj struct for Device.ATM.Diagnostics.X_BROADCOM_COM_F4EndToEndLoopback.
 *
 * MDMOID_DEV2_ATM_DIAGNOSTICS_F4_END_TO_END_LOOPBACK 1136
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} Dev2AtmDiagnosticsF4EndToEndLoopbackObject;

/*! \brief _Dev2AtmDiagnosticsF4EndToEndLoopbackObject is used internally to represent Dev2AtmDiagnosticsF4EndToEndLoopbackObject */
typedef Dev2AtmDiagnosticsF4EndToEndLoopbackObject _Dev2AtmDiagnosticsF4EndToEndLoopbackObject;



/*! \brief Obj struct for Device.ATM.Diagnostics.X_BROADCOM_COM_F4Loopback.
 *
 * MDMOID_DEV2_ATM_DIAGNOSTICS_F4_LOOPBACK 1137
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} Dev2AtmDiagnosticsF4LoopbackObject;

/*! \brief _Dev2AtmDiagnosticsF4LoopbackObject is used internally to represent Dev2AtmDiagnosticsF4LoopbackObject */
typedef Dev2AtmDiagnosticsF4LoopbackObject _Dev2AtmDiagnosticsF4LoopbackObject;



/*! \brief Obj struct for Device.ATM.Diagnostics.X_BROADCOM_COM_F5EndToEndLoopback.
 *
 * MDMOID_DEV2_ATM_DIAGNOSTICS_F5_END_TO_END_LOOPBACK 1138
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} Dev2AtmDiagnosticsF5EndToEndLoopbackObject;

/*! \brief _Dev2AtmDiagnosticsF5EndToEndLoopbackObject is used internally to represent Dev2AtmDiagnosticsF5EndToEndLoopbackObject */
typedef Dev2AtmDiagnosticsF5EndToEndLoopbackObject _Dev2AtmDiagnosticsF5EndToEndLoopbackObject;



/*! \brief Obj struct for Device.PTM.
 *
 * MDMOID_DEV2_PTM 1140
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    linkNumberOfEntries;	/**< LinkNumberOfEntries */
} Dev2PtmObject;

/*! \brief _Dev2PtmObject is used internally to represent Dev2PtmObject */
typedef Dev2PtmObject _Dev2PtmObject;



/*! \brief Obj struct for Device.PTM.Link.{i}.
 *
 * MDMOID_DEV2_PTM_LINK 1141
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    SINT32    MACAddress;	/**< MACAddress */
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UBOOL8    X_BROADCOM_COM_PTMEnbQos;	/**< X_BROADCOM_COM_PTMEnbQos */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_PTMPortId;	/**< X_BROADCOM_COM_PTMPortId */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    char *    X_BROADCOM_COM_ConnectionMode;	/**< X_BROADCOM_COM_ConnectionMode */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UBOOL8    X_BROADCOM_COM_PTMPriorityLow;	/**< X_BROADCOM_COM_PTMPriorityLow */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UBOOL8    X_BROADCOM_COM_PTMPriorityHigh;	/**< X_BROADCOM_COM_PTMPriorityHigh */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    char *    X_BROADCOM_COM_GrpScheduler;	/**< X_BROADCOM_COM_GrpScheduler */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_GrpWeight;	/**< X_BROADCOM_COM_GrpWeight */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_GrpPrecedence;	/**< X_BROADCOM_COM_GrpPrecedence */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    char *    X_BROADCOM_COM_SchedulerAlgorithm;	/**< X_BROADCOM_COM_SchedulerAlgorithm */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_QueueWeight;	/**< X_BROADCOM_COM_QueueWeight */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_QueuePrecedence;	/**< X_BROADCOM_COM_QueuePrecedence */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    char *    X_BROADCOM_COM_DropAlgorithm;	/**< X_BROADCOM_COM_DropAlgorithm */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_LowClassMinThreshold;	/**< X_BROADCOM_COM_LowClassMinThreshold */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_LowClassMaxThreshold;	/**< X_BROADCOM_COM_LowClassMaxThreshold */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_HighClassMinThreshold;	/**< X_BROADCOM_COM_HighClassMinThreshold */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_HighClassMaxThreshold;	/**< X_BROADCOM_COM_HighClassMaxThreshold */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    SINT32    X_BROADCOM_COM_QueueMinimumRate;	/**< X_BROADCOM_COM_QueueMinimumRate */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    SINT32    X_BROADCOM_COM_QueueShapingRate;	/**< X_BROADCOM_COM_QueueShapingRate */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_QueueShapingBurstSize;	/**< X_BROADCOM_COM_QueueShapingBurstSize */
#endif
} Dev2PtmLinkObject;

/*! \brief _Dev2PtmLinkObject is used internally to represent Dev2PtmLinkObject */
typedef Dev2PtmLinkObject _Dev2PtmLinkObject;



/*! \brief Obj struct for Device.PTM.Link.{i}.Stats.
 *
 * MDMOID_DEV2_PTM_LINK_STATS 1142
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_InOAMCells;	/**< X_BROADCOM_COM_InOAMCells */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_OutOAMCells;	/**< X_BROADCOM_COM_OutOAMCells */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_InASMCells;	/**< X_BROADCOM_COM_InASMCells */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_OutASMCells;	/**< X_BROADCOM_COM_OutASMCells */
#endif
#ifdef DMP_DEVICE2_X_BROADCOM_COM_PTMLINK_1
    UINT32    X_BROADCOM_COM_InCellErrors;	/**< X_BROADCOM_COM_InCellErrors */
#endif
} Dev2PtmLinkStatsObject;

/*! \brief _Dev2PtmLinkStatsObject is used internally to represent Dev2PtmLinkStatsObject */
typedef Dev2PtmLinkStatsObject _Dev2PtmLinkStatsObject;



/*! \brief Obj struct for Device.USB.
 *
 * MDMOID_DEV2_USB 1170
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
#ifdef DMP_DEVICE2_USBPORT_1
    UINT32    portNumberOfEntries;	/**< PortNumberOfEntries */
#endif
} Dev2UsbObject;

/*! \brief _Dev2UsbObject is used internally to represent Dev2UsbObject */
typedef Dev2UsbObject _Dev2UsbObject;



/*! \brief Obj struct for Device.USB.Interface.{i}.
 *
 * MDMOID_DEV2_USB_INTERFACE 1171
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
    char *    MACAddress;	/**< MACAddress */
} Dev2UsbInterfaceObject;

/*! \brief _Dev2UsbInterfaceObject is used internally to represent Dev2UsbInterfaceObject */
typedef Dev2UsbInterfaceObject _Dev2UsbInterfaceObject;



/*! \brief Obj struct for Device.USB.Interface.{i}.Stats.
 *
 * MDMOID_DEV2_USB_INTERFACE_STATS 1172
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    X_BROADCOM_COM_MulticastBytesSent;	/**< X_BROADCOM_COM_MulticastBytesSent */
    UINT64    X_BROADCOM_COM_MulticastBytesReceived;	/**< X_BROADCOM_COM_MulticastBytesReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
} Dev2UsbInterfaceStatsObject;

/*! \brief _Dev2UsbInterfaceStatsObject is used internally to represent Dev2UsbInterfaceStatsObject */
typedef Dev2UsbInterfaceStatsObject _Dev2UsbInterfaceStatsObject;



/*! \brief Obj struct for Device.USB.Port.{i}.
 *
 * MDMOID_DEV2_USB_PORT 1173
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
} Dev2UsbPortObject;

/*! \brief _Dev2UsbPortObject is used internally to represent Dev2UsbPortObject */
typedef Dev2UsbPortObject _Dev2UsbPortObject;



/*! \brief Obj struct for Device.USB.USBHosts.
 *
 * MDMOID_DEV2_USB_HOSTS 1174
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    hostNumberOfEntries;	/**< HostNumberOfEntries */
} Dev2UsbHostsObject;

/*! \brief _Dev2UsbHostsObject is used internally to represent Dev2UsbHostsObject */
typedef Dev2UsbHostsObject _Dev2UsbHostsObject;



/*! \brief Obj struct for Device.USB.USBHosts.Host.{i}.
 *
 * MDMOID_DEV2_USB_HOST 1175
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    char *    type;	/**< Type */
    char *    USBVersion;	/**< USBVersion */
    UINT32    deviceNumberOfEntries;	/**< DeviceNumberOfEntries */
} Dev2UsbHostObject;

/*! \brief _Dev2UsbHostObject is used internally to represent Dev2UsbHostObject */
typedef Dev2UsbHostObject _Dev2UsbHostObject;



/*! \brief Obj struct for Device.USB.USBHosts.Host.{i}.Device.{i}.
 *
 * MDMOID_DEV2_USB_HOST_DEVICE 1176
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    X_BROADCOM_COM_DeviceKey;	/**< X_BROADCOM_COM_DeviceKey */
    UINT32    deviceNumber;	/**< DeviceNumber */
    char *    USBVersion;	/**< USBVersion */
    HEXBINARY  deviceClass;	/**< DeviceClass */
    HEXBINARY  deviceSubClass;	/**< DeviceSubClass */
    UINT32    deviceVersion;	/**< DeviceVersion */
    HEXBINARY  deviceProtocol;	/**< DeviceProtocol */
    UINT32    productID;	/**< ProductID */
    UINT32    vendorID;	/**< VendorID */
    char *    manufacturer;	/**< Manufacturer */
    char *    productClass;	/**< ProductClass */
    char *    serialNumber;	/**< SerialNumber */
    UINT32    port;	/**< Port */
    char *    USBPort;	/**< USBPort */
    char *    rate;	/**< Rate */
    char *    parent;	/**< Parent */
    UINT32    maxChildren;	/**< MaxChildren */
#ifdef DMP_DEVICE2_USBHOSTSADV_1
    UBOOL8    isSelfPowered;	/**< IsSelfPowered */
#endif
#ifdef DMP_DEVICE2_USBHOSTSADV_1
    UINT32    configurationNumberOfEntries;	/**< ConfigurationNumberOfEntries */
#endif
} Dev2UsbHostDeviceObject;

/*! \brief _Dev2UsbHostDeviceObject is used internally to represent Dev2UsbHostDeviceObject */
typedef Dev2UsbHostDeviceObject _Dev2UsbHostDeviceObject;



/*! \brief Obj struct for Device.USB.USBHosts.Host.{i}.Device.{i}.Configuration.{i}.
 *
 * MDMOID_DEV2_USB_HOST_DEVICE_CONFIG 1177
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    configurationNumber;	/**< ConfigurationNumber */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
} Dev2UsbHostDeviceConfigObject;

/*! \brief _Dev2UsbHostDeviceConfigObject is used internally to represent Dev2UsbHostDeviceConfigObject */
typedef Dev2UsbHostDeviceConfigObject _Dev2UsbHostDeviceConfigObject;



/*! \brief Obj struct for Device.USB.USBHosts.Host.{i}.Device.{i}.Configuration.{i}.Interface.{i}.
 *
 * MDMOID_DEV2_USB_HOST_DEVICE_CONFIG_IFC 1178
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceNumber;	/**< InterfaceNumber */
    HEXBINARY  interfaceClass;	/**< InterfaceClass */
    HEXBINARY  interfaceSubClass;	/**< InterfaceSubClass */
    HEXBINARY  interfaceProtocol;	/**< InterfaceProtocol */
} Dev2UsbHostDeviceConfigIfcObject;

/*! \brief _Dev2UsbHostDeviceConfigIfcObject is used internally to represent Dev2UsbHostDeviceConfigIfcObject */
typedef Dev2UsbHostDeviceConfigIfcObject _Dev2UsbHostDeviceConfigIfcObject;



/*! \brief Obj struct for Device.MoCA.
 *
 * MDMOID_DEV2_MOCA 1210
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceNumberOfEntries;	/**< InterfaceNumberOfEntries */
} Dev2MocaObject;

/*! \brief _Dev2MocaObject is used internally to represent Dev2MocaObject */
typedef Dev2MocaObject _Dev2MocaObject;



/*! \brief Obj struct for Device.MoCA.Interface.{i}.
 *
 * MDMOID_DEV2_MOCA_INTERFACE 1211
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    UBOOL8    X_BROADCOM_COM_AutoNwSearch;	/**< X_BROADCOM_COM_AutoNwSearch */
    char *    X_BROADCOM_COM_InitParmsString;	/**< X_BROADCOM_COM_InitParmsString */
    char *    X_BROADCOM_COM_MocaControl;	/**< X_BROADCOM_COM_MocaControl */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
    char *    MACAddress;	/**< MACAddress */
    UINT32    X_BROADCOM_COM_HwVersion;	/**< X_BROADCOM_COM_HwVersion */
    char *    firmwareVersion;	/**< FirmwareVersion */
    UINT32    maxBitRate;	/**< MaxBitRate */
    UINT32    X_BROADCOM_COM_BwStatus;	/**< X_BROADCOM_COM_BwStatus */
    char *    currentVersion;	/**< CurrentVersion */
    UINT32    X_BROADCOM_COM_SelfMoCAVersion;	/**< X_BROADCOM_COM_SelfMoCAVersion */
    UINT32    X_BROADCOM_COM_VendorId;	/**< X_BROADCOM_COM_VendorId */
    UINT32    X_BROADCOM_COM_MrNonDefSeqNumber;	/**< X_BROADCOM_COM_MrNonDefSeqNumber */
    UINT32    networkCoordinator;	/**< NetworkCoordinator */
    UINT32    nodeID;	/**< NodeID */
    UBOOL8    preferredNC;	/**< PreferredNC */
    UINT32    backupNC;	/**< BackupNC */
    UBOOL8    privacyEnabled;	/**< PrivacyEnabled */
    UINT32    currentOperFreq;	/**< CurrentOperFreq */
    UINT32    lastOperFreq;	/**< LastOperFreq */
    char *    keyPassphrase;	/**< KeyPassphrase */
    HEXBINARY  networkTabooMask;	/**< NetworkTabooMask */
    UBOOL8    QAM256Capable;	/**< QAM256Capable */
    UINT32    associatedDeviceNumberOfEntries;	/**< AssociatedDeviceNumberOfEntries */
} Dev2MocaInterfaceObject;

/*! \brief _Dev2MocaInterfaceObject is used internally to represent Dev2MocaInterfaceObject */
typedef Dev2MocaInterfaceObject _Dev2MocaInterfaceObject;



/*! \brief Obj struct for Device.MoCA.Interface.{i}.Stats.
 *
 * MDMOID_DEV2_MOCA_INTERFACE_STATS 1212
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
    UINT32    X_BROADCOM_COM_NCHandOffs;	/**< X_BROADCOM_COM_NCHandOffs */
    UINT32    X_BROADCOM_COM_NCBackups;	/**< X_BROADCOM_COM_NCBackups */
} Dev2MocaInterfaceStatsObject;

/*! \brief _Dev2MocaInterfaceStatsObject is used internally to represent Dev2MocaInterfaceStatsObject */
typedef Dev2MocaInterfaceStatsObject _Dev2MocaInterfaceStatsObject;



/*! \brief Obj struct for Device.WiFi.
 *
 * MDMOID_DEV2_WIFI 1250
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    radioNumberOfEntries;	/**< RadioNumberOfEntries */
    UINT32    SSIDNumberOfEntries;	/**< SSIDNumberOfEntries */
    UINT32    accessPointNumberOfEntries;	/**< AccessPointNumberOfEntries */
#ifdef DMP_DEVICE2_WIFIENDPOINT_1
    UINT32    endPointNumberOfEntries;	/**< EndPointNumberOfEntries */
#endif
    char *    X_BROADCOM_COM_WlNvram;	/**< X_BROADCOM_COM_WlNvram */
} Dev2WifiObject;

/*! \brief _Dev2WifiObject is used internally to represent Dev2WifiObject */
typedef Dev2WifiObject _Dev2WifiObject;



/*! \brief Obj struct for Device.WiFi.Radio.{i}.
 *
 * MDMOID_DEV2_WIFI_RADIO 1251
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
    UINT32    maxBitRate;	/**< MaxBitRate */
    char *    supportedFrequencyBands;	/**< SupportedFrequencyBands */
    UBOOL8    X_BROADCOM_COM_WlApstaSupported;	/**< X_BROADCOM_COM_WlApstaSupported */
    UINT64    X_BROADCOM_COM_GPIOOverlays;	/**< X_BROADCOM_COM_GPIOOverlays */
    char *    X_BROADCOM_COM_WlCountry;	/**< X_BROADCOM_COM_WlCountry */
    SINT32    X_BROADCOM_COM_WlSsidIdx;	/**< X_BROADCOM_COM_WlSsidIdx */
    SINT32    X_BROADCOM_COM_WlRegRev;	/**< X_BROADCOM_COM_WlRegRev */
    SINT32    X_BROADCOM_COM_WlAtf;	/**< X_BROADCOM_COM_WlAtf */
    SINT32    X_BROADCOM_COM_WlTaf;	/**< X_BROADCOM_COM_WlTaf */
    char *    operatingFrequencyBand;	/**< OperatingFrequencyBand */
    char *    supportedStandards;	/**< SupportedStandards */
    char *    operatingStandards;	/**< OperatingStandards */
    char *    possibleChannels;	/**< PossibleChannels */
    char *    channelsInUse;	/**< ChannelsInUse */
    UINT32    X_BROADCOM_COM_WlCurrentChannel;	/**< X_BROADCOM_COM_WlCurrentChannel */
    UINT32    channel;	/**< Channel */
    UBOOL8    autoChannelSupported;	/**< AutoChannelSupported */
    UBOOL8    autoChannelEnable;	/**< AutoChannelEnable */
    UINT32    autoChannelRefreshPeriod;	/**< AutoChannelRefreshPeriod */
    char *    operatingChannelBandwidth;	/**< OperatingChannelBandwidth */
    char *    extensionChannel;	/**< ExtensionChannel */
    char *    guardInterval;	/**< GuardInterval */
    SINT32    MCS;	/**< MCS */
    char *    transmitPowerSupported;	/**< TransmitPowerSupported */
    SINT32    transmitPower;	/**< TransmitPower */
    UBOOL8    IEEE80211hSupported;	/**< IEEE80211hSupported */
    UBOOL8    IEEE80211hEnabled;	/**< IEEE80211hEnabled */
    char *    regulatoryDomain;	/**< RegulatoryDomain */
    char *    bsdPrimary;	/**< BsdPrimary */
    char *    bsdHelper;	/**< BsdHelper */
    SINT32    bsdHport;	/**< BsdHport */
    SINT32    bsdPport;	/**< BsdPport */
    SINT32    bsdRole;	/**< BsdRole */
    SINT32    ssdEnable;	/**< SsdEnable */
    char *    wlVer;	/**< WlVer */
    SINT32    wlTafEnable;	/**< WlTafEnable */
    SINT32    wlIperf;	/**< WlIperf */
    SINT32    wlVecSupported;	/**< WlVecSupported */
    SINT32    wlVec;	/**< WlVec */
    SINT32    wlTXBFCapable;	/**< WlTXBFCapable */
    SINT32    wlEnableBFR;	/**< WlEnableBFR */
    SINT32    wlEnableBFE;	/**< WlEnableBFE */
    SINT32    wlPspretendThreshold;	/**< WlPspretendThreshold */
    SINT32    wlPspretendRetryLimit;	/**< WlPspretendRetryLimit */
    SINT32    wlRegMode;	/**< WlRegMode */
    SINT32    wlIntferTcptxfail;	/**< WlIntferTcptxfail */
    SINT32    wlIntferPeriod;	/**< WlIntferPeriod */
    SINT32    wlIntferCnt;	/**< WlIntferCnt */
    SINT32    wlIntferTxfail;	/**< WlIntferTxfail */
    char *    wlAcsDfsrImmediate;	/**< WlAcsDfsrImmediate */
    char *    wlAcsExclChannels;	/**< WlAcsExclChannels */
    char *    wlAcsDfsrDeferred;	/**< WlAcsDfsrDeferred */
    char *    wlAcsDfsrActivity;	/**< WlAcsDfsrActivity */
    SINT32    wlAcsFcsMode;	/**< WlAcsFcsMode */
    SINT32    wlAcsDfs;	/**< WlAcsDfs */
    SINT32    wlAcsCiScanTimer;	/**< WlAcsCiScanTimer */
    SINT32    wlAcsCiScanTimeout;	/**< WlAcsCiScanTimeout */
    SINT32    wlAcsScanEntryExpire;	/**< WlAcsScanEntryExpire */
    SINT32    wlAcsTxIdleCnt;	/**< WlAcsTxIdleCnt */
    SINT32    wlAcsChanDwellTime;	/**< WlAcsChanDwellTime */
    SINT32    wlAcsChanFlopPeriod;	/**< WlAcsChanFlopPeriod */
    char *    X_BROADCOM_COM_WlOperMode;	/**< X_BROADCOM_COM_WlOperMode */
    SINT32    X_BROADCOM_COM_WlCoreRev;	/**< X_BROADCOM_COM_WlCoreRev */
    char *    X_BROADCOM_COM_WlBasicRate;	/**< X_BROADCOM_COM_WlBasicRate */
    char *    X_BROADCOM_COM_WlProtection;	/**< X_BROADCOM_COM_WlProtection */
    char *    X_BROADCOM_COM_WlPreambleType;	/**< X_BROADCOM_COM_WlPreambleType */
    char *    X_BROADCOM_COM_WlFrameBurst;	/**< X_BROADCOM_COM_WlFrameBurst */
    SINT32    X_BROADCOM_COM_WlFrgThrshld;	/**< X_BROADCOM_COM_WlFrgThrshld */
    SINT32    X_BROADCOM_COM_WlRtsThrshld;	/**< X_BROADCOM_COM_WlRtsThrshld */
    SINT32    X_BROADCOM_COM_WlDtmIntvl;	/**< X_BROADCOM_COM_WlDtmIntvl */
    SINT32    X_BROADCOM_COM_WlBcnIntvl;	/**< X_BROADCOM_COM_WlBcnIntvl */
    SINT32    X_BROADCOM_COM_WlRate;	/**< X_BROADCOM_COM_WlRate */
    SINT32    X_BROADCOM_COM_WlgMode;	/**< X_BROADCOM_COM_WlgMode */
    SINT32    X_BROADCOM_COM_WlMCastRate;	/**< X_BROADCOM_COM_WlMCastRate */
    SINT32    X_BROADCOM_COM_WlInfra;	/**< X_BROADCOM_COM_WlInfra */
    SINT32    X_BROADCOM_COM_WlAntDiv;	/**< X_BROADCOM_COM_WlAntDiv */
    SINT32    X_BROADCOM_COM_WlDfsPreIsm;	/**< X_BROADCOM_COM_WlDfsPreIsm */
    SINT32    X_BROADCOM_COM_WlDfsPostIsm;	/**< X_BROADCOM_COM_WlDfsPostIsm */
    SINT32    X_BROADCOM_COM_WlTpcDb;	/**< X_BROADCOM_COM_WlTpcDb */
    SINT32    X_BROADCOM_COM_WlCsScanTimer;	/**< X_BROADCOM_COM_WlCsScanTimer */
    SINT32    X_BROADCOM_COM_WlMBands;	/**< X_BROADCOM_COM_WlMBands */
    char *    X_BROADCOM_COM_WlVersion;	/**< X_BROADCOM_COM_WlVersion */
    SINT32    X_BROADCOM_COM_WlNumBss;	/**< X_BROADCOM_COM_WlNumBss */
    SINT32    X_BROADCOM_COM_WlMaxMbss;	/**< X_BROADCOM_COM_WlMaxMbss */
    UBOOL8    X_BROADCOM_COM_WlMbssSupported;	/**< X_BROADCOM_COM_WlMbssSupported */
    char *    X_BROADCOM_COM_WlNProtection;	/**< X_BROADCOM_COM_WlNProtection */
    SINT32    X_BROADCOM_COM_WlAmpduSupported;	/**< X_BROADCOM_COM_WlAmpduSupported */
    SINT32    X_BROADCOM_COM_WlAmsduSupported;	/**< X_BROADCOM_COM_WlAmsduSupported */
    char *    X_BROADCOM_COM_WlAmpdu;	/**< X_BROADCOM_COM_WlAmpdu */
    char *    X_BROADCOM_COM_WlAmsdu;	/**< X_BROADCOM_COM_WlAmsdu */
    char *    X_BROADCOM_COM_WlNmode;	/**< X_BROADCOM_COM_WlNmode */
    char *    X_BROADCOM_COM_WlStbcTx;	/**< X_BROADCOM_COM_WlStbcTx */
    SINT32    X_BROADCOM_COM_WlStbcRx;	/**< X_BROADCOM_COM_WlStbcRx */
    SINT32    X_BROADCOM_COM_WlLazyWds;	/**< X_BROADCOM_COM_WlLazyWds */
    SINT32    X_BROADCOM_COM_WlAburnSupported;	/**< X_BROADCOM_COM_WlAburnSupported */
    char *    X_BROADCOM_COM_WlAfterBurnerEn;	/**< X_BROADCOM_COM_WlAfterBurnerEn */
    SINT32    X_BROADCOM_COM_WlWmfSupported;	/**< X_BROADCOM_COM_WlWmfSupported */
    SINT32    X_BROADCOM_COM_WlWMMSupported;	/**< X_BROADCOM_COM_WlWMMSupported */
    char *    X_BROADCOM_COM_WlRifs;	/**< X_BROADCOM_COM_WlRifs */
    SINT32    X_BROADCOM_COM_WlRifsAdvert;	/**< X_BROADCOM_COM_WlRifsAdvert */
    SINT32    X_BROADCOM_COM_WlChanImEnab;	/**< X_BROADCOM_COM_WlChanImEnab */
    SINT32    X_BROADCOM_COM_WlObssCoex;	/**< X_BROADCOM_COM_WlObssCoex */
    SINT32    X_BROADCOM_COM_WlRxChainPwrSaveEnable;	/**< X_BROADCOM_COM_WlRxChainPwrSaveEnable */
    SINT32    X_BROADCOM_COM_WlRxChainPwrSaveQuietTime;	/**< X_BROADCOM_COM_WlRxChainPwrSaveQuietTime */
    SINT32    X_BROADCOM_COM_WlRxChainPwrSavePps;	/**< X_BROADCOM_COM_WlRxChainPwrSavePps */
    SINT32    X_BROADCOM_COM_WlRadioPwrSaveEnable;	/**< X_BROADCOM_COM_WlRadioPwrSaveEnable */
    SINT32    X_BROADCOM_COM_WlRadioPwrSaveQuietTime;	/**< X_BROADCOM_COM_WlRadioPwrSaveQuietTime */
    SINT32    X_BROADCOM_COM_WlRadioPwrSavePps;	/**< X_BROADCOM_COM_WlRadioPwrSavePps */
    SINT32    X_BROADCOM_COM_WlRadioPwrSaveLevel;	/**< X_BROADCOM_COM_WlRadioPwrSaveLevel */
    UBOOL8    X_BROADCOM_COM_WlTxPriority;	/**< X_BROADCOM_COM_WlTxPriority */
    UBOOL8    X_BROADCOM_COM_WlRxPriority;	/**< X_BROADCOM_COM_WlRxPriority */
    UBOOL8    X_BROADCOM_COM_WlCalPriority;	/**< X_BROADCOM_COM_WlCalPriority */
    char *    X_BROADCOM_COM_WlWds;	/**< X_BROADCOM_COM_WlWds */
    SINT32    X_BROADCOM_COM_WlWdsSec;	/**< X_BROADCOM_COM_WlWdsSec */
    SINT32    X_BROADCOM_COM_WlWdsTimeout;	/**< X_BROADCOM_COM_WlWdsTimeout */
    char *    X_BROADCOM_COM_WlWdsKey;	/**< X_BROADCOM_COM_WlWdsKey */
    SINT32    X_BROADCOM_COM_WlWdsSecEnable;	/**< X_BROADCOM_COM_WlWdsSecEnable */
    SINT32    X_BROADCOM_COM_WlEnableUre;	/**< X_BROADCOM_COM_WlEnableUre */
    SINT32    X_BROADCOM_COM_WlStaRetryTime;	/**< X_BROADCOM_COM_WlStaRetryTime */
    SINT32    X_BROADCOM_COM_WlGlobalMaxAssoc;	/**< X_BROADCOM_COM_WlGlobalMaxAssoc */
    SINT32    X_BROADCOM_COM_WlTxbfBfeCap;	/**< X_BROADCOM_COM_WlTxbfBfeCap */
    SINT32    X_BROADCOM_COM_WlTxbfBfrCap;	/**< X_BROADCOM_COM_WlTxbfBfrCap */
} Dev2WifiRadioObject;

/*! \brief _Dev2WifiRadioObject is used internally to represent Dev2WifiRadioObject */
typedef Dev2WifiRadioObject _Dev2WifiRadioObject;



/*! \brief Obj struct for Device.WiFi.Radio.{i}.Stats.
 *
 * MDMOID_DEV2_WIFI_RADIO_STATS 1252
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT32    PLCPErrorCount;	/**< PLCPErrorCount */
    UINT32    FCSErrorCount;	/**< FCSErrorCount */
    UINT32    invalidMACCount;	/**< InvalidMACCount */
    UINT32    packetsOtherReceived;	/**< PacketsOtherReceived */
} Dev2WifiRadioStatsObject;

/*! \brief _Dev2WifiRadioStatsObject is used internally to represent Dev2WifiRadioStatsObject */
typedef Dev2WifiRadioStatsObject _Dev2WifiRadioStatsObject;



/*! \brief Obj struct for Device.WiFi.SSID.{i}.
 *
 * MDMOID_DEV2_WIFI_SSID 1253
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    UBOOL8    X_BROADCOM_COM_Upstream;	/**< X_BROADCOM_COM_Upstream */
    char *    lowerLayers;	/**< LowerLayers */
    char *    BSSID;	/**< BSSID */
    char *    MACAddress;	/**< MACAddress */
    char *    SSID;	/**< SSID */
    UINT32    X_BROADCOM_COM_Adapter;	/**< X_BROADCOM_COM_Adapter */
    SINT32    X_BROADCOM_COM_WlEnableWmf;	/**< X_BROADCOM_COM_WlEnableWmf */
    UINT32    X_BROADCOM_COM_Index;	/**< X_BROADCOM_COM_Index */
    SINT32    X_BROADCOM_COM_WlIdx;	/**< X_BROADCOM_COM_WlIdx */
    char *    X_BROADCOM_COM_WlIfname;	/**< X_BROADCOM_COM_WlIfname */
    char *    X_BROADCOM_COM_WlBrName;	/**< X_BROADCOM_COM_WlBrName */
    char *    X_BROADCOM_COM_WlMode;	/**< X_BROADCOM_COM_WlMode */
} Dev2WifiSsidObject;

/*! \brief _Dev2WifiSsidObject is used internally to represent Dev2WifiSsidObject */
typedef Dev2WifiSsidObject _Dev2WifiSsidObject;



/*! \brief Obj struct for Device.WiFi.SSID.{i}.Stats.
 *
 * MDMOID_DEV2_WIFI_SSID_STATS 1254
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    retransCount;	/**< RetransCount */
    UINT32    failedRetransCount;	/**< FailedRetransCount */
    UINT32    retryCount;	/**< RetryCount */
    UINT32    multipleRetryCount;	/**< MultipleRetryCount */
    UINT32    ACKFailureCount;	/**< ACKFailureCount */
    UINT32    aggregatedPacketCount;	/**< AggregatedPacketCount */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
} Dev2WifiSsidStatsObject;

/*! \brief _Dev2WifiSsidStatsObject is used internally to represent Dev2WifiSsidStatsObject */
typedef Dev2WifiSsidStatsObject _Dev2WifiSsidStatsObject;



/*! \brief Obj struct for Device.WiFi.AccessPoint.{i}.
 *
 * MDMOID_DEV2_WIFI_ACCESS_POINT 1255
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    SSIDReference;	/**< SSIDReference */
    UBOOL8    SSIDAdvertisementEnabled;	/**< SSIDAdvertisementEnabled */
    UINT32    retryLimit;	/**< RetryLimit */
    UBOOL8    WMMCapability;	/**< WMMCapability */
    UBOOL8    UAPSDCapability;	/**< UAPSDCapability */
    UBOOL8    WMMEnable;	/**< WMMEnable */
    UBOOL8    X_BROADCOM_COM_WlSesAvail;	/**< X_BROADCOM_COM_WlSesAvail */
    UBOOL8    X_BROADCOM_COM_WlWapiAvail;	/**< X_BROADCOM_COM_WlWapiAvail */
    UBOOL8    UAPSDEnable;	/**< UAPSDEnable */
    UINT32    associatedDeviceNumberOfEntries;	/**< AssociatedDeviceNumberOfEntries */
    UINT32    maxAssociatedDevices;	/**< MaxAssociatedDevices */
    UBOOL8    isolationEnable;	/**< IsolationEnable */
    UINT32    X_BROADCOM_COM_Adapter;	/**< X_BROADCOM_COM_Adapter */
    UINT32    X_BROADCOM_COM_Index;	/**< X_BROADCOM_COM_Index */
    SINT32    X_BROADCOM_COM_WlWmeNoAck;	/**< X_BROADCOM_COM_WlWmeNoAck */
    SINT32    X_BROADCOM_COM_WlEnableHspot;	/**< X_BROADCOM_COM_WlEnableHspot */
    SINT32    X_BROADCOM_COM_WlNReqd;	/**< X_BROADCOM_COM_WlNReqd */
    char *    X_BROADCOM_COM_WlFltMacMode;	/**< X_BROADCOM_COM_WlFltMacMode */
    char *    X_BROADCOM_COM_WlFltMacList;	/**< X_BROADCOM_COM_WlFltMacList */
} Dev2WifiAccessPointObject;

/*! \brief _Dev2WifiAccessPointObject is used internally to represent Dev2WifiAccessPointObject */
typedef Dev2WifiAccessPointObject _Dev2WifiAccessPointObject;



/*! \brief Obj struct for Device.WiFi.AccessPoint.{i}.Security.
 *
 * MDMOID_DEV2_WIFI_ACCESS_POINT_SECURITY 1256
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    reset;	/**< Reset */
    char *    modesSupported;	/**< ModesSupported */
    char *    modeEnabled;	/**< ModeEnabled */
    SINT32    X_BROADCOM_COM_WlKeyBit;	/**< X_BROADCOM_COM_WlKeyBit */
    char *    wlWep;	/**< WlWep */
    HEXBINARY  WEPKey;	/**< WEPKey */
    HEXBINARY  preSharedKey;	/**< PreSharedKey */
    char *    keyPassphrase;	/**< KeyPassphrase */
    UINT32    rekeyingInterval;	/**< RekeyingInterval */
    char *    radiusServerIPAddr;	/**< RadiusServerIPAddr */
    char *    secondaryRadiusServerIPAddr;	/**< SecondaryRadiusServerIPAddr */
    UINT32    radiusServerPort;	/**< RadiusServerPort */
    UINT32    secondaryRadiusServerPort;	/**< SecondaryRadiusServerPort */
    char *    radiusSecret;	/**< RadiusSecret */
    char *    secondaryRadiusSecret;	/**< SecondaryRadiusSecret */
    HEXBINARY  X_BROADCOM_COM_WlKey1;	/**< X_BROADCOM_COM_WlKey1 */
    HEXBINARY  X_BROADCOM_COM_WlKey2;	/**< X_BROADCOM_COM_WlKey2 */
    HEXBINARY  X_BROADCOM_COM_WlKey3;	/**< X_BROADCOM_COM_WlKey3 */
    HEXBINARY  X_BROADCOM_COM_WlKey4;	/**< X_BROADCOM_COM_WlKey4 */
    SINT32    X_BROADCOM_COM_WlKeyIndex;	/**< X_BROADCOM_COM_WlKeyIndex */
    char *    X_BROADCOM_COM_WlWpaEncryption;	/**< X_BROADCOM_COM_WlWpaEncryption */
    char *    wlAuthMode;	/**< WlAuthMode */
    char *    wlAuthAkm;	/**< WlAuthAkm */
    SINT32    X_BROADCOM_COM_WlAuth;	/**< X_BROADCOM_COM_WlAuth */
    SINT32    X_BROADCOM_COM_WlPreauth;	/**< X_BROADCOM_COM_WlPreauth */
    SINT32    X_BROADCOM_COM_WlNetReauth;	/**< X_BROADCOM_COM_WlNetReauth */
    SINT32    X_BROADCOM_COM_WlMFP;	/**< X_BROADCOM_COM_WlMFP */
    SINT32    X_BROADCOM_COM_WlSsdType;	/**< X_BROADCOM_COM_WlSsdType */
} Dev2WifiAccessPointSecurityObject;

/*! \brief _Dev2WifiAccessPointSecurityObject is used internally to represent Dev2WifiAccessPointSecurityObject */
typedef Dev2WifiAccessPointSecurityObject _Dev2WifiAccessPointSecurityObject;



/*! \brief Obj struct for Device.WiFi.AccessPoint.{i}.WPS.
 *
 * MDMOID_DEV2_WIFI_ACCESS_POINT_WPS 1258
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    configMethodsSupported;	/**< ConfigMethodsSupported */
    char *    configMethodsEnabled;	/**< ConfigMethodsEnabled */
    char *    X_BROADCOM_COM_Wsc_config_state;	/**< X_BROADCOM_COM_Wsc_config_state */
    char *    X_BROADCOM_COM_Wsc_mode;	/**< X_BROADCOM_COM_Wsc_mode */
} Dev2WifiAccessPointWpsObject;

/*! \brief _Dev2WifiAccessPointWpsObject is used internally to represent Dev2WifiAccessPointWpsObject */
typedef Dev2WifiAccessPointWpsObject _Dev2WifiAccessPointWpsObject;



/*! \brief Obj struct for Device.WiFi.AccessPoint.{i}.AssociatedDevice.{i}.
 *
 * MDMOID_DEV2_WIFI_ASSOCIATED_DEVICE 1259
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    MACAddress;	/**< MACAddress */
    UBOOL8    authenticationState;	/**< AuthenticationState */
    UBOOL8    active;	/**< Active */
} Dev2WifiAssociatedDeviceObject;

/*! \brief _Dev2WifiAssociatedDeviceObject is used internally to represent Dev2WifiAssociatedDeviceObject */
typedef Dev2WifiAssociatedDeviceObject _Dev2WifiAssociatedDeviceObject;



/*! \brief Obj struct for Device.WiFi.EndPoint.{i}.
 *
 * MDMOID_DEV2_WIFI_END_POINT 1260
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    profileReference;	/**< ProfileReference */
    char *    SSIDReference;	/**< SSIDReference */
    UINT32    profileNumberOfEntries;	/**< ProfileNumberOfEntries */
} Dev2WifiEndPointObject;

/*! \brief _Dev2WifiEndPointObject is used internally to represent Dev2WifiEndPointObject */
typedef Dev2WifiEndPointObject _Dev2WifiEndPointObject;



/*! \brief Obj struct for Device.WiFi.EndPoint.{i}.Stats.
 *
 * MDMOID_DEV2_WIFI_END_POINT_STATS 1261
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    lastDataDownlinkRate;	/**< LastDataDownlinkRate */
    UINT32    lastDataUplinkRate;	/**< LastDataUplinkRate */
    SINT32    signalStrength;	/**< SignalStrength */
    UINT32    retransmissions;	/**< Retransmissions */
} Dev2WifiEndPointStatsObject;

/*! \brief _Dev2WifiEndPointStatsObject is used internally to represent Dev2WifiEndPointStatsObject */
typedef Dev2WifiEndPointStatsObject _Dev2WifiEndPointStatsObject;



/*! \brief Obj struct for Device.WiFi.EndPoint.{i}.Security.
 *
 * MDMOID_DEV2_WIFI_END_POINT_SECURITY 1262
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    modesSupported;	/**< ModesSupported */
} Dev2WifiEndPointSecurityObject;

/*! \brief _Dev2WifiEndPointSecurityObject is used internally to represent Dev2WifiEndPointSecurityObject */
typedef Dev2WifiEndPointSecurityObject _Dev2WifiEndPointSecurityObject;



/*! \brief Obj struct for Device.WiFi.EndPoint.{i}.Profile.{i}.
 *
 * MDMOID_DEV2_WIFI_END_POINT_PROFILE 1263
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    SSID;	/**< SSID */
    char *    location;	/**< Location */
    UINT32    priority;	/**< Priority */
} Dev2WifiEndPointProfileObject;

/*! \brief _Dev2WifiEndPointProfileObject is used internally to represent Dev2WifiEndPointProfileObject */
typedef Dev2WifiEndPointProfileObject _Dev2WifiEndPointProfileObject;



/*! \brief Obj struct for Device.WiFi.EndPoint.{i}.Profile.{i}.Security.
 *
 * MDMOID_DEV2_WIFI_END_POINT_PROFILE_SECURITY 1264
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    modeEnabled;	/**< ModeEnabled */
    HEXBINARY  WEPKey;	/**< WEPKey */
    HEXBINARY  preSharedKey;	/**< PreSharedKey */
    char *    keyPassphrase;	/**< KeyPassphrase */
} Dev2WifiEndPointProfileSecurityObject;

/*! \brief _Dev2WifiEndPointProfileSecurityObject is used internally to represent Dev2WifiEndPointProfileSecurityObject */
typedef Dev2WifiEndPointProfileSecurityObject _Dev2WifiEndPointProfileSecurityObject;



/*! \brief Obj struct for Device.WiFi.EndPoint.{i}.WPS.
 *
 * MDMOID_DEV2_WIFI_END_POINT_WPS 1265
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    configMethodsSupported;	/**< ConfigMethodsSupported */
    char *    configMethodsEnabled;	/**< ConfigMethodsEnabled */
} Dev2WifiEndPointWpsObject;

/*! \brief _Dev2WifiEndPointWpsObject is used internally to represent Dev2WifiEndPointWpsObject */
typedef Dev2WifiEndPointWpsObject _Dev2WifiEndPointWpsObject;



/*! \brief Obj struct for Device.Bridging.
 *
 * MDMOID_DEV2_BRIDGING 1280
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    maxBridgeEntries;	/**< MaxBridgeEntries */
    UINT32    maxDBridgeEntries;	/**< MaxDBridgeEntries */
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    UINT32    maxQBridgeEntries;	/**< MaxQBridgeEntries */
#endif
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    UINT32    maxVLANEntries;	/**< MaxVLANEntries */
#endif
#ifdef DMP_DEVICE2_BRIDGEFILTER_1
    UINT32    maxFilterEntries;	/**< MaxFilterEntries */
#endif
    UINT32    bridgeNumberOfEntries;	/**< BridgeNumberOfEntries */
#ifdef DMP_DEVICE2_BRIDGEFILTER_1
    UINT32    filterNumberOfEntries;	/**< FilterNumberOfEntries */
#endif
} Dev2BridgingObject;

/*! \brief _Dev2BridgingObject is used internally to represent Dev2BridgingObject */
typedef Dev2BridgingObject _Dev2BridgingObject;



/*! \brief Obj struct for Device.Bridging.Bridge.{i}.
 *
 * MDMOID_DEV2_BRIDGE 1281
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    X_BROADCOM_COM_IfName;	/**< X_BROADCOM_COM_IfName */
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    char *    standard;	/**< Standard */
#endif
    UINT32    portNumberOfEntries;	/**< PortNumberOfEntries */
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    UINT32    VLANNumberOfEntries;	/**< VLANNumberOfEntries */
#endif
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    UINT32    VLANPortNumberOfEntries;	/**< VLANPortNumberOfEntries */
#endif
} Dev2BridgeObject;

/*! \brief _Dev2BridgeObject is used internally to represent Dev2BridgeObject */
typedef Dev2BridgeObject _Dev2BridgeObject;



/*! \brief Obj struct for Device.Bridging.Bridge.{i}.Port.{i}.
 *
 * MDMOID_DEV2_BRIDGE_PORT 1282
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    managementPort;	/**< ManagementPort */
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    UINT32    defaultUserPriority;	/**< DefaultUserPriority */
#endif
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    char *    priorityRegeneration;	/**< PriorityRegeneration */
#endif
    char *    portState;	/**< PortState */
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    SINT32    PVID;	/**< PVID */
#endif
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    char *    acceptableFrameTypes;	/**< AcceptableFrameTypes */
#endif
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    UBOOL8    ingressFiltering;	/**< IngressFiltering */
#endif
#ifdef DMP_DEVICE2_VLANBRIDGE_1
    UBOOL8    priorityTagging;	/**< PriorityTagging */
#endif
} Dev2BridgePortObject;

/*! \brief _Dev2BridgePortObject is used internally to represent Dev2BridgePortObject */
typedef Dev2BridgePortObject _Dev2BridgePortObject;



/*! \brief Obj struct for Device.Bridging.Bridge.{i}.Port.{i}.Stats.
 *
 * MDMOID_DEV2_BRIDGE_PORT_STATS 1283
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT64    unicastPacketsSent;	/**< UnicastPacketsSent */
    UINT64    unicastPacketsReceived;	/**< UnicastPacketsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    multicastPacketsSent;	/**< MulticastPacketsSent */
    UINT64    multicastPacketsReceived;	/**< MulticastPacketsReceived */
    UINT64    broadcastPacketsSent;	/**< BroadcastPacketsSent */
    UINT64    broadcastPacketsReceived;	/**< BroadcastPacketsReceived */
    UINT32    unknownProtoPacketsReceived;	/**< UnknownProtoPacketsReceived */
} Dev2BridgePortStatsObject;

/*! \brief _Dev2BridgePortStatsObject is used internally to represent Dev2BridgePortStatsObject */
typedef Dev2BridgePortStatsObject _Dev2BridgePortStatsObject;



/*! \brief Obj struct for Device.Bridging.Bridge.{i}.VLAN.{i}.
 *
 * MDMOID_DEV2_BRIDGE_VLAN 1284
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    SINT32    VLANID;	/**< VLANID */
} Dev2BridgeVlanObject;

/*! \brief _Dev2BridgeVlanObject is used internally to represent Dev2BridgeVlanObject */
typedef Dev2BridgeVlanObject _Dev2BridgeVlanObject;



/*! \brief Obj struct for Device.Bridging.Bridge.{i}.VLANPort.{i}.
 *
 * MDMOID_DEV2_BRIDGE_VLAN_PORT 1285
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    char *    VLAN;	/**< VLAN */
    char *    port;	/**< Port */
    UBOOL8    untagged;	/**< Untagged */
} Dev2BridgeVlanPortObject;

/*! \brief _Dev2BridgeVlanPortObject is used internally to represent Dev2BridgeVlanPortObject */
typedef Dev2BridgeVlanPortObject _Dev2BridgeVlanPortObject;



/*! \brief Obj struct for Device.Bridging.Filter.{i}.
 *
 * MDMOID_DEV2_BRIDGE_FILTER 1286
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    char *    status;	/**< Status */
    char *    bridge;	/**< Bridge */
    UINT32    order;	/**< Order */
    char *    interface;	/**< Interface */
#ifdef DMP_DEVICE2_BRIDGEFILTER_2
    char *    DHCPType;	/**< DHCPType */
#endif
    UINT32    VLANIDFilter;	/**< VLANIDFilter */
    char *    ethertypeFilterList;	/**< EthertypeFilterList */
    UBOOL8    ethertypeFilterExclude;	/**< EthertypeFilterExclude */
    char *    sourceMACAddressFilterList;	/**< SourceMACAddressFilterList */
    UBOOL8    sourceMACAddressFilterExclude;	/**< SourceMACAddressFilterExclude */
    char *    destMACAddressFilterList;	/**< DestMACAddressFilterList */
    UBOOL8    destMACAddressFilterExclude;	/**< DestMACAddressFilterExclude */
    char *    sourceMACFromVendorClassIDFilter;	/**< SourceMACFromVendorClassIDFilter */
#ifdef DMP_DEVICE2_BRIDGEFILTER_2
    HEXBINARY  sourceMACFromVendorClassIDFilterv6;	/**< SourceMACFromVendorClassIDFilterv6 */
#endif
    UBOOL8    sourceMACFromVendorClassIDFilterExclude;	/**< SourceMACFromVendorClassIDFilterExclude */
    char *    sourceMACFromVendorClassIDMode;	/**< SourceMACFromVendorClassIDMode */
    char *    destMACFromVendorClassIDFilter;	/**< DestMACFromVendorClassIDFilter */
#ifdef DMP_DEVICE2_BRIDGEFILTER_2
    HEXBINARY  destMACFromVendorClassIDFilterv6;	/**< DestMACFromVendorClassIDFilterv6 */
#endif
    UBOOL8    destMACFromVendorClassIDFilterExclude;	/**< DestMACFromVendorClassIDFilterExclude */
    char *    destMACFromVendorClassIDMode;	/**< DestMACFromVendorClassIDMode */
    HEXBINARY  sourceMACFromClientIDFilter;	/**< SourceMACFromClientIDFilter */
    UBOOL8    sourceMACFromClientIDFilterExclude;	/**< SourceMACFromClientIDFilterExclude */
    HEXBINARY  destMACFromClientIDFilter;	/**< DestMACFromClientIDFilter */
    UBOOL8    destMACFromClientIDFilterExclude;	/**< DestMACFromClientIDFilterExclude */
    HEXBINARY  sourceMACFromUserClassIDFilter;	/**< SourceMACFromUserClassIDFilter */
    UBOOL8    sourceMACFromUserClassIDFilterExclude;	/**< SourceMACFromUserClassIDFilterExclude */
    HEXBINARY  destMACFromUserClassIDFilter;	/**< DestMACFromUserClassIDFilter */
    UBOOL8    destMACFromUserClassIDFilterExclude;	/**< DestMACFromUserClassIDFilterExclude */
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    char *    destIP;	/**< DestIP */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    char *    destMask;	/**< DestMask */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    UBOOL8    destIPExclude;	/**< DestIPExclude */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    char *    sourceIP;	/**< SourceIP */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    char *    sourceMask;	/**< SourceMask */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    UBOOL8    sourceIPExclude;	/**< SourceIPExclude */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    SINT32    protocol;	/**< Protocol */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    UBOOL8    protocolExclude;	/**< ProtocolExclude */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    SINT32    destPort;	/**< DestPort */
#endif
    SINT32    destPortRangeMax;	/**< DestPortRangeMax */
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    UBOOL8    destPortExclude;	/**< DestPortExclude */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    SINT32    sourcePort;	/**< SourcePort */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    SINT32    sourcePortRangeMax;	/**< SourcePortRangeMax */
#endif
#ifdef DMP_DEVICE2_BRIDGEL3L4FILTER_1
    UBOOL8    sourcePortExclude;	/**< SourcePortExclude */
#endif
} Dev2BridgeFilterObject;

/*! \brief _Dev2BridgeFilterObject is used internally to represent Dev2BridgeFilterObject */
typedef Dev2BridgeFilterObject _Dev2BridgeFilterObject;



/*! \brief Obj struct for Device.IP.Diagnostics.
 *
 * MDMOID_DEV2_IP_DIAGNOSTICS 1410
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_DEVICE2_IPPING_1
    UBOOL8    IPv4PingSupported;	/**< IPv4PingSupported */
#endif
#ifdef DMP_DEVICE2_IPPING_1
    UBOOL8    IPv6PingSupported;	/**< IPv6PingSupported */
#endif
#ifdef DMP_DEVICE2_TRACEROUTE_1
    UBOOL8    IPv4TraceRouteSupported;	/**< IPv4TraceRouteSupported */
#endif
#ifdef DMP_DEVICE2_TRACEROUTE_1
    UBOOL8    IPv6TraceRouteSupported;	/**< IPv6TraceRouteSupported */
#endif
#ifdef DMP_DEVICE2_DOWNLOAD_1
    UBOOL8    IPv4DownloadDiagnosticsSupported;	/**< IPv4DownloadDiagnosticsSupported */
#endif
#ifdef DMP_DEVICE2_DOWNLOAD_1
    UBOOL8    IPv6DownloadDiagnosticsSupported;	/**< IPv6DownloadDiagnosticsSupported */
#endif
#ifdef DMP_DEVICE2_UPLOAD_1
    UBOOL8    IPv4UploadDiagnosticsSupported;	/**< IPv4UploadDiagnosticsSupported */
#endif
#ifdef DMP_DEVICE2_UPLOAD_1
    UBOOL8    IPv6UploaddiagnosticsSupported;	/**< IPv6UploaddiagnosticsSupported */
#endif
#ifdef DMP_DEVICE2_UDPECHO_1
    UBOOL8    IPv4UDPEchoDiagnosticsSupported;	/**< IPv4UDPEchoDiagnosticsSupported */
#endif
#ifdef DMP_DEVICE2_UDPECHO_1
    UBOOL8    IPv6UDPEchoDiagnosticsSupported;	/**< IPv6UDPEchoDiagnosticsSupported */
#endif
} Dev2IpDiagnosticsObject;

/*! \brief _Dev2IpDiagnosticsObject is used internally to represent Dev2IpDiagnosticsObject */
typedef Dev2IpDiagnosticsObject _Dev2IpDiagnosticsObject;



/*! \brief Obj struct for Device.IP.Diagnostics.IPPing.
 *
 * MDMOID_DEV2_IP_PING_DIAG 1411
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    host;	/**< Host */
    UINT32    numberOfRepetitions;	/**< NumberOfRepetitions */
    UINT32    timeout;	/**< Timeout */
    UINT32    dataBlockSize;	/**< DataBlockSize */
    UINT32    DSCP;	/**< DSCP */
    UINT32    successCount;	/**< SuccessCount */
    UINT32    failureCount;	/**< FailureCount */
    UINT32    averageResponseTime;	/**< AverageResponseTime */
    UINT32    minimumResponseTime;	/**< MinimumResponseTime */
    UINT32    maximumResponseTime;	/**< MaximumResponseTime */
} Dev2IpPingDiagObject;

/*! \brief _Dev2IpPingDiagObject is used internally to represent Dev2IpPingDiagObject */
typedef Dev2IpPingDiagObject _Dev2IpPingDiagObject;



/*! \brief Obj struct for Device.IP.Diagnostics.TraceRoute.
 *
 * MDMOID_DEV2_IP_DIAG_TRACE_ROUTE 1412
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    host;	/**< Host */
    UINT32    numberOfTries;	/**< NumberOfTries */
    UINT32    timeout;	/**< Timeout */
    UINT32    dataBlockSize;	/**< DataBlockSize */
    UINT32    DSCP;	/**< DSCP */
    UINT32    maxHopCount;	/**< MaxHopCount */
    UINT32    responseTime;	/**< ResponseTime */
    UINT32    routeHopsNumberOfEntries;	/**< RouteHopsNumberOfEntries */
} Dev2IpDiagTraceRouteObject;

/*! \brief _Dev2IpDiagTraceRouteObject is used internally to represent Dev2IpDiagTraceRouteObject */
typedef Dev2IpDiagTraceRouteObject _Dev2IpDiagTraceRouteObject;



/*! \brief Obj struct for Device.IP.Diagnostics.TraceRoute.RouteHops.{i}.
 *
 * MDMOID_DEV2_IP_DIAG_TRACE_ROUTE_ROUTE_HOPS 1413
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    host;	/**< Host */
    char *    hostAddress;	/**< HostAddress */
    UINT32    errorCode;	/**< ErrorCode */
    char *    RTTimes;	/**< RTTimes */
} Dev2IpDiagTraceRouteRouteHopsObject;

/*! \brief _Dev2IpDiagTraceRouteRouteHopsObject is used internally to represent Dev2IpDiagTraceRouteRouteHopsObject */
typedef Dev2IpDiagTraceRouteRouteHopsObject _Dev2IpDiagTraceRouteRouteHopsObject;



/*! \brief Obj struct for Device.IP.Diagnostics.DownloadDiagnostics.
 *
 * MDMOID_DEV2_IP_DIAG_DOWNLOAD 1414
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    downloadURL;	/**< DownloadURL */
    char *    downloadTransports;	/**< DownloadTransports */
    UINT32    DSCP;	/**< DSCP */
    UINT32    ethernetPriority;	/**< EthernetPriority */
    DATETIME  ROMTime;	/**< ROMTime */
    DATETIME  BOMTime;	/**< BOMTime */
    DATETIME  EOMTime;	/**< EOMTime */
    UINT32    testBytesReceived;	/**< TestBytesReceived */
    UINT32    totalBytesReceived;	/**< TotalBytesReceived */
#ifdef DMP_DEVICE2_DOWNLOADTCP_1
    DATETIME  TCPOpenRequestTime;	/**< TCPOpenRequestTime */
#endif
#ifdef DMP_DEVICE2_DOWNLOADTCP_1
    DATETIME  TCPOpenResponseTime;	/**< TCPOpenResponseTime */
#endif
} Dev2IpDiagDownloadObject;

/*! \brief _Dev2IpDiagDownloadObject is used internally to represent Dev2IpDiagDownloadObject */
typedef Dev2IpDiagDownloadObject _Dev2IpDiagDownloadObject;



/*! \brief Obj struct for Device.IP.Diagnostics.UploadDiagnostics.
 *
 * MDMOID_DEV2_IP_DIAG_UPLOAD 1415
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    diagnosticsState;	/**< DiagnosticsState */
    char *    interface;	/**< Interface */
    char *    uploadURL;	/**< UploadURL */
    char *    uploadTransports;	/**< UploadTransports */
    UINT32    DSCP;	/**< DSCP */
    UINT32    ethernetPriority;	/**< EthernetPriority */
    UINT32    testFileLength;	/**< TestFileLength */
    DATETIME  ROMTime;	/**< ROMTime */
    DATETIME  BOMTime;	/**< BOMTime */
    DATETIME  EOMTime;	/**< EOMTime */
    UINT32    totalBytesSent;	/**< TotalBytesSent */
#ifdef DMP_DEVICE2_UPLOADTCP_1
    DATETIME  TCPOpenRequestTime;	/**< TCPOpenRequestTime */
#endif
#ifdef DMP_DEVICE2_UPLOADTCP_1
    DATETIME  TCPOpenResponseTime;	/**< TCPOpenResponseTime */
#endif
} Dev2IpDiagUploadObject;

/*! \brief _Dev2IpDiagUploadObject is used internally to represent Dev2IpDiagUploadObject */
typedef Dev2IpDiagUploadObject _Dev2IpDiagUploadObject;



/*! \brief Obj struct for Device.IP.Diagnostics.UDPEchoConfig.
 *
 * MDMOID_UDP_ECHO_CONFIG 1416
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    interface;	/**< Interface */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    UINT32    UDPPort;	/**< UDPPort */
#ifdef DMP_DEVICE2_UDPECHOPLUS_1
    UBOOL8    echoPlusEnabled;	/**< EchoPlusEnabled */
#endif
    UBOOL8    echoPlusSupported;	/**< EchoPlusSupported */
    UINT32    packetsReceived;	/**< PacketsReceived */
    UINT32    packetsResponded;	/**< PacketsResponded */
#ifdef DMP_X_BROADCOM_COM_BASELINE_1
    UINT32    X_BROADCOM_COM_PacketsRespondedFail;	/**< X_BROADCOM_COM_PacketsRespondedFail */
#endif
    UINT32    bytesReceived;	/**< BytesReceived */
    UINT32    bytesResponded;	/**< BytesResponded */
    DATETIME  timeFirstPacketReceived;	/**< TimeFirstPacketReceived */
    DATETIME  timeLastPacketReceived;	/**< TimeLastPacketReceived */
} Dev2IpDiagUDPEchoConfigObject;

/*! \brief _Dev2IpDiagUDPEchoConfigObject is used internally to represent Dev2IpDiagUDPEchoConfigObject */
typedef Dev2IpDiagUDPEchoConfigObject _Dev2IpDiagUDPEchoConfigObject;



/*! \brief Obj struct for Device.IPsec.
 *
 * MDMOID_DEV2_IPSEC 1430
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
#ifdef DMP_DEVICE2_IPSEC_1
    UINT32    filterNumberOfEntries;	/**< FilterNumberOfEntries */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    UINT32    profileNumberOfEntries;	/**< ProfileNumberOfEntries */
#endif
} Dev2IpsecObject;

/*! \brief _Dev2IpsecObject is used internally to represent Dev2IpsecObject */
typedef Dev2IpsecObject _Dev2IpsecObject;



/*! \brief Obj struct for Device.IPSec.Filter.{i}.
 *
 * MDMOID_DEV2_IPSEC_FILTER 1432
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_DEVICE2_IPSEC_1
    UBOOL8    enable;	/**< Enable */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    status;	/**< Status */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    UINT32    order;	/**< Order */
#endif
    char *    alias;	/**< Alias */
#ifdef DMP_DEVICE2_IPSEC_1
    char *    interface;	/**< Interface */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    UBOOL8    allInterfaces;	/**< AllInterfaces */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    destIP;	/**< DestIP */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    destMask;	/**< DestMask */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    sourceIP;	/**< SourceIP */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    sourceMask;	/**< SourceMask */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    SINT32    protocol;	/**< Protocol */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    processingChoice;	/**< ProcessingChoice */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    profile;	/**< Profile */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    X_BROADCOM_COM_TunnelName;	/**< X_BROADCOM_COM_TunnelName */
#endif
} Dev2IpsecFilterObject;

/*! \brief _Dev2IpsecFilterObject is used internally to represent Dev2IpsecFilterObject */
typedef Dev2IpsecFilterObject _Dev2IpsecFilterObject;



/*! \brief Obj struct for Device.IPSec.Profile.{i}.
 *
 * MDMOID_DEV2_IPSEC_PROFILE 1433
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
#ifdef DMP_DEVICE2_IPSEC_1
    char *    remoteEndpoints;	/**< RemoteEndpoints */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    protocol;	/**< Protocol */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    X_BROADCOM_COM_KeyExchangeMode;	/**< X_BROADCOM_COM_KeyExchangeMode */
#endif
#ifdef DMP_DEVICE2_IPSEC_1
    char *    X_BROADCOM_COM_LocalIfName;	/**< X_BROADCOM_COM_LocalIfName */
#endif
} Dev2IpsecProfileObject;

/*! \brief _Dev2IpsecProfileObject is used internally to represent Dev2IpsecProfileObject */
typedef Dev2IpsecProfileObject _Dev2IpsecProfileObject;



/*! \brief Obj struct for Device.IPsec.Profile.{i}.X_BROADCOM_COM_ManualModeCfg.
 *
 * MDMOID_MANUAL_MODE_CFG 1435
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    allowedEncryptionAlgorithms;	/**< AllowedEncryptionAlgorithms */
    char *    encryptionKey;	/**< EncryptionKey */
    char *    allowedIntegrityAlgorithms;	/**< AllowedIntegrityAlgorithms */
    char *    authenticationKey;	/**< AuthenticationKey */
    UINT32    SPI;	/**< SPI */
} ManualModeCfgObject;

/*! \brief _ManualModeCfgObject is used internally to represent ManualModeCfgObject */
typedef ManualModeCfgObject _ManualModeCfgObject;



/*! \brief Obj struct for Device.IPsec.Profile.{i}.X_BROADCOM_COM_IKEv1Cfg.
 *
 * MDMOID_IKEV1_CFG 1436
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    authenticationMethod;	/**< AuthenticationMethod */
    char *    preSharedKey;	/**< PreSharedKey */
    char *    certificateName;	/**< CertificateName */
    UBOOL8    perfectFSEn;	/**< PerfectFSEn */
    char *    phase1Mode;	/**< Phase1Mode */
    char *    phase1AllowedEncryptionAlgorithms;	/**< Phase1AllowedEncryptionAlgorithms */
    char *    phase1AllowedIntegrityAlgorithms;	/**< Phase1AllowedIntegrityAlgorithms */
    char *    phase1AllowedDiffieHellmanGroupTransforms;	/**< Phase1AllowedDiffieHellmanGroupTransforms */
    UINT32    phase1KeyTime;	/**< Phase1KeyTime */
    char *    phase2AllowedEncryptionAlgorithms;	/**< Phase2AllowedEncryptionAlgorithms */
    char *    phase2AllowedIntegrityAlgorithms;	/**< Phase2AllowedIntegrityAlgorithms */
    char *    phase2AllowedDiffieHellmanGroupTransforms;	/**< Phase2AllowedDiffieHellmanGroupTransforms */
    UINT32    phase2KeyTime;	/**< Phase2KeyTime */
} Ikev1CfgObject;

/*! \brief _Ikev1CfgObject is used internally to represent Ikev1CfgObject */
typedef Ikev1CfgObject _Ikev1CfgObject;



/*! \brief Obj struct for Device.Routing.RIP.
 *
 * MDMOID_DEV2_RIP 1464
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    supportedModes;	/**< SupportedModes */
    UINT32    interfaceSettingNumberOfEntries;	/**< InterfaceSettingNumberOfEntries */
} Dev2RipObject;

/*! \brief _Dev2RipObject is used internally to represent Dev2RipObject */
typedef Dev2RipObject _Dev2RipObject;



/*! \brief Obj struct for Device.Routing.RIP.InterfaceSetting.{i}.
 *
 * MDMOID_DEV2_RIP_INTF_SETTING 1465
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    UINT32    X_BROADCOM_COM_Version;	/**< X_BROADCOM_COM_Version */
    UBOOL8    acceptRA;	/**< AcceptRA */
    UBOOL8    sendRA;	/**< SendRA */
} Dev2RipIntfSettingObject;

/*! \brief _Dev2RipIntfSettingObject is used internally to represent Dev2RipIntfSettingObject */
typedef Dev2RipIntfSettingObject _Dev2RipIntfSettingObject;



/*! \brief Obj struct for Device.Hosts.
 *
 * MDMOID_DEV2_HOSTS 1520
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    hostNumberOfEntries;	/**< HostNumberOfEntries */
} Dev2HostsObject;

/*! \brief _Dev2HostsObject is used internally to represent Dev2HostsObject */
typedef Dev2HostsObject _Dev2HostsObject;



/*! \brief Obj struct for Device.Hosts.Host.{i}.
 *
 * MDMOID_DEV2_HOST 1521
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    physAddress;	/**< PhysAddress */
    char *    IPAddress;	/**< IPAddress */
#ifdef DMP_DEVICE2_HOSTS_2
    char *    DHCPClient;	/**< DHCPClient */
#endif
    SINT32    leaseTimeRemaining;	/**< LeaseTimeRemaining */
#ifdef DMP_DEVICE2_HOSTS_2
    char *    associatedDevice;	/**< AssociatedDevice */
#endif
    char *    layer1Interface;	/**< Layer1Interface */
    char *    layer3Interface;	/**< Layer3Interface */
    char *    hostName;	/**< HostName */
    UBOOL8    active;	/**< Active */
#ifdef DMP_DEVICE2_HOSTS_2
    UINT32    IPv4AddressNumberOfEntries;	/**< IPv4AddressNumberOfEntries */
#endif
#ifdef DMP_DEVICE2_HOSTS_2
    UINT32    IPv6AddressNumberOfEntries;	/**< IPv6AddressNumberOfEntries */
#endif
} Dev2HostObject;

/*! \brief _Dev2HostObject is used internally to represent Dev2HostObject */
typedef Dev2HostObject _Dev2HostObject;



/*! \brief Obj struct for Device.Hosts.Host.{i}.IPv4Address.{i}.
 *
 * MDMOID_DEV2_HOST_IPV4_ADDRESS 1522
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
} Dev2HostIpv4AddressObject;

/*! \brief _Dev2HostIpv4AddressObject is used internally to represent Dev2HostIpv4AddressObject */
typedef Dev2HostIpv4AddressObject _Dev2HostIpv4AddressObject;



/*! \brief Obj struct for Device.Hosts.Host.{i}.IPv6Address.{i}.
 *
 * MDMOID_DEV2_HOST_IPV6_ADDRESS 1523
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
} Dev2HostIpv6AddressObject;

/*! \brief _Dev2HostIpv6AddressObject is used internally to represent Dev2HostIpv6AddressObject */
typedef Dev2HostIpv6AddressObject _Dev2HostIpv6AddressObject;



/*! \brief Obj struct for Device.NAT.
 *
 * MDMOID_DEV2_NAT 1550
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    interfaceSettingNumberOfEntries;	/**< InterfaceSettingNumberOfEntries */
    UINT32    portMappingNumberOfEntries;	/**< PortMappingNumberOfEntries */
} Dev2NatObject;

/*! \brief _Dev2NatObject is used internally to represent Dev2NatObject */
typedef Dev2NatObject _Dev2NatObject;



/*! \brief Obj struct for Device.NAT.InterfaceSetting.{i}.
 *
 * MDMOID_DEV2_NAT_INTF_SETTING 1551
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    UBOOL8    X_BROADCOM_COM_FullconeNATEnabled;	/**< X_BROADCOM_COM_FullconeNATEnabled */
} Dev2NatIntfSettingObject;

/*! \brief _Dev2NatIntfSettingObject is used internally to represent Dev2NatIntfSettingObject */
typedef Dev2NatIntfSettingObject _Dev2NatIntfSettingObject;



/*! \brief Obj struct for Device.NAT.InterfaceSetting.{i}.X_BROADCOM_COM_PortTriggering.{i}.
 *
 * MDMOID_DEV2_NAT_PORT_TRIGGERING 3592
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    char *    triggerProtocol;	/**< TriggerProtocol */
    char *    openProtocol;	/**< OpenProtocol */
    UINT32    triggerPortStart;	/**< TriggerPortStart */
    UINT32    triggerPortEnd;	/**< TriggerPortEnd */
    UINT32    openPortStart;	/**< OpenPortStart */
    UINT32    openPortEnd;	/**< OpenPortEnd */
} Dev2NatPortTriggeringObject;

/*! \brief _Dev2NatPortTriggeringObject is used internally to represent Dev2NatPortTriggeringObject */
typedef Dev2NatPortTriggeringObject _Dev2NatPortTriggeringObject;



/*! \brief Obj struct for Device.NAT.PortMapping.{i}.
 *
 * MDMOID_DEV2_NAT_PORT_MAPPING 3593
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    UBOOL8    allInterfaces;	/**< AllInterfaces */
    UINT32    leaseDuration;	/**< LeaseDuration */
    char *    remoteHost;	/**< RemoteHost */
    UINT32    externalPort;	/**< ExternalPort */
    UINT32    externalPortEndRange;	/**< ExternalPortEndRange */
    UINT32    internalPort;	/**< InternalPort */
    UINT32    X_BROADCOM_COM_InternalPortEndRange;	/**< X_BROADCOM_COM_InternalPortEndRange */
    char *    protocol;	/**< Protocol */
    char *    internalClient;	/**< InternalClient */
    char *    description;	/**< Description */
    char *    X_BROADCOM_COM_AppName;	/**< X_BROADCOM_COM_AppName */
} Dev2NatPortMappingObject;

/*! \brief _Dev2NatPortMappingObject is used internally to represent Dev2NatPortMappingObject */
typedef Dev2NatPortMappingObject _Dev2NatPortMappingObject;



/*! \brief Obj struct for Device.DHCPv4.
 *
 * MDMOID_DEV2_DHCPV4 1560
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_DEVICE2_DHCPV4CLIENT_1
    UINT32    clientNumberOfEntries;	/**< ClientNumberOfEntries */
#endif
} Dev2Dhcpv4Object;

/*! \brief _Dev2Dhcpv4Object is used internally to represent Dev2Dhcpv4Object */
typedef Dev2Dhcpv4Object _Dev2Dhcpv4Object;



/*! \brief Obj struct for Device.DHCPv4.Client.{i}.
 *
 * MDMOID_DEV2_DHCPV4_CLIENT 1561
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    char *    status;	/**< Status */
    char *    DHCPStatus;	/**< DHCPStatus */
    char *    IPAddress;	/**< IPAddress */
    char *    subnetMask;	/**< SubnetMask */
    char *    IPRouters;	/**< IPRouters */
    char *    DNSServers;	/**< DNSServers */
    UINT32    sentOptionNumberOfEntries;	/**< SentOptionNumberOfEntries */
    UINT32    reqOptionNumberOfEntries;	/**< ReqOptionNumberOfEntries */
    UINT32    X_BROADCOM_COM_Pid;	/**< X_BROADCOM_COM_Pid */
} Dev2Dhcpv4ClientObject;

/*! \brief _Dev2Dhcpv4ClientObject is used internally to represent Dev2Dhcpv4ClientObject */
typedef Dev2Dhcpv4ClientObject _Dev2Dhcpv4ClientObject;



/*! \brief Obj struct for Device.DHCPv4.Client.{i}.SentOption.{i}.
 *
 * MDMOID_DEV2_DHCPV4_CLIENT_SENT_OPTION 1562
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    UINT32    tag;	/**< Tag */
    HEXBINARY  value;	/**< Value */
} Dev2Dhcpv4ClientSentOptionObject;

/*! \brief _Dev2Dhcpv4ClientSentOptionObject is used internally to represent Dev2Dhcpv4ClientSentOptionObject */
typedef Dev2Dhcpv4ClientSentOptionObject _Dev2Dhcpv4ClientSentOptionObject;



/*! \brief Obj struct for Device.DHCPv4.Client.{i}.ReqOption.{i}.
 *
 * MDMOID_DEV2_DHCPV4_CLIENT_REQ_OPTION 1563
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    order;	/**< Order */
    char *    alias;	/**< Alias */
    UINT32    tag;	/**< Tag */
    HEXBINARY  value;	/**< Value */
    char *    X_BROADCOM_COM_Value;	/**< X_BROADCOM_COM_Value */
} Dev2Dhcpv4ClientReqOptionObject;

/*! \brief _Dev2Dhcpv4ClientReqOptionObject is used internally to represent Dev2Dhcpv4ClientReqOptionObject */
typedef Dev2Dhcpv4ClientReqOptionObject _Dev2Dhcpv4ClientReqOptionObject;



/*! \brief Obj struct for Device.DHCPv4.Server.
 *
 * MDMOID_DEV2_DHCPV4_SERVER 1564
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    poolNumberOfEntries;	/**< PoolNumberOfEntries */
} Dev2Dhcpv4ServerObject;

/*! \brief _Dev2Dhcpv4ServerObject is used internally to represent Dev2Dhcpv4ServerObject */
typedef Dev2Dhcpv4ServerObject _Dev2Dhcpv4ServerObject;



/*! \brief Obj struct for Device.DHCPv4.Server.Pool.{i}.
 *
 * MDMOID_DEV2_DHCPV4_SERVER_POOL 1565
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    char *    minAddress;	/**< MinAddress */
    char *    maxAddress;	/**< MaxAddress */
    char *    subnetMask;	/**< SubnetMask */
    char *    DNSServers;	/**< DNSServers */
    char *    domainName;	/**< DomainName */
    char *    IPRouters;	/**< IPRouters */
    SINT32    leaseTime;	/**< LeaseTime */
    UINT32    staticAddressNumberOfEntries;	/**< StaticAddressNumberOfEntries */
    UINT32    optionNumberOfEntries;	/**< OptionNumberOfEntries */
#ifdef DMP_DEVICE2_DHCPV4SERVERCLIENTINFO_1
    UINT32    clientNumberOfEntries;	/**< ClientNumberOfEntries */
#endif
} Dev2Dhcpv4ServerPoolObject;

/*! \brief _Dev2Dhcpv4ServerPoolObject is used internally to represent Dev2Dhcpv4ServerPoolObject */
typedef Dev2Dhcpv4ServerPoolObject _Dev2Dhcpv4ServerPoolObject;



/*! \brief Obj struct for Device.DHCPv4.Server.Pool.{i}.StaticAddress.{i}.
 *
 * MDMOID_DEV2_DHCPV4_SERVER_POOL_STATIC_ADDRESS 1566
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    alias;	/**< Alias */
    char *    chaddr;	/**< Chaddr */
    char *    yiaddr;	/**< Yiaddr */
} Dev2Dhcpv4ServerPoolStaticAddressObject;

/*! \brief _Dev2Dhcpv4ServerPoolStaticAddressObject is used internally to represent Dev2Dhcpv4ServerPoolStaticAddressObject */
typedef Dev2Dhcpv4ServerPoolStaticAddressObject _Dev2Dhcpv4ServerPoolStaticAddressObject;



/*! \brief Obj struct for Device.DHCPv4.Server.Pool.{i}.Client.{i}.
 *
 * MDMOID_DEV2_DHCPV4_SERVER_POOL_CLIENT 1568
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
    char *    chaddr;	/**< Chaddr */
    UBOOL8    active;	/**< Active */
    UINT32    IPv4AddressNumberOfEntries;	/**< IPv4AddressNumberOfEntries */
    UINT32    optionNumberOfEntries;	/**< OptionNumberOfEntries */
} Dev2Dhcpv4ServerPoolClientObject;

/*! \brief _Dev2Dhcpv4ServerPoolClientObject is used internally to represent Dev2Dhcpv4ServerPoolClientObject */
typedef Dev2Dhcpv4ServerPoolClientObject _Dev2Dhcpv4ServerPoolClientObject;



/*! \brief Obj struct for Device.DHCPv4.Server.Pool.{i}.Client.{i}.IPv4Address.{i}.
 *
 * MDMOID_DEV2_DHCPV4_SERVER_POOL_CLIENT_I_PV4_ADDRESS 1569
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPAddress;	/**< IPAddress */
    DATETIME  leaseTimeRemaining;	/**< LeaseTimeRemaining */
} Dev2Dhcpv4ServerPoolClientIPv4AddressObject;

/*! \brief _Dev2Dhcpv4ServerPoolClientIPv4AddressObject is used internally to represent Dev2Dhcpv4ServerPoolClientIPv4AddressObject */
typedef Dev2Dhcpv4ServerPoolClientIPv4AddressObject _Dev2Dhcpv4ServerPoolClientIPv4AddressObject;



/*! \brief Obj struct for Device.DHCPv4.Server.Pool.{i}.Client.{i}.Option.{i}.
 *
 * MDMOID_DEV2_DHCPV4_SERVER_POOL_CLIENT_OPTION 1570
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    tag;	/**< Tag */
    HEXBINARY  value;	/**< Value */
} Dev2Dhcpv4ServerPoolClientOptionObject;

/*! \brief _Dev2Dhcpv4ServerPoolClientOptionObject is used internally to represent Dev2Dhcpv4ServerPoolClientOptionObject */
typedef Dev2Dhcpv4ServerPoolClientOptionObject _Dev2Dhcpv4ServerPoolClientOptionObject;



/*! \brief Obj struct for Device.DHCPv4.Relay.
 *
 * MDMOID_DEV2_DHCPV4_RELAY 1571
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    UINT32    forwardingNumberOfEntries;	/**< ForwardingNumberOfEntries */
} Dev2Dhcpv4RelayObject;

/*! \brief _Dev2Dhcpv4RelayObject is used internally to represent Dev2Dhcpv4RelayObject */
typedef Dev2Dhcpv4RelayObject _Dev2Dhcpv4RelayObject;



/*! \brief Obj struct for Device.DHCPv4.Relay.Forwarding.{i}.
 *
 * MDMOID_DEV2_DHCPV4_RELAY_FORWARDING 1572
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    char *    DHCPServerIPAddress;	/**< DHCPServerIPAddress */
} Dev2Dhcpv4RelayForwardingObject;

/*! \brief _Dev2Dhcpv4RelayForwardingObject is used internally to represent Dev2Dhcpv4RelayForwardingObject */
typedef Dev2Dhcpv4RelayForwardingObject _Dev2Dhcpv4RelayForwardingObject;



/*! \brief Obj struct for Device.Firewall.
 *
 * MDMOID_DEV2_FIREWALL 1680
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    config;	/**< Config */
    char *    advancedLevel;	/**< AdvancedLevel */
    char *    type;	/**< Type */
    UINT32    levelNumberOfEntries;	/**< LevelNumberOfEntries */
    UINT32    chainNumberOfEntries;	/**< ChainNumberOfEntries */
} Dev2FirewallObject;

/*! \brief _Dev2FirewallObject is used internally to represent Dev2FirewallObject */
typedef Dev2FirewallObject _Dev2FirewallObject;



/*! \brief Obj struct for Device.Firewall.Level.{i}.
 *
 * MDMOID_DEV2_FIREWALL_LEVEL 1681
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    name;	/**< Name */
    char *    chain;	/**< Chain */
    char *    defaultPolicy;	/**< DefaultPolicy */
} Dev2FirewallLevelObject;

/*! \brief _Dev2FirewallLevelObject is used internally to represent Dev2FirewallLevelObject */
typedef Dev2FirewallLevelObject _Dev2FirewallLevelObject;



/*! \brief Obj struct for Device.Firewall.Chain.{i}.
 *
 * MDMOID_DEV2_FIREWALL_CHAIN 1682
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    name;	/**< Name */
    UINT32    ruleNumberOfEntries;	/**< RuleNumberOfEntries */
} Dev2FirewallChainObject;

/*! \brief _Dev2FirewallChainObject is used internally to represent Dev2FirewallChainObject */
typedef Dev2FirewallChainObject _Dev2FirewallChainObject;



/*! \brief Obj struct for Device.Firewall.Chain.{i}.Rule.{i}.
 *
 * MDMOID_DEV2_FIREWALL_CHAIN_RULE 1683
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    target;	/**< Target */
    char *    sourceInterface;	/**< SourceInterface */
    char *    destInterface;	/**< DestInterface */
    SINT32    IPVersion;	/**< IPVersion */
    char *    destIP;	/**< DestIP */
    char *    sourceIP;	/**< SourceIP */
    SINT32    protocol;	/**< Protocol */
    SINT32    destPort;	/**< DestPort */
    SINT32    sourcePort;	/**< SourcePort */
} Dev2FirewallChainRuleObject;

/*! \brief _Dev2FirewallChainRuleObject is used internally to represent Dev2FirewallChainRuleObject */
typedef Dev2FirewallChainRuleObject _Dev2FirewallChainRuleObject;



/*! \brief Obj struct for Device.Firewall.X_BROADCOM_COM_FirewallException.{i}.
 *
 * MDMOID_DEV2_FIREWALL_EXCEPTION 3250
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    IPInterface;	/**< IPInterface */
} Dev2FirewallExceptionObject;

/*! \brief _Dev2FirewallExceptionObject is used internally to represent Dev2FirewallExceptionObject */
typedef Dev2FirewallExceptionObject _Dev2FirewallExceptionObject;



/*! \brief Obj struct for Device.Firewall.X_BROADCOM_COM_FirewallException.{i}.Rule.{i}.
 *
 * MDMOID_DEV2_FIREWALL_EXCEPTION_RULE 3251
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    filterName;	/**< FilterName */
    char *    IPVersion;	/**< IPVersion */
    char *    protocol;	/**< Protocol */
    UINT32    sourcePortStart;	/**< SourcePortStart */
    UINT32    sourcePortEnd;	/**< SourcePortEnd */
    UINT32    destinationPortStart;	/**< DestinationPortStart */
    UINT32    destinationPortEnd;	/**< DestinationPortEnd */
    char *    sourceIPAddress;	/**< SourceIPAddress */
    char *    sourceNetMask;	/**< SourceNetMask */
    char *    destinationIPAddress;	/**< DestinationIPAddress */
    char *    destinationNetMask;	/**< DestinationNetMask */
    char *    target;	/**< Target */
} Dev2FirewallExceptionRuleObject;

/*! \brief _Dev2FirewallExceptionRuleObject is used internally to represent Dev2FirewallExceptionRuleObject */
typedef Dev2FirewallExceptionRuleObject _Dev2FirewallExceptionRuleObject;



/*! \brief Obj struct for Device.Firewall.X_BROADCOM_COM_MacFilterObj.{i}.
 *
 * MDMOID_DEV2_MAC_FILTER 3590
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    IPInterface;	/**< IPInterface */
    char *    policy;	/**< Policy */
} Dev2MacFilterObject;

/*! \brief _Dev2MacFilterObject is used internally to represent Dev2MacFilterObject */
typedef Dev2MacFilterObject _Dev2MacFilterObject;



/*! \brief Obj struct for Device.Firewall.X_BROADCOM_COM_MacFilterObj.{i}.X_BROADCOM_COM_MacFilterCfg.{i}.
 *
 * MDMOID_DEV2_MAC_FILTER_CFG 3591
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    protocol;	/**< Protocol */
    char *    direction;	/**< Direction */
    char *    sourceMAC;	/**< SourceMAC */
    char *    destinationMAC;	/**< DestinationMAC */
} Dev2MacFilterCfgObject;

/*! \brief _Dev2MacFilterCfgObject is used internally to represent Dev2MacFilterCfgObject */
typedef Dev2MacFilterCfgObject _Dev2MacFilterCfgObject;



/*! \brief Obj struct for Device.QoS.
 *
 * MDMOID_DEV2_QOS 1500
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    maxClassificationEntries;	/**< MaxClassificationEntries */
    UINT32    classificationNumberOfEntries;	/**< ClassificationNumberOfEntries */
    UINT32    maxAppEntries;	/**< MaxAppEntries */
    UINT32    appNumberOfEntries;	/**< AppNumberOfEntries */
    UINT32    maxFlowEntries;	/**< MaxFlowEntries */
    UINT32    flowNumberOfEntries;	/**< FlowNumberOfEntries */
    UINT32    maxPolicerEntries;	/**< MaxPolicerEntries */
    UINT32    policerNumberOfEntries;	/**< PolicerNumberOfEntries */
    UINT32    maxQueueEntries;	/**< MaxQueueEntries */
    UINT32    queueNumberOfEntries;	/**< QueueNumberOfEntries */
#ifdef DMP_DEVICE2_QOSSTATS_1
    UINT32    queueStatsNumberOfEntries;	/**< QueueStatsNumberOfEntries */
#endif
    UINT32    maxShaperEntries;	/**< MaxShaperEntries */
    UINT32    shaperNumberOfEntries;	/**< ShaperNumberOfEntries */
    UINT32    defaultForwardingPolicy;	/**< DefaultForwardingPolicy */
    char *    defaultPolicer;	/**< DefaultPolicer */
    char *    defaultQueue;	/**< DefaultQueue */
    SINT32    defaultDSCPMark;	/**< DefaultDSCPMark */
    SINT32    defaultEthernetPriorityMark;	/**< DefaultEthernetPriorityMark */
    char *    availableAppList;	/**< AvailableAppList */
} Dev2QosObject;

/*! \brief _Dev2QosObject is used internally to represent Dev2QosObject */
typedef Dev2QosObject _Dev2QosObject;



/*! \brief Obj struct for Device.QoS.Classification.{i}.
 *
 * MDMOID_DEV2_QOS_CLASSIFICATION 1501
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    UINT32    order;	/**< Order */
    char *    alias;	/**< Alias */
    char *    DHCPType;	/**< DHCPType */
    char *    interface;	/**< Interface */
    UBOOL8    allInterfaces;	/**< AllInterfaces */
    char *    destIP;	/**< DestIP */
    char *    destMask;	/**< DestMask */
    UBOOL8    destIPExclude;	/**< DestIPExclude */
    char *    sourceIP;	/**< SourceIP */
    char *    sourceMask;	/**< SourceMask */
    UBOOL8    sourceIPExclude;	/**< SourceIPExclude */
    SINT32    protocol;	/**< Protocol */
    UBOOL8    protocolExclude;	/**< ProtocolExclude */
    SINT32    destPort;	/**< DestPort */
    SINT32    destPortRangeMax;	/**< DestPortRangeMax */
    UBOOL8    destPortExclude;	/**< DestPortExclude */
    SINT32    sourcePort;	/**< SourcePort */
    SINT32    sourcePortRangeMax;	/**< SourcePortRangeMax */
    UBOOL8    sourcePortExclude;	/**< SourcePortExclude */
    char *    sourceMACAddress;	/**< SourceMACAddress */
    char *    sourceMACMask;	/**< SourceMACMask */
    UBOOL8    sourceMACExclude;	/**< SourceMACExclude */
    char *    destMACAddress;	/**< DestMACAddress */
    char *    destMACMask;	/**< DestMACMask */
    UBOOL8    destMACExclude;	/**< DestMACExclude */
    SINT32    ethertype;	/**< Ethertype */
    UBOOL8    ethertypeExclude;	/**< EthertypeExclude */
    SINT32    SSAP;	/**< SSAP */
    UBOOL8    SSAPExclude;	/**< SSAPExclude */
    SINT32    DSAP;	/**< DSAP */
    UBOOL8    DSAPExclude;	/**< DSAPExclude */
    SINT32    LLCControl;	/**< LLCControl */
    UBOOL8    LLCControlExclude;	/**< LLCControlExclude */
    SINT32    SNAPOUI;	/**< SNAPOUI */
    UBOOL8    SNAPOUIExclude;	/**< SNAPOUIExclude */
    char *    sourceVendorClassID;	/**< SourceVendorClassID */
    HEXBINARY  sourceVendorClassIDv6;	/**< SourceVendorClassIDv6 */
    UBOOL8    sourceVendorClassIDExclude;	/**< SourceVendorClassIDExclude */
    char *    sourceVendorClassIDMode;	/**< SourceVendorClassIDMode */
    char *    destVendorClassID;	/**< DestVendorClassID */
    HEXBINARY  destVendorClassIDv6;	/**< DestVendorClassIDv6 */
    UBOOL8    destVendorClassIDExclude;	/**< DestVendorClassIDExclude */
    char *    destVendorClassIDMode;	/**< DestVendorClassIDMode */
    HEXBINARY  sourceClientID;	/**< SourceClientID */
    UBOOL8    sourceClientIDExclude;	/**< SourceClientIDExclude */
    HEXBINARY  destClientID;	/**< DestClientID */
    UBOOL8    destClientIDExclude;	/**< DestClientIDExclude */
    HEXBINARY  sourceUserClassID;	/**< SourceUserClassID */
    UBOOL8    sourceUserClassIDExclude;	/**< SourceUserClassIDExclude */
    HEXBINARY  destUserClassID;	/**< DestUserClassID */
    UBOOL8    destUserClassIDExclude;	/**< DestUserClassIDExclude */
    HEXBINARY  sourceVendorSpecificInfo;	/**< SourceVendorSpecificInfo */
    UBOOL8    sourceVendorSpecificInfoExclude;	/**< SourceVendorSpecificInfoExclude */
    UINT32    sourceVendorSpecificInfoEnterprise;	/**< SourceVendorSpecificInfoEnterprise */
    SINT32    sourceVendorSpecificInfoSubOption;	/**< SourceVendorSpecificInfoSubOption */
    HEXBINARY  destVendorSpecificInfo;	/**< DestVendorSpecificInfo */
    UBOOL8    destVendorSpecificInfoExclude;	/**< DestVendorSpecificInfoExclude */
    UINT32    destVendorSpecificInfoEnterprise;	/**< DestVendorSpecificInfoEnterprise */
    SINT32    destVendorSpecificInfoSubOption;	/**< DestVendorSpecificInfoSubOption */
    UBOOL8    TCPACK;	/**< TCPACK */
    UBOOL8    TCPACKExclude;	/**< TCPACKExclude */
    UINT32    IPLengthMin;	/**< IPLengthMin */
    UINT32    IPLengthMax;	/**< IPLengthMax */
    UBOOL8    IPLengthExclude;	/**< IPLengthExclude */
    SINT32    DSCPCheck;	/**< DSCPCheck */
    UBOOL8    DSCPExclude;	/**< DSCPExclude */
    SINT32    DSCPMark;	/**< DSCPMark */
    SINT32    ethernetPriorityCheck;	/**< EthernetPriorityCheck */
    UBOOL8    ethernetPriorityExclude;	/**< EthernetPriorityExclude */
    SINT32    ethernetPriorityMark;	/**< EthernetPriorityMark */
    SINT32    VLANIDCheck;	/**< VLANIDCheck */
    UBOOL8    VLANIDExclude;	/**< VLANIDExclude */
    SINT32    outOfBandInfo;	/**< OutOfBandInfo */
    UINT32    forwardingPolicy;	/**< ForwardingPolicy */
    SINT32    trafficClass;	/**< TrafficClass */
    char *    policer;	/**< Policer */
#ifdef DMP_DEVICE2_QOSDYNAMICFLOW_1
    char *    app;	/**< App */
#endif
    SINT32    X_BROADCOM_COM_ClassRate;	/**< X_BROADCOM_COM_ClassRate */
    char *    X_BROADCOM_COM_ClassName;	/**< X_BROADCOM_COM_ClassName */
    SINT32    X_BROADCOM_COM_VLANIDTag;	/**< X_BROADCOM_COM_VLANIDTag */
    char *    X_BROADCOM_COM_egressInterface;	/**< X_BROADCOM_COM_egressInterface */
    SINT32    X_BROADCOM_COM_ClassQueue;	/**< X_BROADCOM_COM_ClassQueue */
    SINT32    X_BROADCOM_COM_ClassPolicer;	/**< X_BROADCOM_COM_ClassPolicer */
    UINT32    X_BROADCOM_COM_ClassKey;	/**< X_BROADCOM_COM_ClassKey */
} Dev2QosClassificationObject;

/*! \brief _Dev2QosClassificationObject is used internally to represent Dev2QosClassificationObject */
typedef Dev2QosClassificationObject _Dev2QosClassificationObject;



/*! \brief Obj struct for Device.QoS.Policer.{i}.
 *
 * MDMOID_DEV2_QOS_POLICER 1504
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    UINT32    committedRate;	/**< CommittedRate */
    UINT32    committedBurstSize;	/**< CommittedBurstSize */
    UINT32    excessBurstSize;	/**< ExcessBurstSize */
    UINT32    peakRate;	/**< PeakRate */
    UINT32    peakBurstSize;	/**< PeakBurstSize */
    char *    meterType;	/**< MeterType */
    char *    possibleMeterTypes;	/**< PossibleMeterTypes */
    char *    conformingAction;	/**< ConformingAction */
    char *    partialConformingAction;	/**< PartialConformingAction */
    char *    nonConformingAction;	/**< NonConformingAction */
    UINT32    totalCountedPackets;	/**< TotalCountedPackets */
    UINT32    totalCountedBytes;	/**< TotalCountedBytes */
#ifdef DMP_DEVICE2_QOSSTATS_1
    UINT32    conformingCountedPackets;	/**< ConformingCountedPackets */
#endif
#ifdef DMP_DEVICE2_QOSSTATS_1
    UINT32    conformingCountedBytes;	/**< ConformingCountedBytes */
#endif
    UINT32    partiallyConformingCountedPackets;	/**< PartiallyConformingCountedPackets */
    UINT32    partiallyConformingCountedBytes;	/**< PartiallyConformingCountedBytes */
#ifdef DMP_DEVICE2_QOSSTATS_1
    UINT32    nonConformingCountedPackets;	/**< NonConformingCountedPackets */
#endif
#ifdef DMP_DEVICE2_QOSSTATS_1
    UINT32    nonConformingCountedBytes;	/**< NonConformingCountedBytes */
#endif
    char *    X_BROADCOM_COM_PolicerName;	/**< X_BROADCOM_COM_PolicerName */
} Dev2QosPolicerObject;

/*! \brief _Dev2QosPolicerObject is used internally to represent Dev2QosPolicerObject */
typedef Dev2QosPolicerObject _Dev2QosPolicerObject;



/*! \brief Obj struct for Device.QoS.Queue.{i}.
 *
 * MDMOID_DEV2_QOS_QUEUE 1505
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    trafficClasses;	/**< TrafficClasses */
    char *    interface;	/**< Interface */
    UBOOL8    allInterfaces;	/**< AllInterfaces */
    UBOOL8    hardwareAssisted;	/**< HardwareAssisted */
    UINT32    bufferLength;	/**< BufferLength */
    UINT32    weight;	/**< Weight */
    UINT32    precedence;	/**< Precedence */
    UINT32    REDThreshold;	/**< REDThreshold */
    UINT32    REDPercentage;	/**< REDPercentage */
    char *    dropAlgorithm;	/**< DropAlgorithm */
    char *    schedulerAlgorithm;	/**< SchedulerAlgorithm */
    SINT32    shapingRate;	/**< ShapingRate */
    UINT32    shapingBurstSize;	/**< ShapingBurstSize */
    SINT32    X_BROADCOM_COM_MinBitRate;	/**< X_BROADCOM_COM_MinBitRate */
    char *    X_BROADCOM_COM_QueueName;	/**< X_BROADCOM_COM_QueueName */
    SINT32    X_BROADCOM_COM_DslLatency;	/**< X_BROADCOM_COM_DslLatency */
    SINT32    X_BROADCOM_COM_PtmPriority;	/**< X_BROADCOM_COM_PtmPriority */
    UINT32    X_BROADCOM_COM_QueueId;	/**< X_BROADCOM_COM_QueueId */
    UINT32    X_BROADCOM_COM_LowClassMaxThreshold;	/**< X_BROADCOM_COM_LowClassMaxThreshold */
    UINT32    X_BROADCOM_COM_HighClassMinThreshold;	/**< X_BROADCOM_COM_HighClassMinThreshold */
    UINT32    X_BROADCOM_COM_HighClassMaxThreshold;	/**< X_BROADCOM_COM_HighClassMaxThreshold */
} Dev2QosQueueObject;

/*! \brief _Dev2QosQueueObject is used internally to represent Dev2QosQueueObject */
typedef Dev2QosQueueObject _Dev2QosQueueObject;



/*! \brief Obj struct for Device.QoS.QueueStats.{i}.
 *
 * MDMOID_DEV2_QOS_QUEUE_STATS 1506
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    queue;	/**< Queue */
    char *    interface;	/**< Interface */
    UINT32    outputPackets;	/**< OutputPackets */
    UINT32    outputBytes;	/**< OutputBytes */
    UINT32    droppedPackets;	/**< DroppedPackets */
    UINT32    droppedBytes;	/**< DroppedBytes */
    UINT32    queueOccupancyPackets;	/**< QueueOccupancyPackets */
    UINT32    queueOccupancyPercentage;	/**< QueueOccupancyPercentage */
} Dev2QosQueueStatsObject;

/*! \brief _Dev2QosQueueStatsObject is used internally to represent Dev2QosQueueStatsObject */
typedef Dev2QosQueueStatsObject _Dev2QosQueueStatsObject;



/*! \brief Obj struct for Device.QoS.Shaper.{i}.
 *
 * MDMOID_DEV2_QOS_SHAPER 1507
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    interface;	/**< Interface */
    SINT32    shapingRate;	/**< ShapingRate */
    UINT32    shapingBurstSize;	/**< ShapingBurstSize */
} Dev2QosShaperObject;

/*! \brief _Dev2QosShaperObject is used internally to represent Dev2QosShaperObject */
typedef Dev2QosShaperObject _Dev2QosShaperObject;



/*! \brief Obj struct for Device.PeriodicStatistics.
 *
 * MDMOID_DEV2_PERIODIC_STAT 1690
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    minSampleInterval;	/**< MinSampleInterval */
    UINT32    maxReportSamples;	/**< MaxReportSamples */
    UINT32    sampleSetNumberOfEntries;	/**< SampleSetNumberOfEntries */
} Dev2PeriodicStatObject;

/*! \brief _Dev2PeriodicStatObject is used internally to represent Dev2PeriodicStatObject */
typedef Dev2PeriodicStatObject _Dev2PeriodicStatObject;



/*! \brief Obj struct for Device.PeriodicStatistics.SampleSet.{i}.
 *
 * MDMOID_DEV2_SAMPLE_SET 1691
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    UBOOL8    enable;	/**< Enable */
#endif
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    char *    status;	/**< Status */
#endif
    char *    name;	/**< Name */
    UINT32    sampleInterval;	/**< SampleInterval */
    UINT32    reportSamples;	/**< ReportSamples */
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    UINT32    fetchSamples;	/**< FetchSamples */
#endif
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    UBOOL8    forceSample;	/**< ForceSample */
#endif
    DATETIME  reportStartTime;	/**< ReportStartTime */
    DATETIME  reportEndTime;	/**< ReportEndTime */
    char *    sampleSeconds;	/**< SampleSeconds */
    UINT32    parameterNumberOfEntries;	/**< ParameterNumberOfEntries */
} Dev2SampleSetObject;

/*! \brief _Dev2SampleSetObject is used internally to represent Dev2SampleSetObject */
typedef Dev2SampleSetObject _Dev2SampleSetObject;



/*! \brief Obj struct for Device.PeriodicStatistics.SampleSet.{i}.Parameter.{i}.
 *
 * MDMOID_DEV2_SAMPLE_PARAMETER 1692
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    char *    alias;	/**< Alias */
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    UBOOL8    enable;	/**< Enable */
#endif
    char *    reference;	/**< Reference */
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    char *    sampleMode;	/**< SampleMode */
#endif
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    SINT32    lowThreshold;	/**< LowThreshold */
#endif
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    SINT32    highThreshold;	/**< HighThreshold */
#endif
    char *    sampleSeconds;	/**< SampleSeconds */
    char *    suspectData;	/**< SuspectData */
    char *    values;	/**< Values */
#ifdef DMP_DEVICE2_PERIODICSTATSADV_1
    UINT32    failures;	/**< Failures */
#endif
} Dev2SampleParameterObject;

/*! \brief _Dev2SampleParameterObject is used internally to represent Dev2SampleParameterObject */
typedef Dev2SampleParameterObject _Dev2SampleParameterObject;



/*! \brief Obj struct for Device.Security.
 *
 * MDMOID_DEV2_SECURITY 1720
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    certificateNumberOfEntries;	/**< CertificateNumberOfEntries */
} Dev2SecurityObject;

/*! \brief _Dev2SecurityObject is used internally to represent Dev2SecurityObject */
typedef Dev2SecurityObject _Dev2SecurityObject;



/*! \brief Obj struct for Device.Security.Certificate.{i}.
 *
 * MDMOID_DEV2_SECURITY_CERTIFICATE 1721
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    DATETIME  lastModif;	/**< LastModif */
    char *    serialNumber;	/**< SerialNumber */
    char *    issuer;	/**< Issuer */
    DATETIME  notBefore;	/**< NotBefore */
    DATETIME  notAfter;	/**< NotAfter */
    char *    subject;	/**< Subject */
    char *    signatureAlgorithm;	/**< SignatureAlgorithm */
    char *    X_BROADCOM_COM_Name;	/**< X_BROADCOM_COM_Name */
} Dev2SecurityCertificateObject;

/*! \brief _Dev2SecurityCertificateObject is used internally to represent Dev2SecurityCertificateObject */
typedef Dev2SecurityCertificateObject _Dev2SecurityCertificateObject;



/*! \brief Obj struct for Device.FAST.
 *
 * MDMOID_DEV2_FAST 3595
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    lineNumberOfEntries;	/**< LineNumberOfEntries */
} Dev2FastObject;

/*! \brief _Dev2FastObject is used internally to represent Dev2FastObject */
typedef Dev2FastObject _Dev2FastObject;



/*! \brief Obj struct for Device.FAST.Line.{i}.
 *
 * MDMOID_DEV2_FAST_LINE 3596
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    name;	/**< Name */
    UINT32    lastChange;	/**< LastChange */
    UINT32    X_BROADCOM_COM_LastChange;	/**< X_BROADCOM_COM_LastChange */
    UINT32    X_BROADCOM_COM_BondingLineNumber;	/**< X_BROADCOM_COM_BondingLineNumber */
    char *    lowerLayers;	/**< LowerLayers */
    UBOOL8    upstream;	/**< Upstream */
    char *    firmwareVersion;	/**< FirmwareVersion */
    char *    linkStatus;	/**< LinkStatus */
    char *    allowedProfiles;	/**< AllowedProfiles */
    char *    currentProfile;	/**< CurrentProfile */
    char *    powerManagementState;	/**< PowerManagementState */
    UINT32    UPBOKLER;	/**< UPBOKLER */
    UINT32    lastTransmittedDownstreamSignal;	/**< LastTransmittedDownstreamSignal */
    UINT32    lastTransmittedUpstreamSignal;	/**< LastTransmittedUpstreamSignal */
    UINT32    UPBOKLE;	/**< UPBOKLE */
    SINT32    lineNumber;	/**< LineNumber */
    UINT32    upstreamMaxBitRate;	/**< UpstreamMaxBitRate */
    UINT32    downstreamMaxBitRate;	/**< DownstreamMaxBitRate */
    SINT32    upstreamNoiseMargin;	/**< UpstreamNoiseMargin */
    SINT32    downstreamNoiseMargin;	/**< DownstreamNoiseMargin */
    SINT32    upstreamAttenuation;	/**< UpstreamAttenuation */
    SINT32    downstreamAttenuation;	/**< DownstreamAttenuation */
    SINT32    upstreamPower;	/**< UpstreamPower */
    SINT32    downstreamPower;	/**< DownstreamPower */
    SINT32    SNRRMCds;	/**< SNRRMCds */
    SINT32    SNRRMCus;	/**< SNRRMCus */
    char *    BITSRMCpsds;	/**< BITSRMCpsds */
    char *    BITSRMCpsus;	/**< BITSRMCpsus */
    UBOOL8    FEXTCANCELds;	/**< FEXTCANCELds */
    UBOOL8    FEXTCANCELus;	/**< FEXTCANCELus */
    UINT32    ETRds;	/**< ETRds */
    UINT32    ETRus;	/**< ETRus */
    UINT32    ATTETRds;	/**< ATTETRds */
    UINT32    ATTETRus;	/**< ATTETRus */
    UINT32    MINEFTR;	/**< MINEFTR */
} Dev2FastLineObject;

/*! \brief _Dev2FastLineObject is used internally to represent Dev2FastLineObject */
typedef Dev2FastLineObject _Dev2FastLineObject;



/*! \brief Obj struct for Device.FAST.Line.{i}.Stats.
 *
 * MDMOID_DEV2_FAST_LINE_STATS 3597
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT64    bytesSent;	/**< BytesSent */
    UINT64    bytesReceived;	/**< BytesReceived */
    UINT64    packetsSent;	/**< PacketsSent */
    UINT64    packetsReceived;	/**< PacketsReceived */
    UINT32    errorsSent;	/**< ErrorsSent */
    UINT32    errorsReceived;	/**< ErrorsReceived */
    UINT32    discardPacketsSent;	/**< DiscardPacketsSent */
    UINT32    discardPacketsReceived;	/**< DiscardPacketsReceived */
    UINT64    eocBytesSent;	/**< EocBytesSent */
    UINT64    eocBytesReceived;	/**< EocBytesReceived */
    UINT64    eocPacketsSent;	/**< EocPacketsSent */
    UINT64    eocPacketsReceived;	/**< EocPacketsReceived */
    UINT64    eocMessagesSent;	/**< EocMessagesSent */
    UINT64    eocMessagesReceived;	/**< EocMessagesReceived */
    UINT32    totalStart;	/**< TotalStart */
    UINT32    showtimeStart;	/**< ShowtimeStart */
    UINT32    lastShowtimeStart;	/**< LastShowtimeStart */
    UINT32    currentDayStart;	/**< CurrentDayStart */
    UINT32    quarterHourStart;	/**< QuarterHourStart */
} Dev2FastLineStatsObject;

/*! \brief _Dev2FastLineStatsObject is used internally to represent Dev2FastLineStatsObject */
typedef Dev2FastLineStatsObject _Dev2FastLineStatsObject;



/*! \brief Obj struct for Device.FAST.Line.{i}.Stats.Total.
 *
 * MDMOID_DEV2_FAST_LINE_STATS_TOTAL 3598
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    LOSS;	/**< LOSS */
    UINT32    LORS;	/**< LORS */
    UINT32    UAS;	/**< UAS */
    UINT32    RTXUC;	/**< RTXUC */
    UINT32    RTXTX;	/**< RTXTX */
    UINT32    successBSW;	/**< SuccessBSW */
    UINT32    successSRA;	/**< SuccessSRA */
    UINT32    successFRA;	/**< SuccessFRA */
    UINT32    successRPA;	/**< SuccessRPA */
    UINT32    successTIGA;	/**< SuccessTIGA */
} Dev2FastLineStatsTotalObject;

/*! \brief _Dev2FastLineStatsTotalObject is used internally to represent Dev2FastLineStatsTotalObject */
typedef Dev2FastLineStatsTotalObject _Dev2FastLineStatsTotalObject;



/*! \brief Obj struct for Device.FAST.Line.{i}.Stats.Showtime.
 *
 * MDMOID_DEV2_FAST_LINE_STATS_SHOWTIME 3599
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    LOSS;	/**< LOSS */
    UINT32    LORS;	/**< LORS */
    UINT32    UAS;	/**< UAS */
    UINT32    RTXUC;	/**< RTXUC */
    UINT32    RTXTX;	/**< RTXTX */
    UINT32    successBSW;	/**< SuccessBSW */
    UINT32    successSRA;	/**< SuccessSRA */
    UINT32    successFRA;	/**< SuccessFRA */
    UINT32    successRPA;	/**< SuccessRPA */
    UINT32    successTIGA;	/**< SuccessTIGA */
} Dev2FastLineStatsShowtimeObject;

/*! \brief _Dev2FastLineStatsShowtimeObject is used internally to represent Dev2FastLineStatsShowtimeObject */
typedef Dev2FastLineStatsShowtimeObject _Dev2FastLineStatsShowtimeObject;



/*! \brief Obj struct for Device.FAST.Line.{i}.Stats.CurrentDay.
 *
 * MDMOID_DEV2_FAST_LINE_STATS_CURRENT_DAY 3601
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    LOSS;	/**< LOSS */
    UINT32    LORS;	/**< LORS */
    UINT32    UAS;	/**< UAS */
    UINT32    RTXUC;	/**< RTXUC */
    UINT32    RTXTX;	/**< RTXTX */
    UINT32    successBSW;	/**< SuccessBSW */
    UINT32    successSRA;	/**< SuccessSRA */
    UINT32    successFRA;	/**< SuccessFRA */
    UINT32    successRPA;	/**< SuccessRPA */
    UINT32    successTIGA;	/**< SuccessTIGA */
} Dev2FastLineStatsCurrentDayObject;

/*! \brief _Dev2FastLineStatsCurrentDayObject is used internally to represent Dev2FastLineStatsCurrentDayObject */
typedef Dev2FastLineStatsCurrentDayObject _Dev2FastLineStatsCurrentDayObject;



/*! \brief Obj struct for Device.FAST.Line.{i}.Stats.QuarterHour.
 *
 * MDMOID_DEV2_FAST_LINE_STATS_QUARTER_HOUR 3602
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    erroredSecs;	/**< ErroredSecs */
    UINT32    severelyErroredSecs;	/**< SeverelyErroredSecs */
    UINT32    LOSS;	/**< LOSS */
    UINT32    LORS;	/**< LORS */
    UINT32    UAS;	/**< UAS */
    UINT32    RTXUC;	/**< RTXUC */
    UINT32    RTXTX;	/**< RTXTX */
    UINT32    successBSW;	/**< SuccessBSW */
    UINT32    successSRA;	/**< SuccessSRA */
    UINT32    successFRA;	/**< SuccessFRA */
    UINT32    successRPA;	/**< SuccessRPA */
    UINT32    successTIGA;	/**< SuccessTIGA */
} Dev2FastLineStatsQuarterHourObject;

/*! \brief _Dev2FastLineStatsQuarterHourObject is used internally to represent Dev2FastLineStatsQuarterHourObject */
typedef Dev2FastLineStatsQuarterHourObject _Dev2FastLineStatsQuarterHourObject;



/*! \brief Obj struct for Device.FAST.Line.{i}.TestParams.
 *
 * MDMOID_DEV2_FAST_LINE_TEST_PARAMS 3603
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UINT32    SNRGds;	/**< SNRGds */
    UINT32    SNRGus;	/**< SNRGus */
    char *    SNRpsds;	/**< SNRpsds */
    char *    SNRpsus;	/**< SNRpsus */
    UINT32    SNRMTds;	/**< SNRMTds */
    UINT32    SNRMTus;	/**< SNRMTus */
    UINT32    ACTINP;	/**< ACTINP */
    UINT32    NFEC;	/**< NFEC */
    SINT32    RFEC;	/**< RFEC */
    UINT32    upstreamCurrRate;	/**< UpstreamCurrRate */
    UINT32    downstreamCurrRate;	/**< DownstreamCurrRate */
    UINT32    ACTINPREIN;	/**< ACTINPREIN */
} Dev2FastLineTestParamsObject;

/*! \brief _Dev2FastLineTestParamsObject is used internally to represent Dev2FastLineTestParamsObject */
typedef Dev2FastLineTestParamsObject _Dev2FastLineTestParamsObject;



/*! \brief Obj struct for Device.MAP.
 *
 * MDMOID_DEV2_MAP 1910
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    UINT32    domainNumberOfEntries;	/**< DomainNumberOfEntries */
} Dev2MapObject;

/*! \brief _Dev2MapObject is used internally to represent Dev2MapObject */
typedef Dev2MapObject _Dev2MapObject;



/*! \brief Obj struct for Device.MAP.Domain.{i}.
 *
 * MDMOID_DEV2_MAP_DOMAIN 1911
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    transportMode;	/**< TransportMode */
    char *    WANInterface;	/**< WANInterface */
    char *    IPv6Prefix;	/**< IPv6Prefix */
    char *    BRIPv6Prefix;	/**< BRIPv6Prefix */
#ifdef DMP_DEVICE2_MAPADV_1
    UINT32    PSIDOffset;	/**< PSIDOffset */
#endif
#ifdef DMP_DEVICE2_MAPADV_1
    UINT32    PSIDLength;	/**< PSIDLength */
#endif
#ifdef DMP_DEVICE2_MAPADV_1
    UINT32    PSID;	/**< PSID */
#endif
#ifdef DMP_DEVICE2_MAPADV_1
    UBOOL8    includeSystemPorts;	/**< IncludeSystemPorts */
#endif
    UINT32    ruleNumberOfEntries;	/**< RuleNumberOfEntries */
} Dev2MapDomainObject;

/*! \brief _Dev2MapDomainObject is used internally to represent Dev2MapDomainObject */
typedef Dev2MapDomainObject _Dev2MapDomainObject;



/*! \brief Obj struct for Device.MAP.Domain.{i}.Rule.{i}.
 *
 * MDMOID_DEV2_MAP_DOMAIN_RULE 1912
 */
typedef struct
{
    MdmObjectId _oid;	/**< for internal use only */
    UBOOL8    enable;	/**< Enable */
    char *    status;	/**< Status */
    char *    alias;	/**< Alias */
    char *    origin;	/**< Origin */
    char *    IPv6Prefix;	/**< IPv6Prefix */
    char *    IPv4Prefix;	/**< IPv4Prefix */
#ifdef DMP_DEVICE2_MAPADV_1
    UINT32    EABitsLength;	/**< EABitsLength */
#endif
    UBOOL8    isFMR;	/**< IsFMR */
} Dev2MapDomainRuleObject;

/*! \brief _Dev2MapDomainRuleObject is used internally to represent Dev2MapDomainRuleObject */
typedef Dev2MapDomainRuleObject _Dev2MapDomainRuleObject;





#endif /* __MDM_OBJECT_H__ */
