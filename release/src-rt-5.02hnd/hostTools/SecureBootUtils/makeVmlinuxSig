#!/bin/sh

profile_dir=$1
brcm_chip=$2
base_btrm_dir=$profile_dir/../../cfe/cfe/board/bcm63xx_btrm
base_data_dir=$base_btrm_dir/data
base_gen3_data_dir=$base_data_dir/gen3_common

if [ "$brcm_chip" == "63268" ] 
then
   # gen 1 secure boot. Kernel is different between unsecure and secure boot 
   openssl dgst -sign $base_data_dir/mfg.pem -keyform pem -sha256 -sigopt rsa_padding_mode:pss -sigopt \
           rsa_pss_saltlen:-1 -out $profile_dir/vmlinux_secureboot.sig $profile_dir/vmlinux_secureboot.lz
else
   if [ "$brcm_chip" == "63138" ] || [ "$brcm_chip" == "63148" ] || [ "$brcm_chip" == "6838" ] || [ "$brcm_chip" == "6848" ] || [ "$brcm_chip" == "63381" ]
   then
      # gen 2 secure boot. Kernel has not diverged (yet) between unsecure and secure boot 
      openssl dgst -sign $base_data_dir/mfg.pem -keyform pem -sha256 -sigopt rsa_padding_mode:pss -sigopt \
              rsa_pss_saltlen:-1 -out $profile_dir/vmlinux.sig $profile_dir/vmlinux.lz
   else
      # gen 3 secure boot. Only field-secure boot will boot Linux. Mfg-secure boot takes a different path.
      # gen 3 secure boot can use one of two different pem files 
      if [ ! -z "$SECURE_BOOT_PROCESS_FLD_OEM_COT" ]
      then
         openssl dgst -sign $base_gen3_data_dir/Krsa-fld.pem -keyform pem -sha256 -sigopt rsa_padding_mode:pss -sigopt \
                 rsa_pss_saltlen:-1 -out $profile_dir/vmlinux.sig $profile_dir/vmlinux.lz
      else
         openssl dgst -sign $base_gen3_data_dir/Krot-fld.pem -keyform pem -sha256 -sigopt rsa_padding_mode:pss -sigopt \
                 rsa_pss_saltlen:-1 -out $profile_dir/vmlinux.sig $profile_dir/vmlinux.lz
      fi
   fi
fi
