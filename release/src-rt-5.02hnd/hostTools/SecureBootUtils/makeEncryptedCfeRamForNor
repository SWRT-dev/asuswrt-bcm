#!/bin/sh

if test $# -lt 1
then
   echo "error: A minimum of two arguments is required"
   echo "usage: makeEncryptedCfeRamForNor  <63268 | 63138 | 63148 | 6838 | 63381>"
   exit 1
fi

cur_dir=`pwd`
hostTools_dir=../../../../hostTools
secbtutils_dir=$hostTools_dir/SecureBootUtils
base_data_dir=../../../cfe/board/bcm63xx_btrm/data
ram_infile=$cur_dir/cfe$1.bin
ram_cmpfile=$cur_dir/cfe$1.cmp
ram_tmpfile=$cur_dir/cfe$1.tmp
ram_outfile=$cur_dir/cfe$1.enc

# create an compressed, encrypted, signed version of the cfe ram

# Compress image
$hostTools_dir/lzmacmd e $ram_infile $ram_tmpfile -d22 -lp2 -lc1
cmpfilesize=`wc -c $ram_tmpfile | cut -d " " -f1`
$secbtutils/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf $cmpfilesize
cat ./size.tmp | head --bytes=4 | cat - $ram_tmpfile > $ram_cmpfile

# Cleanup
rm -f $ram_tmpfile ./size.tmp

# Retrieve the customer encryption key and initialization vector 
bek=`od -Ax -tx1 < $base_data_dir/mfg.ek.bin | cut -d " " -f2-17 | sed "s/ //g" | head --bytes=32`
biv=`od -Ax -tx1 < $base_data_dir/mfg.iv.bin | cut -d " " -f2-17 | sed "s/ //g" | head --bytes=32`

# Encrypt the compressed CFE RAM
openssl enc -aes-128-cbc -K $bek -iv $biv -in $ram_cmpfile -out $ram_outfile

outfilesize=`wc -c $ram_outfile | cut -d " " -f1`
echo "compressed file is $cmpfilesize bytes in size, and compressed, encrypted file is $outfilesize bytes"

exit 0
