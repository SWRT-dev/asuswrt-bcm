#!/bin/sh

if test $# -lt 5
then
   echo "error: A minimum of three arguments is required"
   echo "usage: makeGen3SecureBootCfe <spi | nand> <4908 | 6858> <profile_dir> <unencr | encr-Kaes-mfg | encr-Kaes-fld | encr-Kroe-fld> <oem_fld_no | oem_fld_yes>"
   exit 1
fi

profile_dir=$3
base_bld_dir=$profile_dir/../..
base_btrm_dir=$base_bld_dir/cfe/cfe/board/bcm63xx_btrm
data_dir=$base_btrm_dir/data/gen3_common
tgt_data_dir=$data_dir/../$2
btldr_dir=$base_bld_dir/targets/cfe
hostTools_dir=$base_bld_dir/hostTools
tools_dir=$hostTools_dir/SecureBootUtils

cd $btldr_dir

# Build the 4 cot.bin's
if [ "$2" == "4908" ]
then
   # version 1 of mfgRoeCot does not include the mid
   echo "000000: 01 00 01 00 98 04 00 00" | xxd -r | cat - $tgt_data_dir/mfgRoeData.sig \
      $data_dir/Kroe2-mfg-pub.bin $tgt_data_dir/Kroe2-mfg-priv.enc > ./mfgRoeCot.bin
else
   # version 2 of mfgRoeCot does include the mid (included in signature as well)

   # NOTE: below contains 2 bytes of padding so that everything is word aligned in internal memory
   # just using mid.bin file as 2 bytes of padding
   echo "000000: 01 00 02 00 9c 04 00 00" | xxd -r | cat - $tgt_data_dir/mfgRoeData.sig \
      $data_dir/Kroe2-mfg-pub.bin $tgt_data_dir/Kroe2-mfg-priv.enc $data_dir/mid.bin $data_dir/mid.bin > ./mfgRoeCot.bin
fi



if [ "$4" == "unencr" ]
then

   echo "000000: 02 00 01 00 0a 03 00 00" | xxd -r | cat - $data_dir/mfgOemData.sig $data_dir/mid.bin \
      $data_dir/Krsa-mfg-pub.bin $data_dir/mid+Kaes-mfg.enc > ./mfgOemCot.bin

   if [ "$5" == "oem_fld_no" ]
   then
      echo "000000: 03 00 01 00 0a 01 00 00" | xxd -r | cat - $data_dir/mid.bin $data_dir/Krot-fld-pub.bin > ./fldRotCot.bin
   else
      echo "000000: 03 00 01 00 0a 01 02 00" | xxd -r | cat - $data_dir/mid.bin $data_dir/Krot-fld-pub.bin > ./fldRotCot.bin
   fi

   echo "000000: 04 00 01 00 38 02 00 00" | xxd -r | cat - $data_dir/fldOemData.sig \
      $data_dir/Krsa-fld-pub.bin $data_dir/Kaes-fld.enc > ./fldOemCot.bin

   # use cfe$2rom.bin verbatim
   cp ./cfe$2rom.bin ./cferom.bin

else

   echo "000000: 02 00 01 00 0a 03 01 00" | xxd -r | cat - $data_dir/mfgOemData.sig $data_dir/mid.bin \
      $data_dir/Krsa-mfg-pub.bin $data_dir/mid+Kaes-mfg.enc > ./mfgOemCot.bin

   # cfe rom can be ecrypted by three different AES keys: Kaes-mfg, Kroe-fld, Kaes-fld

   if [ "$5" == "oem_fld_no" ]
   then

      echo "000000: 03 00 01 00 0a 01 01 00" | xxd -r | cat - $data_dir/mid.bin $data_dir/Krot-fld-pub.bin > ./fldRotCot.bin

      # fld cot is not to be used, therefore cfe rom can be encrypted by only Kaes-mfg, or Kroe-fld
      if [ "$4" == "encr-Kaes-fld" ]
      then
         echo Encrypting the cfe rom with Kaes-fld is not valid with the arguement use_oem_fld_no... exiting
	 rm -f *Cot.bin
         exit
      fi

      # Retrieve the proper encryption key and initialization vector 
      if [ "$4" == "encr-Kaes-mfg" ]
      then
         bek=`od -Ax -tx1 < $data_dir/Kaes-mfg-ek.bin | cut -d " " -f2-17 | sed "s/ //g" | head --bytes=32`
         biv=`od -Ax -tx1 < $data_dir/Kaes-mfg-iv.bin | cut -d " " -f2-17 | sed "s/ //g" | head --bytes=32`
      else
         #default to using Kroe-fld as AES key
         bek=`od -Ax -tx1 < $data_dir/Kroe-fld-ek.bin | cut -d " " -f2-17 | sed "s/ //g" | head --bytes=32`
         biv=`od -Ax -tx1 < $data_dir/Kroe-fld-iv.bin | cut -d " " -f2-17 | sed "s/ //g" | head --bytes=32`
      fi

   else

      echo "000000: 03 00 01 00 0a 01 03 00" | xxd -r | cat - $data_dir/mid.bin $data_dir/Krot-fld-pub.bin > ./fldRotCot.bin

      # fld cot is to be used, therefore cfe rom can be encrypted by only Kaes-fld 
      if [ "$4" == "encr-Kaes-mfg" ] || [ "$4" == "encr-Kroe-fld" ]
      then
         echo Encrypting the cfe rom with Kaes-fld is the only valid option along with the arguement use_oem_fld_yes... exiting
	 rm -f *Cot.bin
         exit
      fi

      # Retrieve the proper encryption key and initialization vector 
      bek=`od -Ax -tx1 < $data_dir/Kaes-fld-ek.bin | cut -d " " -f2-17 | sed "s/ //g" | head --bytes=32`
      biv=`od -Ax -tx1 < $data_dir/Kaes-fld-iv.bin | cut -d " " -f2-17 | sed "s/ //g" | head --bytes=32`
   fi

   echo "000000: 04 00 01 00 38 02 01 00" | xxd -r | cat - $data_dir/fldOemData.sig \
      $data_dir/Krsa-fld-pub.bin $data_dir/Kaes-fld.enc > ./fldOemCot.bin

   # create an encrypted version of cfe$2rom.bin
   openssl enc -aes-128-cbc -K $bek -iv $biv -in ./cfe$2rom.bin -out ./cferom.bin

fi

# Done building the 4 cots

# Create the authenticated header 
# dec2bin utility converts a decimal number to it's hex 32 bit binary equivalent 
# The input to dec2bin is a decimal number and cannot by larger than 999999
# The 4 byte binary is written to ./size.tmp 

$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf 28
cat ./size.tmp | head --bytes=4 >  ./authHdr.tmp
cotOfs=` cat ./mfgRoeCot.bin | wc -c`
cotOfs=`expr $cotOfs + 28`
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf $cotOfs
cat ./size.tmp | head --bytes=4 >>  ./authHdr.tmp
cotOfs=` cat ./mfgRoeCot.bin ./mfgOemCot.bin | wc -c`
cotOfs=`expr $cotOfs + 28`
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf $cotOfs
cat ./size.tmp | head --bytes=4 >>  ./authHdr.tmp
cotOfs=` cat ./mfgRoeCot.bin ./mfgOemCot.bin ./fldRotCot.bin | wc -c`
cotOfs=`expr $cotOfs + 28`
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf $cotOfs
cat ./size.tmp | head --bytes=4 >>  ./authHdr.tmp

cat ./mfgRoeCot.bin ./mfgOemCot.bin ./fldRotCot.bin ./fldOemCot.bin >> ./authHdr.tmp
rm -f ./mfgRoeCot.bin ./mfgOemCot.bin ./fldRotCot.bin ./fldOemCot.bin

authHdrLen=` cat ./authHdr.tmp | wc -c`
authHdrLen=`expr $authHdrLen + 12`
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf  $authHdrLen
cat ./size.tmp | head --bytes=4 >  ./authHdrLen.tmp

numBytesToAuth=` cat ./cferom.bin | wc -c`
numBytesToAuth=`expr $numBytesToAuth + $authHdrLen`
echo $numBytesToAuth | $tools_dir/secutil.pl dec2bin
cat ./size.tmp | head --bytes=4 > ./numBytesToAuth.tmp

echo “000000: 01 00 00 00” | xxd -r | cat - ./authHdrLen.tmp ./numBytesToAuth.tmp ./authHdr.tmp > ./authHdr.bin


# Create the unauthenticated header
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf 183954
cat ./size.tmp | head --bytes=4 > ./unsigned_cfesbi.tmp
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf 145257
cat ./size.tmp | head --bytes=4 >> ./unsigned_cfesbi.tmp
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf 1
cat ./size.tmp | head --bytes=4 >> ./unsigned_cfesbi.tmp

if [ "$4" == "unencr" ]
then
   # Both mfg and field mode will be able to use this image
   $tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf 6
else
   if [ "$4" == "encr-Kaes-mfg" ]
   then
      # cferom is encrypted with Kaes-mfg, so this image should only be detected while in mfg-secure mode
      $tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf 2
   else
      # cferom is encrypted with either Kaes-fld or Kroe-fld, so this image should only be detected while in fld-secure mode
      $tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf 4
   fi
fi

cat ./size.tmp | head --bytes=4 >> ./unsigned_cfesbi.tmp
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf 28
cat ./size.tmp | head --bytes=4 >> ./unsigned_cfesbi.tmp
imageSize=`expr $numBytesToAuth + 28 + 516`   
$tools_dir/secutil.pl dec2bin --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf $imageSize
cat ./size.tmp | head --bytes=4 >> ./unsigned_cfesbi.tmp
$tools_dir/secutil.pl --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf crc2bin
cat ./unsigned_cfesbi.tmp ./crc.tmp > ./unauthHdr.bin

# Create the Trailer: 2 signatures and a crc
#first signature
cat ./authHdr.bin ./cferom.bin > ./unsigned_cfesbi.tmp

openssl dgst -sign $data_dir/Krsa-mfg.pem -keyform pem -sha256 -sigopt rsa_padding_mode:pss -sigopt \
      rsa_pss_saltlen:-1 -out ./mfgSig.tmp ./unsigned_cfesbi.tmp

# second signature: use the first openssl line below if only the SOTP credentials will be used. Use the second
# openssl line below if the SOTP credentials are not the final credentials but rather the flash-based
# OEM credentials will be used
if [ "$5" == "oem_fld_no" ]
then
   openssl dgst -sign $data_dir/Krot-fld.pem -keyform pem -sha256 -sigopt rsa_padding_mode:pss -sigopt \
      rsa_pss_saltlen:-1 -out ./fldSig.tmp ./unsigned_cfesbi.tmp
else
   openssl dgst -sign $data_dir/Krsa-fld.pem -keyform pem -sha256 -sigopt rsa_padding_mode:pss -sigopt \
      rsa_pss_saltlen:-1 -out ./fldSig.tmp ./unsigned_cfesbi.tmp
fi

# Create a CRC across the entire BI image (4 byte crc in binary format will be stored in the file ./crc.tmp)
# crc2bin expects a local file called unsigned_cfesbi.tmp
$tools_dir/secutil.pl --config=${HOSTTOOLS_DIR}/local_install/conf/${TOOLCHAIN_PREFIX}.conf crc2bin

cat ./fldSig.tmp ./mfgSig.tmp ./crc.tmp > ./trailer.bin

# Create the headered image 
cat ./unauthHdr.bin ./authHdr.bin ./cferom.bin ./trailer.bin > ./cfe$2bi.bin

# clean up
rm -f ./unauthHdr.bin ./authHdr.bin ./trailer.bin ./cferom.bin
rm -f *.tmp

# rename BI .bin 
if [ "$1" == "spi" ]
then
   mv ./cfe$2bi.bin ./cfe$2bi_nor.bin
else
   mv ./cfe$2bi.bin ./cfe$2bi_nand.bin
fi
