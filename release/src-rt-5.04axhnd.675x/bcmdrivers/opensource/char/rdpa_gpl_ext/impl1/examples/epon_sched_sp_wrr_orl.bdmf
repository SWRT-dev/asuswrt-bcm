#
# <:copyright-BRCM:2013:DUAL/GPL:standard
# 
#    Copyright (c) 2013 Broadcom 
#    All Rights Reserved
# 
# Unless you and Broadcom execute a separate written software license
# agreement governing use of this software, this software is licensed
# to you under the terms of the GNU General Public License version 2
# (the "GPL"), available at http://www.broadcom.com/licenses/GPLv2.php,
# with the following added to such license:
# 
#    As a special exception, the copyright holders of this software give
#    you permission to link this software with independent modules, and
#    to copy and distribute the resulting executable under terms of your
#    choice, provided that you also meet, for each linked independent
#    module, the terms and conditions of the license of that module.
#    An independent module is a module which is not derived from this
#    software.  The special exception does not apply to any modifications
#    of the software.
# 
# Not withstanding the above, under no circumstances may you combine
# this software in any way with any other Broadcom software provided
# under a license other than the GPL, without Broadcom's express prior
# written consent.
# 
# :> 
#

# RDPA test
# - EPON mode
# - SP root TM with underlying SP and WRR subsidiaries matching LLID sub-channels 
# +overall rate limiter
#
# wan_port - egress_tm1(level=group, mode=sp)
#	egress_tm2(level=queue,mode=disable)
#		queue[0]=128
#	egress_tm3(level=queue,mode=disable)
#		queue[0]=128
#	egress_tm4(level=queue,mode=disable)
#		queue[0]=128
#	egress_tm5(level=queue,mode=disable)
#		queue[0]=128
#	egress_tm6(level=group,mode=wrr)
#		egress_tm7(level=queue,mode=disable,w=10)
#			queue[0]=128
#		egress_tm8(level=queue,mode=disable,w=20)
#			queue[0]=128
#		egress_tm9(level=queue,mode=disable,w=30)
#			queue[0]=128
#	egress_tm10(level=queue,mode=disable)
#		queue[0]=128
#	egress_tm11(level=queue,mode=disable)
#		queue[0]=128
#

/bdmf
trace debug egress_tm
new system/init_cfg=<wan_type=epon>,cfg=<car_mode=true>

new port/index=wan0

# llid object
new llid/index=0

# control egress_tm
new egress_tm/dir=us,index=0,level=queue,mode=sp,queue_cfg[0]={queue_id=1000,drop_threshold=128}
conf llid/index=0 control_egress_tm={egress_tm/dir=us,index=0}

# root egress_tm
new egress_tm/dir=us,index=1,level=egress_tm,mode=sp

# All single-queue schedulers (see diagram in the beginning of the script)
new egress_tm/dir=us,index=2,level=queue,mode=sp,queue_cfg[0]={drop_threshold=128}
new egress_tm/dir=us,index=3,level=queue,mode=sp,queue_cfg[0]={drop_threshold=128}
new egress_tm/dir=us,index=4,level=queue,mode=sp,queue_cfg[0]={drop_threshold=128}
new egress_tm/dir=us,index=5,level=queue,mode=sp,queue_cfg[0]={drop_threshold=128}
new egress_tm/dir=us,index=10,level=queue,mode=sp,queue_cfg[0]={drop_threshold=128}
new egress_tm/dir=us,index=11,level=queue,mode=sp,queue_cfg[0]={drop_threshold=128}

# WRR group
new egress_tm/dir=us,index=6,level=egress_tm,mode=wrr

new egress_tm/dir=us,index=7,level=queue,mode=disable,weight=10
conf egress_tm/dir=us,index=7 queue_cfg[0]={drop_threshold=128}

new egress_tm/dir=us,index=8,level=queue,mode=disable,weight=20
conf egress_tm/dir=us,index=8 queue_cfg[0]={drop_threshold=128}

new egress_tm/dir=us,index=9,level=queue,mode=disable,weight=30
conf egress_tm/dir=us,index=9 queue_cfg[0]={drop_threshold=128}

conf egress_tm/dir=us,index=6 subsidiary[0]={egress_tm/dir=us,index=7}
conf egress_tm/dir=us,index=6 subsidiary[1]={egress_tm/dir=us,index=8}
conf egress_tm/dir=us,index=6 subsidiary[2]={egress_tm/dir=us,index=9}

# Connect everything to the root
conf egress_tm/dir=us,index=1 subsidiary[0]={egress_tm/dir=us,index=2}
conf egress_tm/dir=us,index=1 subsidiary[1]={egress_tm/dir=us,index=3}
conf egress_tm/dir=us,index=1 subsidiary[2]={egress_tm/dir=us,index=4}
conf egress_tm/dir=us,index=1 subsidiary[3]={egress_tm/dir=us,index=5}
conf egress_tm/dir=us,index=1 subsidiary[4]={egress_tm/dir=us,index=6}
conf egress_tm/dir=us,index=1 subsidiary[5]={egress_tm/dir=us,index=10}
conf egress_tm/dir=us,index=1 subsidiary[6]={egress_tm/dir=us,index=11}

# Attach egress_tm to port
conf port/index=wan0 tm_cfg={egress_tm={egress_tm/dir=us,index=1}}

# Configure some rate limiting
conf egress_tm/dir=us,index=8 rl={af=1000}

# Configure overall RL
new egress_tm/dir=us,index=20,level=egress_tm,mode=disable,overall_rl=true
conf egress_tm/dir=us,index=20 rl={af=5000}

link llid/index=0 egress_tm/dir=us,index=20

# Send packet
conf cpu/index=host send_packet[{port=wan0,wan_flow=0,queue_id=5,as=skb}]=00112233445500aabbccddee0030001122334455667788

#
# At this point configuration is complete
# The rest of this script demonstrates dynamic re-configuration
#
ex egress_tm/dir=us,index=6

# Detach TM3
conf egress_tm/dir=us,index=1 subsidiary[4]=null

# Re-attach TM3
conf egress_tm/dir=us,index=1 subsidiary[4]={egress_tm/dir=us,index=6}

ex egress_tm/dir=us,index=0
ex egress_tm/dir=us,index=1
ex llid/index=0

# disable/enable LLID control 
conf llid/index=0 control_enable=false
conf llid/index=0 control_enable=true

# Add IP flow
new ip_class
attr/add ip_class flow string key={dir=us,src_ip=192.168.2.100,dst_ip=192.168.2.10,prot=17,src_port=1000,dst_port=2000},result={action=forward,trap_reason=conn_trap0,nat_port=1001,nat_ip=192.168.88.10,port=wan0,wan_flow=0,queue_id=3,ovid_offset=offset_12,l2_head_size=18,action_vec=nat+ttl,l2_header=0000000000b10000000000a1810001000800}


/quit
