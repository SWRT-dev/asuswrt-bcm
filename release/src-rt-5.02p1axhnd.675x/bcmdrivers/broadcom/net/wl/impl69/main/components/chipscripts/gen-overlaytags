#!/usr/bin/perl
#
# gen-overlaytags
#
# autogenerate the global tag values to enable overlay lookup on the host
# input file is the first command line argument (e.g., overlays.in)
# output file is overlaytags.c
#
# The overlay tag values consist of:
# - xxx_vals: array of two IOCTL values for overlay lookup
# - xxx_idx:  overlay region index value and misc overlay flag bits
# - xxx_name: character string for iovar name lookup
# (where xxx is the first symbol to appear in the overlay - data or function)
#
# $ Copyright Broadcom Corporation $
#
# <<Broadcom-WL-IPTag/Proprietary:>>
#
# $Id: gen-overlaytags,v 1.3 2010-02-05 02:36:38 sgsiener Exp $
#

my $fnovlytbl = "nil";
if (@ARGV >= 1) {
    $fnovlytbl = $ARGV[0];
}

# load overlay file contents into memory
my @overlays = ();
if ($fnovlytbl ne "nil") {
    open($fnovlytbl, "<$fnovlytbl") or die "Unable to open file $fnovlytbl: $!\n";
    @overlays = split(/\n/, join('', <$fnovlytbl>));
close($fnovlytbl);
}

if (@overlays == 0) {
    printf("\t\t/* No OVERLAY entries from overlay input file %s */\n", $fnovlytbl);
    next;
}

open($fhoverlaytags, ">overlaytags.c") or die "Unable to open file overlaytags.c: $!\n";
print $fhoverlaytags sprintf("#include <typedefs.h>\n");
print $fhoverlaytags sprintf("#include <wlioctl.h>\n\n");
print $fhoverlaytags sprintf("/* --- THIS FILE IS AUTOGENERATED -- DO NOT EDIT! --- */\n\n");

my $or = "";
my $on = "";
my $region = "";
my $overlaynum = "";
my $overlayname = "";
# produce all OVERLAY sections
for (my $o = 0; $o < @overlays; $o ++) {
    # read the overlay def from the list (input from the file)
    @tokens = split(/\s+/, $overlays[$o]);
    # skip blank line
    if (@tokens == 0) {
	next;
    }
    $region = $tokens[0];
    # skip comments
    if (index($region, '#') == 0) {
	next;
    }
    if (@tokens < 3) {
	die "Invalid format in file $fnovlytbl\n";
    }
    $overlaynum = $tokens[1];
    $overlayname = $tokens[2];

    # new overlay region
    if ($or ne $region) {
	$or = $region;
	$on = "";
    }
    if ($on ne $overlaynum) {
	# write the associated tag data to the overlaytags.c file
	if (@tokens < 5) {
	    die "Invalid format in file $fnovlytbl\n";
	}
	print $fhoverlaytags sprintf("uint32 BCMOVERLAY%sDATA(%s_vals)[] = {%s, %s};\n", $or, $overlayname, $tokens[3], $tokens[4]);
	print $fhoverlaytags sprintf("uint32 BCMOVERLAY%sDATA(%s_idx) = %s;\n", $or, $overlayname, $or);
	if (@tokens > 5) {
	    print $fhoverlaytags sprintf("char   BCMOVERLAY%sDATA(%s_name)[] = { \"%s\" };\n\n", $or, $overlayname, $tokens[5]);
	}
	else {
	    print $fhoverlaytags sprintf("char   BCMOVERLAY%sDATA(%s_name)[] = { \"\" };\n\n", $or, $overlayname);
	}
	$on = $overlaynum;
    }
}
print $fhoverlaytags sprintf("/* END */\n");
close($fhoverlaytags);
